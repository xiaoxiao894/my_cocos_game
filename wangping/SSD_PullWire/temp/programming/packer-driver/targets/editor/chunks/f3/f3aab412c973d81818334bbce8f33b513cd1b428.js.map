{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/Camera/CameraMain.ts"],"names":["_decorator","Camera","Component","Quat","v3","Vec3","tween","CCInteger","DataManager","EventManager","EventName","ccclass","property","tempPos","CameraMain","initialPos","initialRotation","_tweenAni","start","Instance","mainCamera","node","worldPosition","clone","getRotation","onEnable","inst","on","GameOver","moveCenterAndScale","onDisable","off","moveToCenter","realMove","distence","distance","t","speed","to","stopTweenAni","stop","unschedule","scheduleOnce","orgHeight","camera","orthoHeight","easing","onUpdate","target","ratio"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, Quat, v3, Vec3, Node, tween, CCInteger, Tween } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { EventManager } from '../Global/EventManager';\r\nimport { EventName } from '../Common/Enum';\r\nconst { ccclass, property } = _decorator;\r\n\r\nlet tempPos: Vec3 = v3();\r\n\r\n@ccclass('CameraMain')\r\nexport class CameraMain extends Component {\r\n\r\n    @property(Camera)\r\n    camera: Camera | null = null;\r\n    @property(CCInteger)\r\n    speed: number = 0.7;\r\n    @property(CCInteger)\r\n    delayTime: number = 5;\r\n\r\n    private initialPos: Vec3 = v3();\r\n    private initialRotation: Quat = new Quat();\r\n    private _tweenAni: Tween<Node>;\r\n\r\n    start() {\r\n        DataManager.Instance.mainCamera = this;\r\n\r\n        // 记录初始位置\r\n        this.initialPos = this.node.worldPosition.clone();\r\n        // 记录初始旋转角度（保持角度不变）\r\n        this.node.getRotation(this.initialRotation);\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        EventManager.inst.on(EventName.GameOver, this.moveCenterAndScale, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventManager.inst.off(EventName.GameOver, this.moveCenterAndScale, this);\r\n    }\r\n\r\n    //回到中心位置\r\n    public moveToCenter() {\r\n       // this.scheduleOnce(this.realMove, this.delayTime);\r\n    }\r\n\r\n    private realMove() {\r\n        let distence: number = Vec3.distance(this.node.worldPosition, this.initialPos);\r\n        let t: number = this.speed * distence;\r\n        this._tweenAni = tween(this.node).to(t, { worldPosition: this.initialPos }).start();\r\n    }\r\n\r\n    //停止回到中心位\r\n    public stopTweenAni() {\r\n        if (this._tweenAni) {\r\n            this._tweenAni.stop();\r\n        }\r\n        this.unschedule(this.realMove);\r\n    }\r\n\r\n    //移动摄像机并且升高高度\r\n    public moveCenterAndScale() {\r\n        this.scheduleOnce(() => {\r\n            const orgHeight: number = this.camera.orthoHeight;\r\n            this._tweenAni = tween(this.node)\r\n                .to(0.5, { worldPosition: this.initialPos }, {\r\n                    easing: 'sineOut', // 使用缓动函数使动画更自然\r\n                    onUpdate: (target, ratio) => {\r\n                        // 动态调整正交摄像机大小\r\n                        this.camera.orthoHeight = orgHeight + ratio * 15;\r\n                    }\r\n                }).start();\r\n        }, 2)\r\n\r\n    }\r\n}\r\n"]}