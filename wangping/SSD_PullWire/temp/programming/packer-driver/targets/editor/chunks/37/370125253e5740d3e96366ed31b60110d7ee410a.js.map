{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/core/MapBeast/OilDrumEffect.ts"],"names":["_decorator","CCFloat","Component","ccclass","property","OilDrumEffect","start","allHide","siblings","node","children","forEach","sibling","index","active","hideChildrenSequentially","scheduleOnce","singleTime","showChildrenSequentially","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,O,OAAAA,O;AAASC,MAAAA,S,OAAAA,S;;;;;;;;;OACxB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;+BAGjBK,a,WADZF,OAAO,CAAC,eAAD,C,UAGHC,QAAQ,CAACH,OAAD,C,2BAHb,MACaI,aADb,SACmCH,SADnC,CAC6C;AAAA;AAAA;;AAAA;AAAA;;AAIzCI,QAAAA,KAAK,GAAG;AACJ;AACA,eAAKC,OAAL;AAEH;;AAEDA,QAAAA,OAAO,GAAG;AACN,gBAAMC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,QAA3B;AACAF,UAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjCD,YAAAA,OAAO,CAACE,MAAR,GAAiB,KAAjB;AACH,WAFD;AAIH,SAhBwC,CAiBzC;;;AACAC,QAAAA,wBAAwB,GAAG;AACvB,gBAAMP,QAAQ,GAAG,KAAKC,IAAL,CAAUC,QAA3B;AACAF,UAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,iBAAKG,YAAL,CAAkB,MAAM;AACpBJ,cAAAA,OAAO,CAACE,MAAR,GAAiB,KAAjB;AACH,aAFD,EAEG,KAAKG,UAAL,IAAmBJ,KAAK,GAAG,CAA3B,CAFH;AAGH,WAJD;AAKH,SAzBwC,CA2BzC;;;AACAK,QAAAA,wBAAwB,GAAG;AACvB,gBAAMV,QAAQ,GAAG,KAAKC,IAAL,CAAUC,QAA3B;AACAF,UAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,iBAAKG,YAAL,CAAkB,MAAM;AACpBJ,cAAAA,OAAO,CAACE,MAAR,GAAiB,IAAjB;AACH,aAFD,EAEG,KAAKG,UAAL,IAAmBJ,KAAK,GAAG,CAA3B,CAFH;AAGH,WAJD;AAKA,eAAKG,YAAL,CAAkB,MAAI;AAClB,iBAAKT,OAAL;AACH,WAFD;AAGH;;AAEDY,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACtB;AACH;;AA1CwC,O;;;;;iBAGpB,G","sourcesContent":["import { _decorator, CCFloat, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('OilDrumEffect')\r\nexport class OilDrumEffect extends Component {\r\n\r\n    @property(CCFloat)\r\n    singleTime: number = 0.2;\r\n    start() {\r\n        // 先隐藏所有子节点\r\n        this.allHide();\r\n\r\n    }\r\n\r\n    allHide() {\r\n        const siblings = this.node.children;\r\n        siblings.forEach((sibling, index) => {\r\n            sibling.active = false;\r\n        });\r\n\r\n    }\r\n    // 逐个隐藏子节点\r\n    hideChildrenSequentially() {\r\n        const siblings = this.node.children;\r\n        siblings.forEach((sibling, index) => {\r\n            this.scheduleOnce(() => {\r\n                sibling.active = false;\r\n            }, this.singleTime * (index + 1));\r\n        });\r\n    }\r\n\r\n    // 逐个显示子节点\r\n    showChildrenSequentially() {\r\n        const siblings = this.node.children;\r\n        siblings.forEach((sibling, index) => {\r\n            this.scheduleOnce(() => {\r\n                sibling.active = true;\r\n            }, this.singleTime * (index + 1));\r\n        });\r\n        this.scheduleOnce(()=>{\r\n            this.allHide();\r\n        })\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        // 不需要更新逻辑\r\n    }\r\n}"]}