{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/core/CloudEffctFade.ts"],"names":["_decorator","CCFloat","Color","Component","MeshRenderer","ccclass","property","CloudEffctFade","type","tooltip","_materials","_fadeStarted","_elapsedTime","initCloud","console","log","siblings","node","children","forEach","sibling","index","name","collectMaterials","startFade","targetNode","getChildByName","error","meshRenderer","getComponent","material","push","setProperty","length","update","deltaTime","progress","Math","min","duration","alpha","floor","currentColor","start"],"mappings":"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","sourcesContent":["import { _decorator, CCFloat, Color, Component, Material, MeshRenderer, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CloudEffctFade')\r\nexport class CloudEffctFade extends Component {\r\n    @property({ type: CCFloat, tooltip: '渐变持续时间（秒）' })\r\n    private duration: number = 10;\r\n\r\n    private _materials: Material[] = []; // 存储所有需要渐变的材质\r\n    private _fadeStarted: boolean = false; // 标记是否开始渐变\r\n    private _elapsedTime: number = 0; // 已过去的时间\r\n\r\n    initCloud() {\r\n        console.log(\"同级节点 ceshi\");\r\n        const siblings: Node[] = this.node.children;\r\n\r\n        // 收集所有需要渐变的材质\r\n        siblings.forEach((sibling, index) => {\r\n            console.log(`同级节点 ${index + 1}: ${sibling.name}`);\r\n            this.collectMaterials(sibling);\r\n        });\r\n\r\n        // 开始渐变\r\n        this.startFade();\r\n    }\r\n\r\n    collectMaterials(sibling: Node) {\r\n        const targetNode = sibling.getChildByName(\"Plane001\");\r\n        if (!targetNode) {\r\n            console.error(\"未找到名为'Plane001'的子节点\");\r\n            return;\r\n        }\r\n\r\n        const meshRenderer = targetNode.getComponent(MeshRenderer);\r\n        if (!meshRenderer?.material) {\r\n            console.error(\"需要 MeshRenderer 组件和有效材质\");\r\n            return;\r\n        }\r\n\r\n        // 存储材质并设置初始透明度为完全不透明\r\n        const material = meshRenderer.material;\r\n        this._materials.push(material);\r\n        material.setProperty('albedo', new Color(255, 255, 255, 255));\r\n    }\r\n\r\n    startFade() {\r\n        if (this._fadeStarted || this._materials.length === 0) return;\r\n        \r\n        this._fadeStarted = true;\r\n        this._elapsedTime = 0;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (!this._fadeStarted || this._materials.length === 0) return;\r\n\r\n        // 累加已过去的时间\r\n        this._elapsedTime += deltaTime;\r\n        \r\n        // 计算渐变进度（0-1范围）\r\n        const progress = Math.min(this._elapsedTime / this.duration, 1);\r\n        \r\n        // 根据进度计算当前透明度（从255到0）\r\n        const alpha = Math.floor(255 * (1 - progress));\r\n        const currentColor = new Color(255, 255, 255, alpha);\r\n        \r\n        // 更新所有材质的透明度\r\n        this._materials.forEach(material => {\r\n            material.setProperty('albedo', currentColor);\r\n        });\r\n        \r\n        // 渐变完成后停止更新\r\n        if (progress >= 1) {\r\n            this._fadeStarted = false;\r\n            console.log(\"所有材质透明度渐变完成\");\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.initCloud();\r\n    }\r\n} "]}