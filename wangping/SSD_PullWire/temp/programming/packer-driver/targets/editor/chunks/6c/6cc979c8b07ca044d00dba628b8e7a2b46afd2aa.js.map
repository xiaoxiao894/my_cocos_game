{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/SceneManger.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","EntityTypeEnum","EventName","PrefabPathEnum","ResourceManager","DataManager","EventManager","super_html_playable","ccclass","property","google_play","appstore","SceneManager","_arrowNode","start","Instance","sceneManger","set_google_play_url","set_app_store_url","Promise","all","loadRes","initGame","list","type","p","then","prefabMap","set","push","socketNodes","arrowNodes","createArrow","get","Arrow","parent","arrowParent","scheduleOnce","inst","emit","ArrowTargetVectorUpdate","ropeManager","endNodes","getWorldPosition","clone","checkBuildCanUpdate","leftSocket","length","console","log","TowerUpgradeButtonShow"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\r\nimport { EntityTypeEnum, EventName, PrefabPathEnum } from './Common/Enum';\r\nimport { ResourceManager } from './Global/ResourceManager';\r\nimport { DataManager } from './Global/DataManager';\r\nimport { EventManager } from './Global/EventManager';\r\nimport super_html_playable from '../super_html_playable';\r\nconst { ccclass, property } = _decorator;\r\nconst google_play = \"https://play.google.com/store/apps/details?id=com.funplus.ts.global\";\r\nconst appstore = \"https://play.google.com/store/apps/details?id=com.funplus.ts.global\";\r\n\r\n\r\n@ccclass('SceneManager')\r\nexport class SceneManager extends Component {\r\n\r\n    @property(Node)\r\n    socketNodes: Node[] = [];\r\n\r\n    @property(Node)\r\n    arrowNodes: Node[] = [];\r\n\r\n    @property(Node)\r\n    arrowParent: Node = null;\r\n\r\n    private _arrowNode: Node = null;\r\n\r\n    async start() {\r\n        DataManager.Instance.sceneManger = this;\r\n        super_html_playable.set_google_play_url(google_play);\r\n        super_html_playable.set_app_store_url(appstore);\r\n        await Promise.all([this.loadRes()])\r\n        this.initGame();\r\n    }\r\n\r\n    async loadRes() {\r\n        const list = [];\r\n        for (const type in PrefabPathEnum) {\r\n            const p = ResourceManager.Instance.loadRes(PrefabPathEnum[type], Prefab).then((Prefab) => {\r\n                DataManager.Instance.prefabMap.set(type, Prefab)\r\n            })\r\n            list.push(p);\r\n        }\r\n\r\n        await Promise.all(list);\r\n    }\r\n\r\n\r\n    initGame() {\r\n        DataManager.Instance.socketNodes = this.socketNodes;\r\n        DataManager.Instance.arrowNodes = this.arrowNodes;\r\n        this.createArrow();\r\n    }\r\n\r\n    private createArrow() {\r\n        if (!this._arrowNode) {\r\n            this._arrowNode = instantiate(DataManager.Instance.prefabMap.get(EntityTypeEnum.Arrow));\r\n            this._arrowNode.parent = this.arrowParent;\r\n            this.scheduleOnce(() => {\r\n                EventManager.inst.emit(EventName.ArrowTargetVectorUpdate, DataManager.Instance.ropeManager.endNodes[0].getWorldPosition().clone());\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public checkBuildCanUpdate() {\r\n        if (DataManager.Instance.leftSocket.length === 2) {\r\n            console.log('升级塔 ui出现');\r\n            EventManager.inst.emit(EventName.TowerUpgradeButtonShow);\r\n        }\r\n    }\r\n}\r\n\r\n"]}