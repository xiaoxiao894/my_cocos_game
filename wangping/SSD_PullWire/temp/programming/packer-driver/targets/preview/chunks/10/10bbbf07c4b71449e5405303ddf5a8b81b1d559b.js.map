{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/core/PalingAnimation.ts"],"names":["_decorator","CCBoolean","CCFloat","Component","Node","tween","Vec3","ccclass","property","PalingAnimation","type","tooltip","visible","enableBounce","activeTweens","startAnimation","Promise","resolve","stopAllAnimations","nodeToAnimate","targetNode","node","active","siblings","children","length","forEach","sibling","originalPosition","position","clone","x","y","startOffsetY","z","playAnimationSequentially","startMoveDown","tweenInstance","by","duration","easing","onStart","onComplete","start","startBounce","startPos","peakPos","bounceHeight","overshootPos","overshootDistance","to","totalDuration","upPhaseRatio","downPhaseRatio","bounceBackRatio","call","index","push","stop","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, CCBoolean, CCFloat, Component, Node, Tween, tween, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PalingAnimation')\r\nexport class PalingAnimation extends Component {\r\n    // 存储所有活动的Tween\r\n    private activeTweens: Tween<Node>[] = [];\r\n\r\n    // 动画配置参数\r\n    @property({ type: Node, tooltip: '要显示动画的子节点组，如果为空则使用当前节点的所有子节点' })\r\n    public targetNode: Node = null;\r\n\r\n    @property({ tooltip: '动画持续时间(秒)' })\r\n    public duration: number = 0.2;\r\n\r\n    @property({ tooltip: '起始位置Y轴偏移量' })\r\n    public startOffsetY: number = 3;\r\n\r\n    /**\r\n     * 开始播放连续显示动画，并返回动画完成的Promise\r\n     */\r\n    public startAnimation(): Promise<void> {\r\n        return new Promise((resolve) => {\r\n            // 停止所有正在运行的动画\r\n            this.stopAllAnimations();\r\n\r\n            // 获取要处理的节点\r\n            const nodeToAnimate = this.targetNode || this.node;\r\n\r\n            // 确保节点是激活状态\r\n            if (!nodeToAnimate.active) {\r\n                nodeToAnimate.active = true;\r\n            }\r\n\r\n            const siblings = nodeToAnimate.children;\r\n\r\n            // 如果没有子节点，直接resolve\r\n            if (siblings.length === 0) {\r\n                resolve();\r\n                return;\r\n            }\r\n\r\n            // 首先将所有子节点移动到初始位置\r\n            siblings.forEach(sibling => {\r\n                const originalPosition = sibling.position.clone();\r\n                sibling.position = new Vec3(\r\n                    originalPosition.x,\r\n                    originalPosition.y - this.startOffsetY,\r\n                    originalPosition.z\r\n                );\r\n                if(sibling.active == false){\r\n                    sibling.active = true;\r\n                }\r\n            });\r\n\r\n            // 递归播放动画，并在最后一个动画完成时resolve\r\n            this.playAnimationSequentially(siblings, 0, resolve);\r\n        });\r\n    }\r\n    //从地底向上出现\r\n    public startMoveDown() {\r\n        const originalPosition = new Vec3(\r\n            this.node.position.x,\r\n            this.node.position.y - this.startOffsetY,\r\n            this.node.position.z,\r\n        );\r\n        const tweenInstance = tween(this.node)\r\n            .by(this.duration, { position: originalPosition }, {\r\n                easing: \"quadIn\",\r\n                onStart: () => {\r\n                    this.node.active = true; // 确保节点激活\r\n                },\r\n                onComplete: () => {\r\n                    this.node.active = false;\r\n                    // 当前动画完成后，递归播放下一个\r\n                    // this.playAnimationSequentially(siblings, index + 1, resolve);\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n    @property({ type: CCBoolean, tooltip: '跳跃效果开始参数调节 只有跳跃效果生效' })\r\n    public enableBounce: boolean = false;\r\n\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '弹跳动画总时长 ' })\r\n    public totalDuration: number = 1.0;\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '弹跳高度 跳跃效果生效' })\r\n    public bounceHeight: number = 3;\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '下落时超过起始点的距离 ' })\r\n    public overshootDistance: number = 2;\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '上升阶段占总时间的比例 ' })\r\n    public upPhaseRatio: number = 0.4;\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '下降阶段占总时间的比例 ' })\r\n    public downPhaseRatio: number = 0.6;\r\n\r\n    @property({ type: CCFloat, visible() { return this.enableBounce; }, tooltip: '回弹阶段占总时间的比例 ' })\r\n    public bounceBackRatio: number = 0.1;\r\n    //有跳跃的效果\r\n    startBounce() {\r\n        // 如果没有指定目标节点，使用当前组件所在节点\r\n        const node = this.targetNode || this.node;\r\n\r\n        // 确保节点处于激活状态\r\n        node.active = true;\r\n\r\n        // 获取当前位置作为起始点\r\n        const startPos = new Vec3(node.position.x, node.position.y, node.position.z);\r\n\r\n        // 计算弹跳的最高点\r\n        const peakPos = new Vec3(startPos.x, startPos.y + this.bounceHeight, startPos.z);\r\n\r\n        // 计算下落时超过起始点的位置\r\n        const overshootPos = new Vec3(startPos.x, startPos.y - this.overshootDistance, startPos.z);\r\n\r\n        // 分阶段设置动画\r\n        tween(node)\r\n            // 上升阶段\r\n            .to(this.totalDuration * this.upPhaseRatio, { position: peakPos }, {\r\n                easing: \"backOut\"\r\n            })\r\n            // 下降阶段\r\n            .to(this.totalDuration * this.downPhaseRatio, { position: overshootPos }, {\r\n                easing: \"bounceOut\"\r\n            })\r\n            // 回弹到起始位置\r\n            .to(this.totalDuration * this.bounceBackRatio, { position: startPos }, {\r\n                easing: \"quadOut\"\r\n            })\r\n            .call(() => {\r\n                // 动画完成后的回调\r\n                // this.playAnimationSequentially(siblings, index + 1, resolve);\r\n            })\r\n            .start();\r\n    }\r\n    /**\r\n     * 递归方法：按顺序播放每个子节点的动画\r\n     * @param siblings 子节点数组\r\n     * @param index 当前播放动画的子节点索引\r\n     * @param resolve 动画完成的resolve函数\r\n     */\r\n    private playAnimationSequentially(siblings: Node[], index: number, resolve: () => void) {\r\n        if (index >= siblings.length) {\r\n            resolve(); // 所有动画播放完毕\r\n            return;\r\n        }\r\n\r\n        const sibling = siblings[index];\r\n        const originalPosition = sibling.position.clone();\r\n        originalPosition.y += this.startOffsetY; // 恢复原始位置\r\n\r\n        // 创建动画\r\n        const tweenInstance = tween(sibling)\r\n            .to(this.duration, { position: originalPosition }, {\r\n                easing: \"quadIn\", //\"backOut\",\r\n                onStart: () => {\r\n                    sibling.active = true; // 确保节点激活\r\n                },\r\n                onComplete: () => {\r\n                    // 当前动画完成后，递归播放下一个\r\n                    this.playAnimationSequentially(siblings, index + 1, resolve);\r\n                }\r\n            })\r\n            .start();\r\n\r\n        // 存储tween实例以便后续管理\r\n        this.activeTweens.push(tweenInstance);\r\n    }\r\n\r\n    /**\r\n     * 停止所有动画并重置状态\r\n     */\r\n    public stopAllAnimations() {\r\n        this.activeTweens.forEach(tween => tween.stop());\r\n        this.activeTweens = [];\r\n    }\r\n\r\n    // 组件销毁时清理资源\r\n    onDestroy() {\r\n        this.stopAllAnimations();\r\n    }\r\n}"]}