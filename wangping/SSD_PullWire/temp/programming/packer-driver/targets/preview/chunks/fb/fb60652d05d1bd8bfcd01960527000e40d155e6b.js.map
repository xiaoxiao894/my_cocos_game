{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/Repo/RopeGeneratorNew.ts"],"names":["_decorator","Component","PhysicsSystem","instantiate","Node","Vec3","Quat","CylinderCollider","RigidBody","MathUtil","ccclass","property","RopeGeneratorNew","staticTar","plugTar","head","tail","headConstraint","tailConstraint","rope","joints","cannonWorld","_diameter","_yLen","_stopTimer","_stopSmoothTimer","_updateVisuals","update","deltaTime","updateRopeVisuals","length","sampleDir","poses","i","push","getWorldPosition","headPos","firstNodePos","subtract","len","multiplyScalar","rotation","rotationTo","setWorldRotation","scale","setWorldScale","midPoint","lerp","setWorldPosition","currentNode","nextNode","currentPos","nextPos","createRope","nodes","instance","physicsWorld","impl","node","plugRb","getComponent","type","staticRb","headRb","allowSleep","mass","linearDamping","angularDamping","prevNode","prevBody","_body","plugBody","CANNON","PointToPointConstraint","addConstraint","headDistanceConstraint","DistanceConstraint","curvePoints","generateSmoothPath","clone","newNode","parent","addChild","newRb","collider","addComponent","radius","height","direction","t","position","currBody","distanceConstraint","hingeConstraint","ConeTwistConstraint","pivotA","pivotB","axisA","axisB","tailRb","tailBody","staticBody","startRopeMovement","setTimeout","unschedule","smoothRopeMovement","rb","body","angularVelocity","velocity","lengthSquared","setZero","prevPos","avgPos","x","y","z","currPos","newPos","headBody","clearRope","scheduleOnce","joint","removeConstraint","forEach","destroy","onDestroy","schedule","startMove","clearTimeout","stopMove","shackRope","console","log"],"mappings":"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","sourcesContent":["import { _decorator, Component, PhysicsSystem, instantiate, Node,  Vec3, Quat, CylinderCollider, RigidBody } from 'cc';\r\nimport { MathUtil } from '../Utils/MathUtils';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RopeGeneratorNew')\r\nexport class RopeGeneratorNew extends Component {\r\n    @property(Node)\r\n    private ropeSegmentPrefab: Node = null!;\r\n\r\n    private staticTar: Node = null!;\r\n    private plugTar: Node = null!;\r\n    private head: Node = null!;\r\n    private tail: Node = null!;\r\n    private headConstraint: CANNON.PointToPointConstraint | null = null;\r\n    private tailConstraint: CANNON.PointToPointConstraint | null = null;\r\n    private rope: Node[] = [];\r\n    private joints: CANNON.Constraint[] = [];\r\n    private cannonWorld: CANNON.World = null!;\r\n\r\n    private _diameter: number = 0.4;\r\n\r\n    private _yLen:number = 10;\r\n\r\n    //停止绳子表现更新 timer\r\n    private _stopTimer;\r\n    //停止绳子平滑更新 timer\r\n    private _stopSmoothTimer;\r\n    //是否更新绳子可视化表现\r\n    private _updateVisuals:boolean = false;\r\n\r\n\r\n    update(deltaTime: number) {\r\n        // 更新绳子的可视化表现\r\n        this.updateRopeVisuals();\r\n    }\r\n\r\n    // 更新绳子的可视化效果\r\n    private updateRopeVisuals() {\r\n        if (this.rope.length < 2) return;\r\n        if(!this._updateVisuals){\r\n            return;\r\n        }\r\n        let sampleDir = new Vec3();\r\n        let poses: Vec3[] = [];\r\n        for(let i = 0; i < this.rope.length-1; i++){\r\n            poses.push(this.rope[i].getWorldPosition());\r\n        }\r\n        //console.log(JSON.stringify(poses));\r\n        // 处理头节点与第一个节点之间的连接\r\n        if (this.head && this.rope.length > 0) {\r\n            let headPos = this.head.getWorldPosition();\r\n            let firstNodePos = this.rope[0].getWorldPosition();\r\n            \r\n            Vec3.subtract(sampleDir, firstNodePos, headPos);\r\n            let length = Vec3.len(sampleDir);\r\n            \r\n            if (length > 0.001) {\r\n                Vec3.multiplyScalar(sampleDir, sampleDir, 1.0/length);\r\n                \r\n                let rotation = new Quat();\r\n                Quat.rotationTo(rotation, new Vec3(0, 1, 0), sampleDir);\r\n                \r\n                this.head.setWorldRotation(rotation);\r\n                \r\n                // 调整头节点的缩放，使其覆盖整个距离\r\n                let scale = new Vec3(this._diameter, length, this._diameter);\r\n                this.head.setWorldScale(scale);\r\n                \r\n                // 将头节点放在两点之间的中心\r\n                let midPoint = new Vec3();\r\n                Vec3.lerp(midPoint, headPos, firstNodePos, 0);\r\n                this.head.setWorldPosition(midPoint);\r\n            }\r\n        }\r\n        \r\n        // 处理绳子节点之间的连接，确保它们形成连续的线\r\n        for (let i = 0; i < this.rope.length-1; i++) {\r\n            let currentNode = this.rope[i];\r\n            let nextNode = this.rope[i + 1];\r\n            \r\n            let currentPos = currentNode.getWorldPosition();\r\n            let nextPos = nextNode.getWorldPosition();\r\n            \r\n            Vec3.subtract(sampleDir, nextPos, currentPos);\r\n            let length = Vec3.len(sampleDir);\r\n            \r\n            if (length < 0.001) continue;\r\n            \r\n            Vec3.multiplyScalar(sampleDir, sampleDir, 1.0/length);\r\n            \r\n            let rotation = new Quat();\r\n            Quat.rotationTo(rotation, new Vec3(0, 1, 0), sampleDir);\r\n            \r\n            currentNode.setWorldRotation(rotation);\r\n            \r\n            // 使用完整长度的圆柱体表示绳子段\r\n            let scale = new Vec3(this._diameter, length, this._diameter);\r\n            currentNode.setWorldScale(scale);\r\n            \r\n            // 将节点放在两点之间的中心\r\n            let midPoint = new Vec3();\r\n            Vec3.lerp(midPoint, currentPos, nextPos, 0.5);\r\n            currentNode.setWorldPosition(midPoint);\r\n        }\r\n    }\r\n\r\n    createRope(nodes: number, staticTar: Node, plugTar: Node) {\r\n        this.staticTar = staticTar;\r\n        this.plugTar = plugTar;\r\n        this.cannonWorld = (PhysicsSystem.instance.physicsWorld as any).impl as CANNON.World;\r\n        \r\n        // 清除之前的绳子\r\n        //this.clearRope();\r\n\r\n        // 初始化头节点\r\n        this.head = this.node;\r\n        \r\n        // 设置插头和静态目标为静态刚体\r\n        const plugRb = plugTar.getComponent(RigidBody)!;\r\n        plugRb.type = 2;\r\n        //plugRb.type = RigidBody.Type.STATIC;\r\n        \r\n        const staticRb = staticTar.getComponent(RigidBody)!;\r\n        staticRb.type = 2;\r\n        //staticRb.type = RigidBody.Type.STATIC;\r\n        \r\n        // 设置头节点为动态刚体\r\n        const headRb = this.head.getComponent(RigidBody)!;\r\n        headRb.type = 1; \r\n        //headRb.type = RigidBody.Type.DYNAMIC; // 修改为DYNAMIC\r\n        headRb.allowSleep = false;\r\n        headRb.mass = 0.1;\r\n        headRb.linearDamping = 0.8;\r\n        headRb.angularDamping = 0.8;\r\n        \r\n        // 创建绳子节点\r\n        let prevNode = this.head;\r\n        let prevBody = (headRb as any)._body.impl as CANNON.Body;\r\n        \r\n        // 绑定头节点到插头\r\n        const plugBody = (plugRb as any)._body.impl as CANNON.Body;\r\n        this.headConstraint = new CANNON.PointToPointConstraint(\r\n            prevBody,\r\n            new CANNON.Vec3(0, 0, 0),\r\n            plugBody,\r\n            new CANNON.Vec3(0, 0, 0)\r\n        );\r\n        this.cannonWorld.addConstraint(this.headConstraint);\r\n        this.joints.push(this.headConstraint);\r\n        // 使用距离约束\r\n        const headDistanceConstraint = new CANNON.DistanceConstraint(\r\n            prevBody,\r\n            plugBody,\r\n            -0.1,\r\n            100 // 降低强度以增加柔软度\r\n        );\r\n        this.cannonWorld.addConstraint(headDistanceConstraint);\r\n        this.joints.push(headDistanceConstraint);\r\n\r\n        const curvePoints = MathUtil.generateSmoothPath(plugTar.getWorldPosition().clone(),staticTar.getWorldPosition().clone(),nodes,-4.34);\r\n        //console.log(JSON.stringify(curvePoints));\r\n        // 生成绳子节点\r\n        for (let i = 1; i < nodes; i++) {\r\n            // 创建新节点\r\n            const newNode = instantiate(this.head);\r\n            this.node.parent!.addChild(newNode);\r\n            this.rope.push(newNode);\r\n            \r\n            // 设置物理属性\r\n            const newRb = newNode.getComponent(RigidBody)!;\r\n            newRb.type = 1;\r\n            //newRb.type = RigidBody.Type.DYNAMIC;\r\n            \r\n            newRb.mass = 0.1;\r\n            newRb.linearDamping = 0.8;\r\n            newRb.angularDamping = 0.8;\r\n            \r\n            // 确保节点有圆柱体碰撞器用于渲染\r\n            let collider = newNode.getComponent(CylinderCollider);\r\n            if (!collider) {\r\n                collider = newNode.addComponent(CylinderCollider);\r\n                collider.radius = 0.025;\r\n                collider.height = 1.0;\r\n                collider.direction = 1; // Y轴方向\r\n            }\r\n            \r\n            // 计算位置\r\n            const t = i / (nodes - 1);\r\n            \r\n            newNode.setWorldPosition(curvePoints[i].position);\r\n            //console.log(`rope pos ${i} ${JSON.stringify(newNode.worldPosition)}`);\r\n            newNode.rotation = curvePoints[i].rotation;\r\n            \r\n            // 添加物理约束\r\n            const currBody = (newRb as any)._body.impl as CANNON.Body;\r\n            //const distance = Vec3.distance(prevNode.worldPosition,newNode.worldPosition);\r\n            \r\n            // 使用距离约束\r\n            const distanceConstraint = new CANNON.DistanceConstraint(\r\n                prevBody,\r\n                currBody,\r\n                0,\r\n                100 // 降低强度以增加柔软度\r\n            );\r\n            this.cannonWorld.addConstraint(distanceConstraint);\r\n            this.joints.push(distanceConstraint);\r\n            \r\n            // 添加铰链约束以限制弯曲\r\n            if (i > 1) {\r\n                //const prevPrevNode = i === 1 ? this.head : this.rope[i - 2];\r\n                //const prevPrevBody = (prevPrevNode.getComponent(RigidBody) as any)._body.impl;\r\n                \r\n                const hingeConstraint = new CANNON.ConeTwistConstraint(\r\n                    prevBody,\r\n                    currBody,\r\n                    {\r\n                        pivotA: new CANNON.Vec3(0, 0, 0),\r\n                        pivotB: new CANNON.Vec3(0, 0, 0),\r\n                        axisA: new CANNON.Vec3(0, 1, 0),\r\n                        axisB: new CANNON.Vec3(0, 1, 0),\r\n                        //angle: Math.PI / 8, // 限制弯曲角度\r\n                       // twistAngle: Math.PI / 4\r\n                    }\r\n                );\r\n                this.cannonWorld.addConstraint(hingeConstraint);\r\n                this.joints.push(hingeConstraint);\r\n            }\r\n            \r\n            prevNode = newNode;\r\n            prevBody = currBody;\r\n        }\r\n        \r\n        // 设置尾节点\r\n        this.tail = prevNode;\r\n        \r\n        // 绑定尾节点到静态目标\r\n        const tailRb = this.tail.getComponent(RigidBody)!;\r\n        const tailBody = (tailRb as any)._body.impl as CANNON.Body;\r\n        const staticBody = (staticRb as any)._body.impl as CANNON.Body;\r\n        \r\n        this.tailConstraint = new CANNON.PointToPointConstraint(\r\n            tailBody,\r\n            new CANNON.Vec3(0, 0, 0),\r\n            staticBody,\r\n            new CANNON.Vec3(0, -0.05, 0)\r\n        );\r\n        this.cannonWorld.addConstraint(this.tailConstraint);\r\n        this.joints.push(this.tailConstraint);\r\n        \r\n        this.startRopeMovement();\r\n        //8秒后停止平滑处理\r\n        this._stopSmoothTimer = setTimeout(() => {\r\n            this.unschedule(this.smoothRopeMovement);\r\n        }, 8000);\r\n        return this.head;\r\n    }\r\n\r\n    // 平滑绳子运动\r\n    private smoothRopeMovement() {\r\n        // 应用平滑处理到所有绳子节点\r\n        for (let i = 0; i < this.rope.length; i++) {\r\n            const node = this.rope[i];\r\n            const rb = node.getComponent(RigidBody);\r\n            if (!rb) continue;\r\n            \r\n            const body = (rb as any)._body.impl;\r\n            \r\n            // 降低角速度\r\n            body.angularVelocity.scale(0.9);\r\n            \r\n            // 如果速度很小，直接设为0\r\n            if (body.velocity.lengthSquared() < 0.05) {\r\n                body.velocity.scale(0.9);\r\n            }\r\n            if (body.angularVelocity.lengthSquared() < 0.05) {\r\n                body.angularVelocity.setZero();\r\n            }\r\n            \r\n            // 对中间节点应用额外平滑\r\n            if (i > 0 && i < this.rope.length - 1) {\r\n                const prevNode = this.rope[i-1];\r\n                const nextNode = this.rope[i+1];\r\n                const prevPos = prevNode.getWorldPosition();\r\n                const nextPos = nextNode.getWorldPosition();\r\n                \r\n                // 计算平均位置\r\n                const avgPos = new Vec3(\r\n                    (prevPos.x + nextPos.x) * 0.5,\r\n                    (prevPos.y + nextPos.y) * 0.5,\r\n                    (prevPos.z + nextPos.z) * 0.5\r\n                );\r\n                \r\n                // 轻微地向平均位置移动\r\n                const currPos = node.getWorldPosition();\r\n                const newPos = new Vec3(\r\n                    currPos.x * 0.95 + avgPos.x * 0.05,\r\n                    currPos.y * 0.95 + avgPos.y * 0.05,\r\n                    currPos.z * 0.95 + avgPos.z * 0.05\r\n                );\r\n                \r\n                // 应用新位置\r\n                node.setWorldPosition(newPos);\r\n            }\r\n        }\r\n        \r\n        // 处理头节点\r\n        if (this.head) {\r\n            const headRb = this.head.getComponent(RigidBody);\r\n            if (headRb) {\r\n                const headBody = (headRb as any)._body.impl;\r\n                headBody.angularVelocity.scale(0.9);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 清除绳子\r\n    public clearRope() {\r\n        this.scheduleOnce(()=>{\r\n            this.unschedule(this.smoothRopeMovement);\r\n            this._updateVisuals = false;\r\n            \r\n            // 移除所有约束\r\n            if (this.joints.length > 0) {\r\n                for (const joint of this.joints) {\r\n                    if (this.cannonWorld) {\r\n                        this.cannonWorld.removeConstraint(joint);\r\n                    }\r\n                }\r\n                this.joints = [];\r\n            }\r\n\r\n            //去掉所有刚体\r\n            this.rope.forEach((node) => {\r\n                node.getComponent(RigidBody)?.destroy();\r\n                node.getComponent(CylinderCollider)?.destroy();\r\n            })\r\n            this.node.getComponent(RigidBody)?.destroy();\r\n            \r\n            // 移除所有节点\r\n            // for (const node of this.rope) {\r\n            //     node.destroy();\r\n            // }\r\n            // this.rope = [];\r\n            \r\n            this.headConstraint = null;\r\n            this.tailConstraint = null;\r\n        },5);\r\n    }\r\n\r\n    onDestroy() {\r\n        // 清理资源\r\n        this.clearRope();\r\n    }\r\n\r\n    private startRopeMovement(){\r\n        // 启用平滑处理\r\n        this.unschedule(this.smoothRopeMovement);\r\n        this.schedule(this.smoothRopeMovement, 0.01);\r\n    }\r\n\r\n\r\n    //开始更新绳子可视化表现\r\n    public startMove(){\r\n        this._updateVisuals = true;\r\n        clearTimeout(this._stopTimer);\r\n        clearTimeout(this._stopSmoothTimer);\r\n        this.startRopeMovement();\r\n    }\r\n\r\n    //停止更新绳子可视化表现\r\n    public stopMove(){\r\n        this._stopTimer = setTimeout(() => {\r\n            this._updateVisuals = false;\r\n            this.unschedule(this.smoothRopeMovement);\r\n        }, 5000);\r\n    }\r\n\r\n    public shackRope(){\r\n        console.log(\"没平滑\");   \r\n        // this.rope.forEach((body, index) => {\r\n        //     this.scheduleOnce(() => {\r\n        //         body.getComponent(RigidBody).applyImpulse(new Vec3(0, 1, 0));\r\n        //     }, index * 0.01); // 延迟时间产生波浪效果\r\n        // });\r\n    }\r\n}"]}