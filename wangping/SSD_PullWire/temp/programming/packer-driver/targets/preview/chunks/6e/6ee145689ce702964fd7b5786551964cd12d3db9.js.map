{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/Guide/HandComonent.ts"],"names":["_decorator","CCInteger","Component","Node","Vec3","Animation","EventManager","EventName","ccclass","property","HandComonent","_handTween","_handTween2","_handTween1","start","scheduleOnce","handNode","active","node","getComponent","play","onEnable","inst","on","TouchSceenStart","onTouched","onDisable","off","update","deltaTime","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAkBC,MAAAA,S,OAAAA,S;AAAmBC,MAAAA,I,OAAAA,I;AAA4BC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;;AACnFC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;8BAGjBU,Y,WADZF,OAAO,CAAC,cAAD,C,UAGHC,QAAQ,CAACN,IAAD,C,UAERM,QAAQ,CAACN,IAAD,C,UAKRM,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACR,SAAD,C,2BAdb,MACaS,YADb,SACkCR,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAMxC;AACA;AAPwC;;AAAA;;AAAA;;AAAA,eAgBhCS,UAhBgC,GAgBN,IAhBM;AAAA,eAiBhCC,WAjBgC,GAiBL,IAjBK;AAAA,eAkBhCC,WAlBgC,GAkBH,IAlBG;AAAA;;AAqBxCC,QAAAA,KAAK,GAAG;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAKC,YAAL,CAAkB,MAAM;AACpB,iBAAKC,QAAL,CAAcC,MAAd,GAAuB,IAAvB,CADoB,CAErB;;AACC,iBAAKC,IAAL,CAAUC,YAAV,CAAuBd,SAAvB,EAAkCe,IAAlC;AACH,WAJD,EAIG,GAJH,EAdI,CAmBJ;AACH;;AAESC,QAAAA,QAAQ,GAAS;AACvB;AAAA;AAAA,4CAAaC,IAAb,CAAkBC,EAAlB,CAAqB;AAAA;AAAA,sCAAUC,eAA/B,EAAgD,KAAKC,SAArD,EAAgE,IAAhE;AACH;;AAESC,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,4CAAaJ,IAAb,CAAkBK,GAAlB,CAAsB;AAAA;AAAA,sCAAUH,eAAhC,EAAiD,KAAKC,SAAtD,EAAiE,IAAjE;AACH;;AAEDG,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CArDuC,CAuDxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACQJ,QAAAA,SAAS,GAAG;AAChB,eAAKP,IAAL,CAAUC,YAAV,CAAuBd,SAAvB,EAAkCyB,IAAlC;AACA,eAAKd,QAAL,CAAcC,MAAd,GAAuB,KAAvB,CAFgB,CAGjB;;AACC,cAAI,KAAKN,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBmB,IAAhB;;AACA,iBAAKnB,UAAL,GAAkB,IAAlB;AACA,iBAAKK,QAAL,CAAcC,MAAd,GAAuB,KAAvB;AAEH;AAEJ;;AAhJuC,O;;;;;iBAGvB,I;;;;;;;iBAEI,I;;;;;;;iBAKJ,IAAIb,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,C;;;;;;;iBAEF,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,C;;;;;;;iBAEK,G","sourcesContent":["import { _decorator, CCInteger, Color, Component, Layers, Node, Sprite, Tween, tween, Vec3, Animation } from 'cc';\r\nimport { EventManager } from '../Global/EventManager';\r\nimport { EventName } from '../Common/Enum';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HandComonent')\r\nexport class HandComonent extends Component {\r\n\r\n    @property(Node)\r\n    handNode: Node = null;\r\n    @property(Node)\r\n    handNodeMove: Node = null;\r\n    // @property(Sprite)\r\n    // slideSprite: Sprite = null;\r\n\r\n    @property(Vec3)\r\n    startPos: Vec3 = new Vec3(0, 0, 0);\r\n    @property(Vec3)\r\n    endPos: Vec3 = new Vec3(0, 0, 0);\r\n    @property(CCInteger)\r\n    handScale: number = 0.5;\r\n\r\n    private _handTween: Tween<Node> = null;\r\n    private _handTween2: Tween<Node> = null;\r\n    private _handTween1: Tween<Sprite> = null;\r\n\r\n\r\n    start() {\r\n\r\n        //播动画\r\n        // this.handNode.setPosition(this.startPos);\r\n        // this.handNode.active = true;\r\n        // //  this.slideSprite.node.active = true;\r\n        // this.handNode.setScale(0, 0, 0);\r\n        // this._handTween = tween(this.handNode)\r\n        //     .delay(1)\r\n        //     .to(0.1, { scale: new Vec3(this.handScale, this.handScale, 1) })\r\n        //     .call(() => {\r\n        //         this.playLoopAni();\r\n        //     })\r\n        //     .start();\r\n        this.scheduleOnce(() => {\r\n            this.handNode.active = true;\r\n           // this.slideSprite.node.active = true;\r\n            this.node.getComponent(Animation).play();\r\n        }, 0.6)\r\n        // this.node.getComponent(Animation).play();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        EventManager.inst.on(EventName.TouchSceenStart, this.onTouched, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventManager.inst.off(EventName.TouchSceenStart, this.onTouched, this);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    // private playLoopAni() {\r\n    //     let tweenHand = tween(this.handNode)\r\n    //         .to(2, { position: this.endPos })\r\n    //         .call(() => {\r\n    //             this.handNode.setPosition(this.startPos);\r\n    //         });\r\n    //     this._handTween = tween(this.handNode)\r\n    //         .repeatForever(tweenHand)\r\n    //         .start();\r\n    // }\r\n\r\n    // 拖尾效果\r\n    // private _trailNodes: Node[] = [];\r\n    // private _trailIndex: number = 0;\r\n    // private _trailCount: number = 20;\r\n\r\n    // private playLoopAni() {\r\n    //     const spriteFrame = this.handNodeMove.getComponent(Sprite)?.spriteFrame;\r\n    //     if (!spriteFrame) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (this._trailNodes.length === 0) {\r\n    //         for (let i = 0; i < this._trailCount; i++) {\r\n    //             const trailNode = new Node(`Trail_${i}`);\r\n    //             trailNode.layer = Layers.Enum.UI_2D;\r\n    //             const sprite = trailNode.addComponent(Sprite);\r\n    //             sprite.spriteFrame = spriteFrame;\r\n    //             trailNode.setParent(this.handNode.parent);\r\n    //             trailNode.active = false;\r\n    //             this._trailNodes.push(trailNode);\r\n    //         }\r\n    //     }\r\n\r\n    //     let tweenHand = tween(this.handNode)\r\n    //         .to(2, { position: this.endPos })\r\n    //         .call(() => {\r\n    //             this.handNode.setPosition(this.startPos);\r\n    //             // 手指回到起点时隐藏所有轨迹点，清空拖尾\r\n    //             this._trailNodes.forEach(node => node.active = false);\r\n    //             this._trailIndex = 0; // 重置轨迹索引\r\n    //         });\r\n\r\n    //     this._handTween = tween(this.handNode)\r\n    //         .repeatForever(tweenHand)\r\n    //         .start();\r\n\r\n    //     this.schedule(() => {\r\n    //         this._updateTrail();\r\n    //     }, 0.3);\r\n    // }\r\n\r\n    // private _updateTrail() {\r\n\r\n\r\n    //     const node = this._trailNodes[this._trailIndex];\r\n\r\n    //     // 让轨迹点沿手指移动路径形成一条线，位置直接跟随handNode\r\n    //     const pos = this.handNode.getPosition();\r\n    //     node.setPosition(pos.x - 10, pos.y + 60, pos.z);\r\n    //     node.setRotation(this.handNode.getRotation());\r\n    //     // node.setScale(this.handNode.getScale());\r\n    //     node.active = true;\r\n\r\n    //     const sprite = node.getComponent(Sprite);\r\n    //     if (sprite) {\r\n    //         sprite.color = new Color(170, 255, 255, 255);\r\n    //         tween(sprite)\r\n    //             .to(1.5, { color: new Color(255, 255, 255, 255) })\r\n    //             .call(() => {\r\n    //                 node.active = false;\r\n    //                 //sprite.color = new Color(255, 255, 255, 255);\r\n    //             })\r\n    //             .start();\r\n    //     }\r\n\r\n    //     this._trailIndex = (this._trailIndex + 1) % this._trailCount;\r\n    // }\r\n    private onTouched() {\r\n        this.node.getComponent(Animation).stop();\r\n        this.handNode.active = false;\r\n       // this.slideSprite.node.active = false;\r\n        if (this._handTween) {\r\n            this._handTween.stop();\r\n            this._handTween = null;\r\n            this.handNode.active = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}