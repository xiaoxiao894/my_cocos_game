{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/core/CloudEffct.ts"],"names":["_decorator","Color","Component","MeshRenderer","tween","CCBoolean","ccclass","property","CloudEffct","tooltip","type","colorPropertyName","initialOpacity","materials","isInitialized","materialStates","Map","start","initMaterials","siblings","node","children","length","console","warn","forEach","sibling","meshNode","getChildByName","meshRenderer","getComponent","material","checkMaterialCompatibility","error","name","startColor","setProperty","push","set","currentTween","pendingAction","log","startEffect","isFadeIn","index","delayTime","randomizeDelay","Math","random","randomDelayRange","delayBetweenClouds","scheduleOnce","scheduleFade","action","state","get","startFade","currentColor","getProperty","currentOpacity","a","targetOpacity","startOpacity","endOpacity","endColor","tweenInstance","to","fadeDuration","onUpdate","target","easing","call","nextAction","alternativeNames","e","onDestroy","stop","clear"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Color, Component, Material, MeshRenderer, Node, tween, Tween, CCBoolean } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CloudEffct')\r\nexport class CloudEffct extends Component {\r\n    // 可配置参数\r\n    @property({ tooltip: '渐变持续时间(秒)' })\r\n    public fadeDuration = 0.2;\r\n    @property({ tooltip: '每个云之间的延迟时间(秒)' })\r\n    public delayBetweenClouds = 0.05;\r\n   // @property({ tooltip: '材质颜色属性名' })\r\n    public colorPropertyName = 'mainColor';\r\n   // @property({ tooltip: '初始透明度(0-255)' })\r\n    public initialOpacity = 255;\r\n    @property({ tooltip: '目标透明度(0-255)' })\r\n    public targetOpacity = 0;\r\n    @property({ tooltip: '是否随机延迟' })\r\n    public randomizeDelay = false;\r\n    @property({ tooltip: '随机延迟范围(秒)' })\r\n    public randomDelayRange = 0;\r\n    @property({ type: CCBoolean, tooltip: 'true为淡入效果,false为淡出效果' })\r\n    public isFadeIn = false;\r\n\r\n    // 存储材质和动画状态\r\n    private materials: Material[] = [];\r\n    private isInitialized = false; // 标记是否已初始化材质\r\n    private materialStates: Map<Material, {\r\n        currentTween: Tween<Color> | null;\r\n        pendingAction: 'fadeIn' | 'fadeOut' | null;\r\n    }> = new Map();\r\n\r\n    start() {\r\n        // 仅收集材质，不启动任何效果\r\n        this.initMaterials();\r\n    }\r\n\r\n    /**\r\n     * 初始化材质收集\r\n     */\r\n    private initMaterials() {\r\n        if (this.isInitialized) return;\r\n        \r\n        const siblings = this.node.children;\r\n        if (siblings.length === 0) {\r\n            console.warn(\"CloudEffct: 当前节点没有子节点\");\r\n            return;\r\n        }\r\n\r\n        siblings.forEach(sibling => {\r\n            const meshNode = sibling.getChildByName(\"Plane001\");\r\n            if (!meshNode) return;\r\n            \r\n            const meshRenderer = meshNode.getComponent(MeshRenderer);\r\n            if (!meshRenderer || !meshRenderer.material) return;\r\n            \r\n            // 检查材质兼容性\r\n            if (!this.checkMaterialCompatibility(meshRenderer.material)) {\r\n                console.error(`CloudEffct: 材质 ${meshRenderer.material.name} 不兼容`);\r\n                return;\r\n            }\r\n            \r\n            const material = meshRenderer.material;\r\n            const startColor = new Color(255, 255, 255, this.initialOpacity);\r\n            material.setProperty(this.colorPropertyName, startColor),\r\n            this.materials.push(material);\r\n            this.materialStates.set(material, { currentTween: null, pendingAction: null });\r\n        });\r\n\r\n        this.isInitialized = true;\r\n        console.log(`CloudEffct: 已收集 ${this.materials.length} 个材质`);\r\n    }\r\n\r\n    /**\r\n     * 外部调用接口：启动云效果\r\n     * @param isFadeIn true=淡入 false=淡出\r\n     */\r\n    public startEffect(isFadeIn: boolean) {\r\n        // 确保材质已初始化\r\n        if (!this.isInitialized) {\r\n            this.initMaterials();\r\n        }\r\n        \r\n        // 如果没有材质可用，直接返回\r\n        if (this.materials.length === 0) {\r\n            console.warn(\"CloudEffct: 没有可用的材质\");\r\n            return;\r\n        }\r\n        \r\n        // 更新效果方向\r\n        this.isFadeIn = isFadeIn;\r\n        \r\n        // 为每个材质安排淡入/淡出\r\n        this.materials.forEach((material, index) => {\r\n            // 计算延迟时间\r\n            let delayTime = 0;\r\n            if (this.randomizeDelay) {\r\n                delayTime = Math.random() * this.randomDelayRange;\r\n            } else if (this.delayBetweenClouds > 0) {\r\n                delayTime = index * this.delayBetweenClouds;\r\n            }\r\n            \r\n            // 延迟安排动画\r\n            this.scheduleOnce(() => {\r\n                this.scheduleFade(material, isFadeIn ? 'fadeIn' : 'fadeOut');\r\n            }, delayTime);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 安排材质的淡入淡出效果\r\n     */\r\n    private scheduleFade(material: Material, action: 'fadeIn' | 'fadeOut') {\r\n        const state = this.materialStates.get(material);\r\n        if (!state) return;\r\n        \r\n        // 如果当前没有动画运行，立即开始\r\n        if (!state.currentTween) {\r\n            this.startFade(material, action);\r\n        } else {\r\n            // 如果已有动画，将此操作设为待处理\r\n            state.pendingAction = action;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动单个材质动画\r\n     */\r\n    private startFade(material: Material, action: 'fadeIn' | 'fadeOut') {\r\n        const state = this.materialStates.get(material);\r\n        if (!state) return;\r\n        \r\n        // 获取当前材质的透明度\r\n        const currentColor = material.getProperty(this.colorPropertyName) as Color;\r\n        const currentOpacity = currentColor.a;\r\n        \r\n        // 检查是否需要执行淡入操作\r\n        if (action === 'fadeIn' && currentOpacity === this.initialOpacity) {\r\n            console.log(`CloudEffct: 材质 ${material.name} 当前透明度与初始透明度相同，跳过淡入操作`);\r\n            return;\r\n        }\r\n        \r\n        // 检查是否需要执行淡出操作\r\n        if (action === 'fadeOut' && currentOpacity === this.targetOpacity) {\r\n            console.log(`CloudEffct: 材质 ${material.name} 当前透明度与目标透明度相同，跳过淡出操作`);\r\n            return;\r\n        }\r\n        \r\n        const startOpacity = action === 'fadeIn' ? this.targetOpacity : this.initialOpacity;\r\n        const endOpacity = action === 'fadeIn' ? this.initialOpacity : this.targetOpacity;\r\n        \r\n        const startColor = new Color(255, 255, 255, startOpacity);\r\n        const endColor = new Color(255, 255, 255, endOpacity);\r\n        \r\n        // 创建并存储tween\r\n        const tweenInstance = tween(startColor)\r\n            .to(this.fadeDuration, { a: endOpacity }, {\r\n                onUpdate: (target:Color) => material.setProperty(this.colorPropertyName, target),\r\n                easing: 'linear'\r\n            })\r\n            .call(() => {\r\n                // 动画完成后清除当前tween\r\n                state.currentTween = null;\r\n                \r\n                // 检查是否有待处理的动作\r\n                if (state.pendingAction) {\r\n                    const nextAction = state.pendingAction;\r\n                    state.pendingAction = null;\r\n                    this.startFade(material, nextAction);\r\n                }\r\n            })\r\n            .start();\r\n        \r\n        // 更新状态\r\n        state.currentTween = tweenInstance;\r\n    }\r\n\r\n    /**\r\n     * 检查材质兼容性\r\n     */\r\n    private checkMaterialCompatibility(material: Material): boolean {\r\n        try {\r\n            // 尝试获取属性\r\n            material.getProperty(this.colorPropertyName);\r\n            return true;\r\n        } catch (error) {\r\n            // 尝试常见的其他属性名\r\n            const alternativeNames = ['color', 'mainColor', 'diffuseColor'];\r\n            for (const name of alternativeNames) {\r\n                try {\r\n                    material.getProperty(name);\r\n                    // 如果找到兼容属性名，更新组件属性\r\n                    this.colorPropertyName = name;\r\n                    return true;\r\n                } catch (e) {\r\n                    continue;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 组件销毁时清理资源\r\n     */\r\n    onDestroy() {\r\n        // 停止所有动画\r\n        this.materials.forEach(material => {\r\n            const state = this.materialStates.get(material);\r\n            if (state && state.currentTween) {\r\n                state.currentTween.stop();\r\n            }\r\n        });\r\n        this.materialStates.clear();\r\n    }\r\n}\r\n"]}