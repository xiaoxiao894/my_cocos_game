{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_PullWire/assets/JavaScript/Repo/RopeManager.ts"],"names":["_decorator","CCInteger","Component","instantiate","Node","Quat","tween","Vec3","DataManager","MathUtil","CompleteRopeItem","EventManager","EventName","PlugItem","eventMgr","PlotName","ccclass","property","RopeManager","_startRopeNum","_ropes","_nowRopeIndex","index","index1","start","Instance","Arrow_beast","Arrow_farmLand","Arrow_mining","ropeManager","i","creatPope","headNodes","length","active","endNodes","onEnable","inst","on","PlugStateUpdate","onPlugStateUpdate","GameOver","onGameOver","ropeMovePoint","ropeMovePointCallback","onDisable","off","newParent","completeRope","item","getComponent","parent","ropeParent","push","init","creatLeftRopes","leftSocket","scheduleOnce","setPosition","rot","fromEuler","setRotation","schedule","console","log","setRopeStateByIndex","state","update","deltaTime","emit","ArrowTargetVectorUpdate","pos","state1Index","state0Index","plug","socketIndex","arrowNodes","getWorldPosition","clone","connectLeftRopes","shackRope","unbatchAllAndMoveHeads","ropeNode","ropeComp","unbatchStaticModel","pos1","getPosition","x","y","z","continueFunc","newEndNode","getChildByName","connectLeftOneRope","self","shift","eulerAngles","plugMoveAngles","plugTartetRot","endPos","getEndPos","socketNodes","distance","worldPosition","t","leftRopeMoveSpeed","cloudHide","tweenHandel","to","rotation","easing","onUpdate","target","ratio","nowDistan","plugConnectDistance","plugLinkSocket","stop","cloudHideDistance","getBackwardMoveVector","quat","forward","direction","transformQuat","multiplyScalar","plugNode","dis","moveDis","plugFinalAngles","add","call","indexOf","splice","sceneManger","checkBuildCanUpdate","mainCamera","moveToCenter","socketNode","localToWorldPos3D"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Component, instantiate, Node, PointToPointConstraint, Quat, RigidBody, RigidBodyComponent, tween, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { RopeGeneratorNew } from './RopeGeneratorNew';\r\nimport { MathUtil } from '../Utils/MathUtils';\r\nimport { CompleteRopeItem } from './CompleteRopeItem';\r\nimport { EventManager } from '../Global/EventManager';\r\nimport { EventName } from '../Common/Enum';\r\nimport { PlugItem } from './PlugItem';\r\nimport { eventMgr } from '../core/EventManager';\r\nimport { PlotName } from '../core/EventType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RopeManager')\r\nexport class RopeManager extends Component {\r\n\r\n    /** 电线起点 */\r\n    @property(Node)\r\n    headNodes: Node[] = [];\r\n\r\n    /** 电线终点 */\r\n    @property(Node)\r\n    endNodes: Node[] = [];\r\n\r\n    /** 电线父节点 */\r\n    @property(Node)\r\n    ropeParent: Node = null;\r\n\r\n    @property(Node)\r\n    completeRope: Node = null;\r\n\r\n    @property(CCInteger)\r\n    leftRopeMoveSpeed: number = 0.5;\r\n\r\n    @property(Node)\r\n    newEndNode: Node = null;\r\n\r\n    @property(Node)\r\n    Arrow_beast: Node = null;\r\n\r\n    @property(Node)\r\n    Arrow_mining: Node = null;\r\n\r\n    @property(Node)\r\n    Arrow_farmLand: Node = null;\r\n\r\n\r\n    private _startRopeNum: number = 3;\r\n\r\n    private _ropes: CompleteRopeItem[] = [];\r\n\r\n    //当前rope索引\r\n    private _nowRopeIndex: number = 0;\r\n\r\n    start() {\r\n        DataManager.Instance.Arrow_beast = this.Arrow_beast\r\n        DataManager.Instance.Arrow_farmLand = this.Arrow_farmLand\r\n        DataManager.Instance.Arrow_mining = this.Arrow_mining\r\n        DataManager.Instance.ropeManager = this;\r\n        for (let i = 0; i < this._startRopeNum; i++) {\r\n            this.creatPope(i);\r\n        }\r\n        for (let i = this._startRopeNum; i < this.headNodes.length; i++) {\r\n            this.headNodes[i].active = false;\r\n            this.endNodes[i].active = false;\r\n        }\r\n\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        EventManager.inst.on(EventName.PlugStateUpdate, this.onPlugStateUpdate, this);\r\n        EventManager.inst.on(EventName.GameOver, this.onGameOver, this);\r\n        EventManager.inst.on(EventName.ropeMovePoint, this.ropeMovePointCallback, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventManager.inst.off(EventName.PlugStateUpdate, this.onPlugStateUpdate, this);\r\n        EventManager.inst.off(EventName.GameOver, this.onGameOver, this);\r\n    }\r\n\r\n    /** 创建一根电线 */\r\n    public creatPope(index: number = 0) {\r\n\r\n        let newParent = instantiate(this.completeRope);\r\n\r\n        let item: CompleteRopeItem = newParent.getComponent(CompleteRopeItem);\r\n\r\n        if (item) {\r\n            newParent.parent = this.ropeParent;\r\n            this._ropes.push(item);\r\n            item.init(index, this.headNodes[index], this.endNodes[index]);\r\n        }\r\n    }\r\n\r\n    public creatLeftRopes() {\r\n        let index = 0;\r\n        for (let i = this._startRopeNum; i < this.headNodes.length; i++) {\r\n\r\n            if (DataManager.Instance.leftSocket[index] == 3) {\r\n                index += 1;\r\n                this.scheduleOnce(() => {\r\n\r\n                    this.headNodes[i].setPosition(new Vec3(-0.837, 0, 3));\r\n                    this.endNodes[i].setPosition(new Vec3(-1.305, 0, 1.8));\r\n                    //  this.headNodes[i].setRotation();\r\n                    //this.headNodes[i].rotation = this.headNodes[1].rotation;\r\n\r\n                    //this.endNodes[i].setPosition(new Vec3(-1.4, 0.5, 2.917));\r\n                    let rot = new Quat();\r\n                    Quat.fromEuler(rot, 0, -26, 0);\r\n                    this.endNodes[i].setRotation(rot);\r\n                    // this.endNodes[i].setRotation(this.endNodes[1].rotation);\r\n                    // this.endNodes[i].position = this.endNodes[1].position;\r\n                    // this.endNodes[i].rotation = this.endNodes[1].rotation;\r\n                }, 0.5)\r\n\r\n            }\r\n\r\n            this.scheduleOnce(() => {\r\n                this.schedule(() => {\r\n                    this.headNodes[i].active = true;\r\n                    this.endNodes[i].active = true;\r\n                }, 1)\r\n\r\n                this.creatPope(i);\r\n            }, 0.5)\r\n            console.log(\"DataManager.Instance.leftSocket[index] == \", DataManager.Instance.leftSocket[0]);\r\n            console.log(\"DataManager.Instance.leftSocket[index] == \", DataManager.Instance.leftSocket[1]);\r\n            //插销的动作取消改用Animation\r\n            // let pos: Vec3 = this.endNodes[i].getWorldPosition().clone();\r\n            // this.endNodes[i].setWorldPosition(new Vec3(pos.x, pos.y + 5, pos.z));\r\n            // tween(this.endNodes[i]).to(0.15, { worldPosition: pos }).start();\r\n        }\r\n    }\r\n\r\n    // private creatStaticRope(index:number = 0){\r\n    //     let plugTar:Node = this.endNodes[index];\r\n    //     let staticTar:Node = this.headNodes[index];\r\n    //     const curvePoints = MathUtil.generateSmoothPath(plugTar.getWorldPosition().clone(),staticTar.getWorldPosition().clone(),this._ropeLen,-8.35);\r\n    //     let newParent = new Node(\"Rope\"+index);\r\n    //     newParent.parent = this.ropeParent;\r\n    //     this._ropesParent.push(newParent);\r\n    //     console.log(\"staticPoss\",JSON.stringify(curvePoints));\r\n    //     for(let i=0;i<this._ropeLen;i++){\r\n    //         let ropeNode = instantiate(this.ropeNode);\r\n    //         ropeNode.getComponent(RigidBody).type = RigidBody.Type.STATIC;\r\n    //         ropeNode.active = true;\r\n    //         ropeNode.parent = newParent;\r\n    //         ropeNode.setWorldPosition(curvePoints[i].position);\r\n    //         ropeNode.rotation = curvePoints[i].rotation;\r\n    //     }        \r\n    // }\r\n\r\n    public setRopeStateByIndex(index: number, state: number) {\r\n        let item = this._ropes[index];\r\n        item.state = state;\r\n    }\r\n\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    //通知引导更新位置\r\n    private index: boolean = true;\r\n    private index1: boolean = true;\r\n    private onPlugStateUpdate() {\r\n        if (DataManager.Instance.leftSocket.length <= 2) {\r\n            this.Arrow_farmLand.active = false;\r\n            this.Arrow_mining.active = false;\r\n            this.Arrow_beast.active = false;\r\n            EventManager.inst.emit(EventName.ArrowTargetVectorUpdate, null);\r\n            return;\r\n        }\r\n        let pos: Vec3 = new Vec3();\r\n        let state1Index: number = -1;\r\n        let state0Index: number = -1;\r\n        for (let i = 0; i < this.endNodes.length; i++) {\r\n            let plug: PlugItem = this.endNodes[i].getComponent(PlugItem);\r\n            if (plug) {\r\n                if (plug.state == 1) {\r\n                    state1Index = i;\r\n                    break;\r\n                } else if (plug.state == 0 && state0Index == -1) {\r\n                    state0Index = i;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"DataManager.Instance.leftSocket[0] == \", DataManager.Instance.leftSocket[0]);\r\n        if (DataManager.Instance.leftSocket[0] == 0) {\r\n            this.Arrow_farmLand.active = true;\r\n        }\r\n        else if (DataManager.Instance.leftSocket[0] == 1) {\r\n            this.scheduleOnce(() => {\r\n                if (!this.index)\r\n                    return;\r\n                this.index = false;\r\n\r\n                this.Arrow_mining.active = true;\r\n            }, 1)\r\n\r\n        }\r\n        else if (DataManager.Instance.leftSocket[0] == 2) {\r\n            this.scheduleOnce(() => {\r\n                if (!this.index1)\r\n                    return;\r\n                this.index = false;\r\n                this.Arrow_beast.active = true;\r\n            }, 1)\r\n\r\n        }\r\n\r\n        //引导到插座\r\n        if (state1Index !== -1) {\r\n            let socketIndex: number = DataManager.Instance.leftSocket[0];\r\n            // pos = DataManager.Instance.socketNodes[socketIndex].getWorldPosition();\r\n\r\n            // pos.x -= 1.5\r\n            // pos.y += 4;\r\n            pos = DataManager.Instance.arrowNodes[socketIndex].getWorldPosition();\r\n        } else if (state0Index !== -1) {\r\n            //引导到插头\r\n            pos = this.endNodes[state0Index].getWorldPosition();\r\n        }\r\n\r\n        EventManager.inst.emit(EventName.ArrowTargetVectorUpdate, pos.clone());\r\n    }\r\n\r\n    public onGameOver(): void {\r\n        // this.scheduleOnce(() => {\r\n        // this.unbatchAllAndMoveHeads();\r\n        // }, 6)\r\n        //  EventManager.inst.emit(EventName.ropeMovePoint);\r\n        this.creatLeftRopes();\r\n        //停顿3秒，给剩下的插上插头\r\n        // this.resetPos();\r\n        this.scheduleOnce(this.connectLeftRopes, 3);\r\n\r\n        //已有电线晃动一下\r\n        for (let i = 0; i < this._startRopeNum; i++) {\r\n            this._ropes[i].shackRope();\r\n        }\r\n\r\n\r\n    }\r\n    ropeMovePointCallback() {\r\n        this.unbatchAllAndMoveHeads();\r\n    }\r\n    /**\r\n   * 取消所有绳子的合批，移动头节点位置\r\n   */\r\n    public unbatchAllAndMoveHeads() {\r\n        for (let i = 0; i < this._ropes.length; i++) {\r\n            const ropeNode = this._ropes[i];\r\n            const ropeComp = ropeNode.getComponent(CompleteRopeItem);\r\n            if (ropeComp) {\r\n                ropeComp.unbatchStaticModel();\r\n            }\r\n        }\r\n        for (let i = 0; i < 5; i++) {\r\n            const pos1 = this.headNodes[i].getPosition();\r\n            this.headNodes[i].setPosition(new Vec3(pos1.x - 0.5, pos1.y + 1.5, pos1.z));\r\n            // let pos: Vec3 = this.headNodes[i].getWorldPosition().clone();\r\n            // this.headNodes[i].setWorldPosition(new Vec3(pos.x, pos.y + 1.5, pos.z));\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    //连接剩下的插头\r\n    //this._nowRopeIndex = this._startRopeNum;\r\n    private connectLeftRopes() {\r\n        this._nowRopeIndex = 0;\r\n        this.continueFunc();\r\n        // for (let index = 0; index < this.endNodes.length; index++) {\r\n        //     if (this.endNodes[index].getComponent(PlugItem).state == 0) {\r\n        //         this.connectLeftOneRope();\r\n        //         break;\r\n        //         //this.plugLinkSocket(index,this.endNodes[index]);\r\n        //     }\r\n        // }\r\n\r\n    }\r\n    private continueFunc() {\r\n        for (let index = this._nowRopeIndex; index < this.endNodes.length; index++) {\r\n            if (this.endNodes[index].getComponent(PlugItem).state == 0) {\r\n                if (DataManager.Instance.leftSocket[0] == 3) {\r\n                    this.newEndNode.getChildByName(`ChaTou${2}`).active = false;\r\n                } else {\r\n                    this.newEndNode.getChildByName(`ChaTou${index}`).active = false;\r\n                }\r\n\r\n                console.log(\"continueFunc index == \" + index);\r\n                this.connectLeftOneRope();\r\n                break;\r\n                //this.plugLinkSocket(index,this.endNodes[index]);\r\n            } else {\r\n                this._nowRopeIndex++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private connectLeftOneRope() {\r\n        let self = this;\r\n        let plug: PlugItem = this.endNodes[this._nowRopeIndex].getComponent(PlugItem);\r\n        if (plug && plug.state == 0) {\r\n            plug.state = 1;\r\n            let socketIndex: number = DataManager.Instance.leftSocket.shift();\r\n            let eulerAngles: Vec3 = DataManager.Instance.plugMoveAngles[socketIndex];\r\n            let plugTartetRot = new Quat();\r\n            Quat.fromEuler(plugTartetRot, eulerAngles.x, eulerAngles.y, eulerAngles.z);\r\n            let endPos: Vec3 = this.getEndPos(DataManager.Instance.socketNodes[socketIndex]);\r\n            let distance: number = Vec3.distance(this.endNodes[this._nowRopeIndex].worldPosition, endPos);\r\n            let t = distance / (this.leftRopeMoveSpeed * 1000) + 1.3;\r\n            let cloudHide: boolean = false;\r\n            let tweenHandel = tween(this.endNodes[this._nowRopeIndex]).to(t, { rotation: plugTartetRot, worldPosition: endPos }, {\r\n                easing: \"cubicOut\",\r\n                onUpdate(target, ratio) {\r\n                    //检测距离靠近直接走插入动画\r\n                    let nowDistan: number = Vec3.distance(self.endNodes[self._nowRopeIndex].worldPosition, endPos);\r\n                    if (nowDistan < DataManager.Instance.plugConnectDistance) {\r\n                        self.plugLinkSocket(socketIndex, self.endNodes[self._nowRopeIndex]);\r\n                        tweenHandel.stop();\r\n                    }\r\n                    if (!cloudHide && nowDistan < DataManager.Instance.cloudHideDistance) {\r\n                        eventMgr.emit(PlotName[socketIndex] + \"_cloudFadeOut\");\r\n                        cloudHide = true;\r\n                    }\r\n                },\r\n            }).start();\r\n            this.scheduleOnce(() => {\r\n                this._nowRopeIndex++;\r\n                if (this._nowRopeIndex < this.endNodes.length) {\r\n                    //this.connectLeftOneRope();\r\n                    this.continueFunc();\r\n                }\r\n            }, 2);\r\n        }\r\n    }\r\n    /* 根据欧拉角计算反方向的移动向量\r\n    * @param eulerAngles 欧拉角（度）\r\n    * @param distance 移动距离\r\n    * @returns 反方向移动向量\r\n    */\r\n    getBackwardMoveVector(eulerAngles: Vec3, distance: number): Vec3 {\r\n        const quat = new Quat();\r\n        Quat.fromEuler(quat, eulerAngles.x, eulerAngles.y, eulerAngles.z);\r\n\r\n        // 初始前方向向量\r\n        const forward = new Vec3(-1, 0, 0);\r\n        const direction = new Vec3();\r\n        Vec3.transformQuat(direction, forward, quat);\r\n\r\n        // 反方向向量\r\n        direction.multiplyScalar(-distance);\r\n        return direction;\r\n    }\r\n    //插头插入动画，然后解锁地块\r\n    public plugLinkSocket(socketIndex: number, plugNode: Node) {\r\n\r\n        let dis: number = 2;\r\n        let moveDis = this.getBackwardMoveVector(DataManager.Instance.plugFinalAngles[socketIndex], dis)\r\n\r\n        let endPos: Vec3 = this.getEndPos(DataManager.Instance.socketNodes[socketIndex]);\r\n        Vec3.add(moveDis, moveDis, plugNode.worldPosition);\r\n        eventMgr.emit(PlotName[socketIndex] + \"_cloudFadeOut\");\r\n        tween(plugNode)\r\n            .to(0.5, { worldPosition: moveDis, eulerAngles: DataManager.Instance.plugFinalAngles[socketIndex] })\r\n            .to(0.3, { worldPosition: endPos }, { easing: \"cubicOut\" }).call(() => {\r\n                let index: number = DataManager.Instance.leftSocket.indexOf(socketIndex);\r\n                if (index >= 0) {\r\n                    DataManager.Instance.leftSocket.splice(index, 1);\r\n                }\r\n                plugNode.getComponent(PlugItem).state = 2;\r\n\r\n                //通知解锁\r\n                eventMgr.emit(PlotName[socketIndex] + \"_start\");\r\n                DataManager.Instance.sceneManger.checkBuildCanUpdate();\r\n                DataManager.Instance.mainCamera.moveToCenter();\r\n            }).start();\r\n    }\r\n\r\n    //插座对应插头位置\r\n    private getEndPos(socketNode: Node): Vec3 {\r\n        let endPos: Vec3 = MathUtil.localToWorldPos3D(new Vec3(0, 0, 1.5), socketNode);\r\n        return endPos;\r\n    }\r\n}\r\n\r\n\r\n"]}