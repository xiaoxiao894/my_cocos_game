{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/EnemySpider.ts"],"names":["_decorator","Node","v2","Vec2","Vec3","tween","Material","SkinnedMeshRenderer","MeshRenderer","ParticleSystem","SkeletalAnimation","Entity","Simulator","App","GlobeVariable","RVOMath","SoundManager","BooldPaling","RVOUtils","DissolveEffect","Flower","blockRed","enemyStateType","ccclass","property","EnemySpider","Number","Boolean","machineState","Move","_blood","hitRangeV3","poolName","spiderName","_bloodOffset","_hp","hp","maxHp","recordHp","hitPow","endIsMove","_radius","_rvoSpeed","isRvo","blockIndex","speed","movePhase","rvoLastMove","currentTargetIndex","dieGray","flowerEat","selfScal","Idtype","scheduleId","undefined","scheduleId1","isAttack","_agentHandleId","_walkTween","_curState","agentHandleId","value","setSpiderPos","start","node","scale","clone","isInitCraet","init","currentIndex","spiderHp","spiderType","getComponent","getState","setHp","data","dataManager","getMonsterById","_hitPow","reset","setMaterByIndex","sceneNode","moveBlockPos","children","length","move","matIndex","needReset","dissolveEffect","forEach","d","mesh","matInstance","getMaterialInstance","setProperty","baseHit","attack","bulletPos","hitRange","x","y","z","hitEffct","Instance","playAudio","Die","Hit","takeDamage","setShowHp","scheduleOnce","back","arrowTx","poolManager","getNode","entifyName","ArrowTX","hitParticle","parent","setPosition","position","active","particle","getChildByName","play","stop","clear","removeFromParent","returnNode","baseHit1","hitEffct1","BeetleCollideTx","hitParticle1","turretHit","injuryAni","attackEvent","isBlock","QianBiJuMa","item","setRed","blood","juma01","subscribeBool","getBloodHp","blockRest","isFirstBlock","resetBloodHp","enemyController","restRvoEnemy","isStartGame","characterSkeletalAnimation","isPlaying","trackMonster","mass","agentId","instance","addAgent","v3t2","worldPosition","agentObj","getAgentByAid","neighborDist","Track","moveByRvo","dt","currentPos1","copy","playerPos","block","getWorldPosition","distance","attack1","p","getAgentPosition","targetPos","currentPos","dist","smoothFactor","lerp","setWorldPosition","setPreferredVelocities","agentAid","agent","agentPos","moveTargetPos","goalVector","subtract2f","normalize","multiplyScalar","maxSpeed_","setAgentPrefVelocity","lengthSqr","RVO_EPSILON","ZERO","console","error","Attack","updateBloodPos","bloodPos","add","bombDie","removeEnemy","removeEnemyRvo","isValid","attackFlowerDie","followNode","parallel","to","call","i","randomPos","die","callback","knockbackFinalPos","by","onUpdate","skinnedMeshRenderer","setMaterialInstance","grayMaterial","originalPos","randomDir","Math","random","POS","coinAreaBan","vDis","dropController","dropItem","unschedule","removeAgent","update","deltaTime","isGameEnd","randomIndex","floor","pos","moveEndBlockPos","selfPos","forward","toTarget","subtract","isInFront","dot","enemyMovePath","Walk","moveToTarget","enemyMoveRvoPath","enemyMovePath2","enemtParentPath","targetNode","eulerAngles","flower","hit","setEnemyRvoList","direction","moveDistance","newPos","rotateToTarget","targetRot","currentRot","rotDiff","smoothDamp","current","target","smoothTime","diff","exp"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Quat, v2, Vec2, Vec3, Animation, tween, ProgressBar, approx, Material, SkinnedMeshRenderer, Tween, MeshRenderer, ParticleSystem, SkeletalAnimation } from 'cc';\r\nimport Entity from './Entity';\r\nimport { Simulator } from '../RVO/Simulator';\r\nimport { App } from '../App';\r\nimport { GlobeVariable } from '../core/GlobeVariable';\r\nimport { PlayerController } from './PlayerController';\r\nimport { RVOMath, Vector2 } from '../RVO/Common';\r\nimport Blood from './Blood';\r\nimport { SoundManager } from '../core/SoundManager';\r\n//import { DissolveEffect } from '../../Res/Fbx/materials/DissolveEffect/scripts/DissolveEffect';\r\nimport { BooldPaling } from '../BooldPaling';\r\nimport { PalingMaterial } from '../PalingMaterial';\r\nimport RVOUtils from '../RVO/RVOUtils';\r\nimport { DissolveEffect } from '../../Res/DissolveEffect/scripts/DissolveEffect';\r\nimport { Flower } from './Flower';\r\nimport { blockRed } from '../blockRed';\r\n/**\r\n *   敌人状态用类型限时状态\r\n *   没有太复杂逻辑 在本类做处理即可\r\n */\r\nexport enum enemyStateType {\r\n    Idle = \"idle\",\r\n    Move = \"move\",\r\n    Hit = \"hit\",\r\n    Attack = \"attack\",\r\n    Die = \"die\",\r\n    Walk = \"walk\",\r\n    Track = \"track\"\r\n}\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('EnemySpider')\r\nexport class EnemySpider extends Entity {\r\n\r\n    // @property(Node)\r\n    // electricParticle: Node = null;\r\n\r\n    @property(Material)\r\n    baseMaterial: Material = null;\r\n\r\n    @property(Material)\r\n    grayMaterial: Material = null;\r\n\r\n    @property(SkinnedMeshRenderer)\r\n    skinnedMeshRenderer: SkinnedMeshRenderer = null;\r\n    @property(DissolveEffect)\r\n    dissolveEffect: DissolveEffect[] = [];\r\n\r\n    @property(Node)\r\n    hitPosNode: Node = null;\r\n\r\n    @property(ParticleSystem)\r\n    hitParticle: ParticleSystem = null;\r\n\r\n    @property(ParticleSystem)\r\n    hitParticle1: ParticleSystem = null;\r\n\r\n    private machineState: enemyStateType = enemyStateType.Move;\r\n    private _blood: Blood = null;\r\n\r\n    private hitRangeV3: Vec3 = null;\r\n    public poolName: string = null;\r\n\r\n\r\n    spiderName: string = \"spider\"; //||rovSpider\r\n\r\n    private _bloodOffset: Vec3 = new Vec3(0, 3, 0);\r\n    //最大血量 当前血量\r\n    private _hp: number = 1;\r\n    hp = 1;\r\n    maxHp = 1;\r\n    //做预先扣除 防止怪物死亡后仍发射子弹攻击\r\n    recordHp: number = 1;\r\n    public hitPow = 2;\r\n    private endIsMove: boolean = true;//结束后蜘蛛是否可以移动\r\n\r\n    private _radius: number = 1.5; //敌人半径\r\n    private _rvoSpeed: number = 20; //敌人速度\r\n    // 是否到达追踪的栅栏\r\n    private isRvo: boolean = false;\r\n    private blockIndex: number = 0;\r\n    private speed: number = 5\r\n    private movePhase: number = 1;\r\n    public rvoLastMove: boolean = false\r\n    // 添加属性用于跟踪当前目标点\r\n    public currentTargetIndex: number = 0;\r\n\r\n    private dieGray: boolean = false; //是否死亡灰度\r\n\r\n\r\n    private flowerEat: boolean = false; //是否被花吃了\r\n    private selfScal: Vec3 = null;\r\n\r\n\r\n    @property(Number)\r\n    currentIndex: number = 0;\r\n\r\n    @property(Boolean)\r\n    isInitCraet: boolean = false\r\n\r\n    @property(Number)\r\n    spiderHp: number = 1;\r\n\r\n    @property(Number)\r\n    spiderType: number = 0;\r\n    // 0 普通蜘蛛 1  大蜘蛛\r\n    Idtype: number = 0;\r\n\r\n    private scheduleId: any = undefined;\r\n    private scheduleId1: any = undefined;\r\n    public isAttack: boolean = false; //是否可以被攻击\r\n\r\n    //RVOid\r\n    private _agentHandleId: number = -1;\r\n    public get agentHandleId(): number {\r\n        return this._agentHandleId;\r\n    }\r\n    public set agentHandleId(value: number) {\r\n        this._agentHandleId = value;\r\n    }\r\n    setSpiderPos() {\r\n        this.currentTargetIndex = 8\r\n\r\n    }\r\n    protected start(): void {\r\n        this.selfScal = this.node.scale.clone();\r\n        if (this.isInitCraet) {\r\n            this.init();\r\n            this.currentTargetIndex = this.currentIndex;\r\n            this._hp = this.spiderHp;\r\n            this.hp = this._hp;\r\n            this.maxHp = this._hp;\r\n            this.recordHp = this._hp;\r\n            this.isAttack = true;\r\n            if(this.spiderType == 0){\r\n                this.node.getComponent(SkeletalAnimation).getState(\"walk_f_1\").speed = 1.5;\r\n            }else if(this.spiderType == 1){\r\n                this.node.getComponent(SkeletalAnimation).getState(\"walk_f_1\").speed = 1;\r\n            }\r\n        }\r\n    }\r\n    setHp(hp: number) {\r\n        this._hp = hp;\r\n        this.hp = hp;\r\n        this.maxHp = hp;\r\n        this.recordHp = hp;\r\n    }\r\n    /** 初始化 */\r\n    public init(): void {\r\n        let data = App.dataManager.getMonsterById(1);\r\n        if (data) {\r\n            this._hp = data._hp;\r\n            this.hitPow = data._hitPow;\r\n            this.Idtype = data.Idtype;\r\n        }\r\n        this.reset();\r\n        this.Idtype = 0;\r\n        //RVOid\r\n        this.agentHandleId = -1;\r\n        this.setMaterByIndex(0, true);\r\n        //创建血条\r\n        // let bloodNode: Node = App.poolManager.getNode(GlobeVariable.entifyName.BloodBar);\r\n        // bloodNode.parent = App.sceneNode.bloodParent;\r\n        // bloodNode.active = true;\r\n        // this._blood = bloodNode.getComponent(Blood);\r\n        // this._blood?.init(this.maxHp);\r\n        this.blockIndex = GlobeVariable.blockIndex;\r\n        GlobeVariable.blockIndex++;\r\n        if (GlobeVariable.blockIndex >= App.sceneNode.moveBlockPos.children.length) {\r\n            GlobeVariable.blockIndex = 0;\r\n        }\r\n        this.move();\r\n        //  this.walk();\r\n\r\n    }\r\n\r\n\r\n    private setMaterByIndex(matIndex: number, needReset: boolean = false) {\r\n        if (!this.dissolveEffect) {\r\n            return;\r\n        }\r\n        this.dissolveEffect.forEach((d: DissolveEffect) => {\r\n            d.init();\r\n\r\n            let mesh: MeshRenderer = d.node.getComponent(MeshRenderer);\r\n            if (mesh) {\r\n                let matInstance: Material = mesh.getMaterialInstance(0);\r\n                if (matIndex === 1) {\r\n                    matInstance.setProperty('showType', 1.0);\r\n                } else if (matIndex === 0) {\r\n                    matInstance.setProperty('showType', 0.0);\r\n                    matInstance.setProperty('dissolveThreshold', 0.0);\r\n                } else if (matIndex === 2) {\r\n                    matInstance.setProperty('showType', 0.0);\r\n                    matInstance.setProperty('dissolveThreshold', 0.0);\r\n                    matInstance.setProperty('showTypeGray', 1.0);\r\n                    // this.dieGray = true;\r\n\r\n                    // d.play(0.8)\r\n                }\r\n\r\n            }\r\n\r\n            if (needReset) {\r\n                d.reset();\r\n            }\r\n        });\r\n\r\n    }\r\n    //普通的被攻击\r\n    baseHit(attack: number, bulletPos: Vec3, hitRange: number = 1) {\r\n        if (this.hp <= 0) return\r\n        if (!this.isAttack) return\r\n        // this.hitParticle.node.parent.active = true;\r\n        // this.hitParticle.play();\r\n        this.hitRangeV3 = new Vec3(bulletPos.x, bulletPos.y, bulletPos.z);\r\n        this.hitPow = hitRange;\r\n\r\n        this.hitEffct();\r\n        SoundManager.Instance.playAudio(\"zhizhushouji\");\r\n        this.setMaterByIndex(1);\r\n        if (this.machineState != enemyStateType.Die) {\r\n            if (this.machineState != enemyStateType.Hit)\r\n                this.machineState = enemyStateType.Hit;\r\n\r\n            this.takeDamage(attack);\r\n            this.setShowHp(attack);\r\n        }\r\n        this.scheduleOnce(() => {\r\n            if (this.dieGray) return\r\n            this.setMaterByIndex(0);\r\n        }, 0.1);\r\n    }\r\n    hitEffct(back: () => void = null) {\r\n\r\n        let arrowTx = App.poolManager.getNode(GlobeVariable.entifyName.ArrowTX);\r\n        if (!this.hitParticle || !this.hitParticle.node) return;\r\n        arrowTx.parent = this.hitParticle?.node.parent\r\n        arrowTx.setPosition(this.hitParticle.node.position);\r\n        arrowTx.active = true;\r\n        let particle = arrowTx.getChildByName(\"jizhong\").getComponent(ParticleSystem);\r\n        particle\r\n        particle.play()\r\n        this.scheduleOnce(() => {\r\n            // 1. 停止粒子播放\r\n            particle.stop();\r\n            // 3. 可选：手动清除所有粒子（根据引擎特性）\r\n            particle.clear();\r\n            arrowTx.active = false;\r\n            arrowTx.removeFromParent()\r\n            App.poolManager.returnNode(arrowTx, GlobeVariable.entifyName.ArrowTX);\r\n            if (back) {\r\n                back();\r\n            }\r\n\r\n        }, 1.5)\r\n    }\r\n    //普通的被攻击\r\n    baseHit1(attack: number, bulletPos: Vec3, hitRange: number = 1) {\r\n        if (this.hp <= 0) return\r\n\r\n        if (!this.isAttack) return\r\n        // this.hitParticle.node.parent.active = true;\r\n        // this.hitParticle.play();\r\n        this.hitRangeV3 = new Vec3(bulletPos.x, bulletPos.y, bulletPos.z);\r\n        this.hitPow = hitRange;\r\n\r\n        this.hitEffct1();\r\n        SoundManager.Instance.playAudio(\"zhizhushouji\");\r\n        this.setMaterByIndex(1);\r\n        if (this.machineState != enemyStateType.Die) {\r\n            if (this.machineState != enemyStateType.Hit)\r\n                this.machineState = enemyStateType.Hit;\r\n\r\n            this.takeDamage(attack);\r\n            this.setShowHp(attack);\r\n        }\r\n        this.scheduleOnce(() => {\r\n            if (this.dieGray) return\r\n            this.setMaterByIndex(0);\r\n        }, 0.1);\r\n    }\r\n    hitEffct1(back: () => void = null) {\r\n\r\n        let arrowTx = App.poolManager.getNode(GlobeVariable.entifyName.BeetleCollideTx);\r\n        arrowTx.parent = this.hitParticle1.node.parent\r\n        arrowTx.setPosition(this.hitParticle1.node.position);\r\n        arrowTx.active = true;\r\n        let particle = arrowTx.getChildByName(\"jizhong\").getComponent(ParticleSystem);\r\n        particle\r\n        particle.play()\r\n        this.scheduleOnce(() => {\r\n            // 1. 停止粒子播放\r\n            particle.stop();\r\n            // 3. 可选：手动清除所有粒子（根据引擎特性）\r\n            particle.clear();\r\n            arrowTx.active = false;\r\n            arrowTx.removeFromParent()\r\n            App.poolManager.returnNode(arrowTx, GlobeVariable.entifyName.BeetleCollideTx);\r\n            if (back) {\r\n                back();\r\n            }\r\n\r\n        }, 1.5)\r\n    }\r\n    //被炮塔攻击的受击\r\n\r\n    turretHit(attack: number, bulletPos: Vec3, hitRange: number = 8) {\r\n        if (this.hp <= 0) return\r\n        if (!this.isAttack) return\r\n        this.hitRangeV3 = new Vec3(bulletPos.x, bulletPos.y, bulletPos.z);\r\n        this.hitPow = hitRange;\r\n\r\n        this.setMaterByIndex(1);\r\n        if (this.machineState != enemyStateType.Die) {\r\n            if (this.machineState != enemyStateType.Hit)\r\n                this.machineState = enemyStateType.Hit;\r\n\r\n            this.takeDamage(attack);\r\n            this.setShowHp(attack);\r\n        }\r\n        this.scheduleOnce(() => {\r\n            if (this.dieGray) return\r\n            this.setMaterByIndex(0);\r\n        }, 0.1);\r\n    }\r\n    setShowHp(attack: number) {\r\n        if (!this._blood) {\r\n            return;\r\n        }\r\n        this._blood.node.active = true;\r\n        this._blood.injuryAni(attack);\r\n    }\r\n    //攻击的事件回调\r\n    attackEvent() {\r\n        if (GlobeVariable.isBlock) { //攻击的拒马存在\r\n            App.sceneNode.QianBiJuMa.forEach(item => {\r\n                item.getComponent(blockRed).setRed();\r\n            })\r\n            let blood = App.sceneNode.juma01.getChildByName(\"BloodPaling\");\r\n            blood.getComponent(BooldPaling).subscribeBool();\r\n            if (blood.getComponent(BooldPaling).getBloodHp() <= 0) {\r\n                // App.sceneNode.juma01.removeFromParent();\r\n                App.sceneNode.juma01.active = false;\r\n                GlobeVariable.isBlock = false;\r\n                GlobeVariable.blockRest = false;\r\n\r\n                // this.scheduleOnce(() => {\r\n                GlobeVariable.isFirstBlock = false;\r\n                blood.getComponent(BooldPaling).resetBloodHp();\r\n                // App.mapShowController.restBlock1();\r\n                // }, 3)\r\n\r\n                this.isRvo = false;\r\n                App.enemyController.restRvoEnemy();\r\n\r\n            }\r\n        }\r\n    }\r\n    private _walkTween: Tween<Node> = null;\r\n    /**移动状态 动画*/\r\n    move() {\r\n        if (this.machineState == enemyStateType.Die || !GlobeVariable.isStartGame) return;\r\n\r\n        if (this.machineState != enemyStateType.Move)\r\n            this.machineState = enemyStateType.Move;\r\n        if (!this.characterSkeletalAnimation.getState(\"walk_f_1\").isPlaying) {\r\n            this.characterSkeletalAnimation.play(\"walk_f_1\")\r\n            return;\r\n        }\r\n    }\r\n\r\n    //开始追踪怪\r\n    private trackMonster() {\r\n        // 设置 RVO\r\n        const mass = 1;\r\n        const agentId = Simulator.instance.addAgent(\r\n            RVOUtils.v3t2(this.node.worldPosition.clone()),\r\n            this._radius,\r\n            this._rvoSpeed,\r\n            null,\r\n            mass\r\n        );\r\n\r\n        const agentObj = Simulator.instance.getAgentByAid(agentId);\r\n        agentObj.neighborDist = this._radius * 2.5;\r\n        this.agentHandleId = agentId;\r\n        this.machineState = enemyStateType.Track;\r\n\r\n    }\r\n    /**\r\n * 在此之前 请确保Simulator run执行完毕\r\n */\r\n    private _curState = null;\r\n    moveByRvo(dt) {\r\n        if (this.agentHandleId == -1) return;\r\n        const currentPos1 = new Vec3();\r\n        Vec3.copy(currentPos1, this.node.worldPosition);\r\n\r\n        // 获取玩家的世界位置\r\n        const playerPos = new Vec3();\r\n        let block = App.sceneNode.moveBlockPos.children[this.blockIndex];\r\n        block.getWorldPosition(playerPos);\r\n\r\n        // 计算距离\r\n        const distance = Vec3.distance(currentPos1, playerPos);\r\n        // 如果距离小于等于攻击距离，则执行攻击逻辑\r\n        if (distance <= 2.5) {\r\n\r\n            if (this.attack1()) {\r\n                return;\r\n            }\r\n        } else {\r\n            const p = Simulator.instance.getAgentPosition(this.agentHandleId);\r\n            const targetPos = new Vec3(p.x, playerPos.y, p.y);\r\n            const currentPos = this.node.worldPosition.clone();\r\n\r\n            const dist = Vec3.distance(currentPos, targetPos);\r\n            if (dist > 1) {\r\n                const smoothFactor = 1;\r\n                Vec3.lerp(currentPos, currentPos, targetPos, dt * smoothFactor);\r\n                this.node.setWorldPosition(currentPos);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * 设置追踪主角的线速度方向和大小\r\n    *  \r\n    */\r\n    setPreferredVelocities(hitPow: number = null) {\r\n        if (this.agentHandleId < 0) {\r\n            return;\r\n        }\r\n\r\n        let agentAid = this.agentHandleId\r\n        let agent = Simulator.instance.getAgentByAid(agentAid)\r\n        let agentPos = Simulator.instance.getAgentPosition(agentAid)\r\n\r\n        const playerPos = new Vec3();\r\n        let block = App.sceneNode.moveBlockPos.children[this.blockIndex];\r\n        block.getWorldPosition(playerPos);\r\n        let moveTargetPos: Vec2 = v2(playerPos.x, playerPos.z);\r\n\r\n        if (hitPow) {\r\n            if (agent && agentPos) {\r\n                let goalVector: Vec2 = moveTargetPos.subtract2f(agentPos.x, agentPos.y)\r\n                goalVector = goalVector.normalize().multiplyScalar(agent.maxSpeed_ * -hitPow);\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, goalVector);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (agent && agentPos) {\r\n            let goalVector: Vec2 = moveTargetPos.subtract2f(agentPos.x, agentPos.y)\r\n            if (goalVector.lengthSqr() > 1.0) {\r\n                goalVector = goalVector.normalize().multiplyScalar(agent.maxSpeed_);\r\n            }\r\n            if (goalVector.lengthSqr() < RVOMath.RVO_EPSILON) {\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, Vec2.ZERO);\r\n            }\r\n            else {\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, goalVector);\r\n            }\r\n        } else {\r\n            console.error(\"RVO异常::\", agent, agentPos, agentAid)\r\n        }\r\n\r\n    }\r\n\r\n    attack1() {\r\n        if (this.machineState != enemyStateType.Attack)\r\n            this.machineState = enemyStateType.Attack;\r\n        if (!this.characterSkeletalAnimation.getState(\"attack01_1\").isPlaying) {\r\n\r\n            this.characterSkeletalAnimation.play(\"attack01_1\");\r\n            // if (this._isArrivePaling) {\r\n            //     GlobeVariable.bearAttackPalingNum_audio++;\r\n            //     if (GlobeVariable.bearAttackPalingNum_audio < 4) {\r\n            //         SoundManager.inst.playAudio(\"YX_daqiang\");\r\n            //     }\r\n\r\n            // }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    private updateBloodPos() {\r\n        //同步更新血条位置\r\n        if (this._blood) {\r\n            let bloodPos: Vec3 = new Vec3();\r\n            Vec3.add(bloodPos, this.node.worldPosition.clone(), this._bloodOffset);\r\n            this._blood.node.setWorldPosition(bloodPos);\r\n        }\r\n    }\r\n    bombDie() {\r\n\r\n\r\n        if (!this.isAttack) return\r\n        if (this.machineState != enemyStateType.Die)\r\n            this.machineState = enemyStateType.Die;\r\n        this.isAttack = false;\r\n        this.hitEffct();\r\n        this.scheduleOnce(() => {\r\n\r\n\r\n            // 1. 从EnemyController的列表中移除自己\r\n            App.enemyController.removeEnemy(this);\r\n            App.enemyController.removeEnemyRvo(this);\r\n            //  this.characterSkeletalAnimation.once(Animation.EventType.FINISHED, () => {\r\n            this.node.removeFromParent();\r\n            this.node.active = false;\r\n\r\n            // 回收节点到对象池（检查节点有效性）\r\n            if (this.node?.isValid) {\r\n                App.poolManager.returnNode(this.node, this.poolName);\r\n            }\r\n            // 回收血条节点（检查节点有效性）\r\n            if (this._blood?.isValid) {\r\n                //this._blood.node.active = false;\r\n                this._blood = null;\r\n            }\r\n            this.reset();\r\n            // if (this.Idtype == 1) {\r\n            //     for (let i = 0; i < 10; i++) {\r\n            //         this.randomPos();\r\n            //     }\r\n            // } else {\r\n            //     for (let i = 0; i < 3; i++) {\r\n            //         this.randomPos();\r\n            //     }\r\n            // }\r\n        }, 0.1)\r\n\r\n\r\n\r\n\r\n    }\r\n    attackFlowerDie(followNode: Node) {\r\n        if (this.machineState != enemyStateType.Die)\r\n            this.machineState = enemyStateType.Die;\r\n        this.isAttack = false;\r\n        this.flowerEat = true;\r\n        App.enemyController.removeEnemy(this);\r\n        App.enemyController.removeEnemyRvo(this);\r\n\r\n        tween(this.node)\r\n            .parallel(\r\n                tween().to(0.5, { scale: new Vec3(0, 0, 0) }),\r\n                tween().to(0.5, { worldPosition: followNode.worldPosition },)\r\n            )\r\n            .call(() => {\r\n                this.node.scale = this.selfScal;\r\n                this.node.removeFromParent();\r\n                this.node.active = false;\r\n                this.reset();\r\n                // 回收节点到对象池（检查节点有效性）\r\n                if (this.node?.isValid) {\r\n                    App.poolManager.returnNode(this.node, this.poolName);\r\n                }\r\n                // 回收血条节点（检查节点有效性）\r\n                if (this._blood?.isValid) {\r\n                    //this._blood.node.active = false;\r\n                    this._blood = null;\r\n                }\r\n\r\n            })\r\n            .start();\r\n        // if(followNode){\r\n        //     this.node.setWorldPosition(followNode.worldPosition);\r\n        // }\r\n\r\n        if (this.Idtype == 1) {\r\n            for (let i = 0; i < 10; i++) {\r\n                this.randomPos();\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 3; i++) {\r\n                this.randomPos();\r\n            }\r\n        }\r\n    }\r\n\r\n    die(callback?: (...agrs: unknown[]) => void): void {\r\n\r\n\r\n        if (this.machineState != enemyStateType.Die)\r\n            this.machineState = enemyStateType.Die;\r\n        this.isAttack = false;\r\n        if (!this.node.isValid || !this.node) {\r\n            return;\r\n        }\r\n        const currentPos = this.node.getWorldPosition().clone();\r\n        const playerPos = this.hitRangeV3;\r\n\r\n\r\n        // 计算击退方向向量\r\n        let goalVector = new Vec2(playerPos.x, playerPos.z).subtract2f(currentPos.x, currentPos.z);\r\n        goalVector = goalVector.normalize().multiplyScalar(-this.hitPow);\r\n        // 预测击退后的终点\r\n        const knockbackFinalPos = currentPos.clone().add(new Vec3(goalVector.x, 0, goalVector.y));\r\n        tween(this.node)\r\n            .by(0.15, { position: new Vec3(goalVector.x, 0, goalVector.y) }, {\r\n                onUpdate: () => {\r\n                    this.updateBloodPos();\r\n                }\r\n            })\r\n            .start();\r\n        // if (!this.characterSkeletalAnimation.getState(\"die\").isPlaying) {\r\n\r\n        //     this.characterSkeletalAnimation.play(\"die\");\r\n        //     GlobeVariable.bearDiegNum_audio++;\r\n        //     if (GlobeVariable.bearDiegNum_audio < 4) {\r\n        //         SoundManager.inst.playAudio(\"YX_xiong\");\r\n        //     }\r\n        // }\r\n        if (!this.characterSkeletalAnimation.getState(\"die_1\").isPlaying) {\r\n            this.characterSkeletalAnimation.play(\"die_1\");\r\n        }\r\n\r\n\r\n        this.scheduleId = this.scheduleOnce(() => {\r\n            this.dieGray = true;\r\n            this.skinnedMeshRenderer.setMaterialInstance(this.grayMaterial, 0);\r\n            // this.setMaterByIndex(2);\r\n            this.scheduleId1 = this.scheduleOnce(() => {\r\n\r\n\r\n                // 1. 从EnemyController的列表中移除自己\r\n                App.enemyController.removeEnemy(this);\r\n                App.enemyController.removeEnemyRvo(this);\r\n                //  this.characterSkeletalAnimation.once(Animation.EventType.FINISHED, () => {\r\n                this.node.removeFromParent();\r\n                this.node.active = false;\r\n\r\n                // 回收节点到对象池（检查节点有效性）\r\n                if (this.node?.isValid) {\r\n                    App.poolManager.returnNode(this.node, this.poolName);\r\n                }\r\n                // 回收血条节点（检查节点有效性）\r\n                if (this._blood?.isValid) {\r\n                    //this._blood.node.active = false;\r\n                    this._blood = null;\r\n                }\r\n                this.reset();\r\n                // App.dropController.dropItem(this.node.getWorldPosition().clone());\r\n                if (this.Idtype == 1) {\r\n                    for (let i = 0; i < 10; i++) {\r\n                        this.randomPos();\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < 3; i++) {\r\n                        this.randomPos();\r\n                    }\r\n                }\r\n\r\n\r\n                // });\r\n            }, 0.5);\r\n        }, 0.05);\r\n\r\n    }\r\n    randomPos() {\r\n        // 获取原位置并克隆\r\n        const originalPos = this.node.getWorldPosition().clone();\r\n        // 生成随机方向向量并归一化\r\n        const randomDir = new Vec3(\r\n            Math.random() * 2 - 1,  // x轴: -1 到 1\r\n            0,  // y轴: -1 到 1\r\n            Math.random() * 2 - 1   // z轴: -1 到 1\r\n        ).normalize();\r\n        // 计算5单位距离的随机偏移量并添加到原位置\r\n        const randomPos = originalPos.add(randomDir.multiplyScalar(Math.random() * 6));\r\n\r\n        let POS = App.sceneNode.coinAreaBan.worldPosition.clone();\r\n\r\n        let vDis = Vec3.distance(randomPos, POS)\r\n        if (vDis > 6) {\r\n            // 使用随机位置掉落物品\r\n            App.dropController.dropItem(randomPos);\r\n        }else{\r\n            this.randomPos();\r\n        }\r\n    }\r\n    private reset() {\r\n\r\n        // 清理调度\r\n        if (this.scheduleId !== undefined) {\r\n            this.unschedule(this.scheduleId);\r\n            this.scheduleId = undefined;\r\n        }\r\n\r\n        if (this.scheduleId1 !== undefined) {\r\n            this.unschedule(this.scheduleId1);\r\n            this.scheduleId1 = undefined;\r\n        }\r\n        this.isAttack = false;\r\n        this.hp = this._hp;\r\n        this.maxHp = this._hp;\r\n        this.recordHp = this._hp;\r\n        this.spiderName = \"spider\";\r\n        this._radius = 3; //敌人半径\r\n        this._rvoSpeed = 20; //敌人速度\r\n        // 是否到达追踪的栅栏\r\n        this.isRvo = false;\r\n        this.blockIndex = 0;\r\n        this.speed = 5\r\n        this.movePhase = 1;\r\n        this.rvoLastMove = false\r\n        this.machineState = enemyStateType.Move;\r\n        this.characterSkeletalAnimation.play(\"walk_f_1\");\r\n        this.setMaterByIndex(0);\r\n        this.dieGray = false;\r\n        this.flowerEat = false;\r\n        this.currentTargetIndex = 0;\r\n\r\n        //RVOid\r\n        if (this.agentHandleId != -1) {\r\n            Simulator.instance.removeAgent(this.agentHandleId);\r\n            this.agentHandleId = -1;\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (GlobeVariable.isGameEnd) {\r\n            if (!this.endIsMove) return;\r\n\r\n            const randomIndex = Math.floor(Math.random() * 4);\r\n            let pos = App.sceneNode.moveEndBlockPos.children[randomIndex].worldPosition\r\n            let selfPos = this.node.worldPosition;\r\n            // // 计算两点到世界原点的距离\r\n            // const posDistance = pos.length();\r\n            // const selfDistance = selfPos.length();\r\n            // const isFartherFromOrigin = posDistance > selfDistance;\r\n            // if (isFartherFromOrigin) {\r\n            //     this.node.setWorldPosition(pos);\r\n            // }\r\n            // 获取自身前方向量（假设Z轴为前）\r\n            const forward = this.node.forward;\r\n            // 计算目标相对于自身的向量\r\n            const toTarget = pos.clone().subtract(selfPos);\r\n            // 点积判断是否在前方（大于0为前方）\r\n            const isInFront = toTarget.dot(forward) < 1.5;\r\n            if (isInFront && this.endIsMove) {\r\n                this.endIsMove = false;\r\n                this.node.setWorldPosition(pos);\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (!GlobeVariable.isStartGame) {\r\n            return;\r\n        }\r\n        if (this.flowerEat) return;\r\n\r\n        this.updateBloodPos();\r\n        if (this.currentTargetIndex < App.sceneNode.enemyMovePath.children.length && this.movePhase == 1) {\r\n\r\n            this.machineState = enemyStateType.Walk;\r\n            this.moveToTarget(deltaTime, App.sceneNode.enemyMovePath);\r\n\r\n        } else if (this.movePhase == 2) {\r\n\r\n            if (GlobeVariable.isBlock && this.isRvo && !this.rvoLastMove) {\r\n                this.moveByRvo(deltaTime);\r\n                this.setPreferredVelocities()\r\n            } else {\r\n                this.move();\r\n                if (this.spiderName == \"rovSpider\") {\r\n                    Simulator.instance.removeAgent(this.agentHandleId);\r\n                    this.agentHandleId = -1;\r\n                    this.speed = 8;\r\n                    if (this.rvoLastMove) {\r\n                        this.moveToTarget(deltaTime, App.sceneNode.enemyMoveRvoPath);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    this.moveToTarget(deltaTime, App.sceneNode.enemyMovePath2);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    /*************************主体移动模块 每帧移动*********************************/\r\n\r\n\r\n    /** 移动到当前目标点 */\r\n    private moveToTarget(deltaTime: number, enemtParentPath: Node) {\r\n        const targetNode = enemtParentPath.children[this.currentTargetIndex];\r\n        const targetPos = targetNode.worldPosition;\r\n        const currentPos = this.node.worldPosition;\r\n        // 计算距离\r\n        const distance = Vec3.distance(currentPos, targetPos);\r\n        // 如果到达目标点，切换到下一个\r\n        if (distance < 0.1) { // 可根据需要调整阈值\r\n            this.currentTargetIndex++;\r\n            // 旋转到目标方向\r\n            this.node.eulerAngles = targetNode.eulerAngles.clone();\r\n            if (this.currentTargetIndex >= enemtParentPath.children.length) {\r\n                this.movePhase += 1;\r\n                this.currentTargetIndex = 0;\r\n                if (this.movePhase > 2) {\r\n                    if (this._blood) {\r\n                        this._blood.injuryAni(100);\r\n                    }\r\n                    this.bombDie();\r\n                    App.sceneNode.flower.getComponent(Flower).hit(1);\r\n                    return;\r\n                }\r\n\r\n                // 第二阶段：GlobeVariable.isBlock true 拒马存在，开启RVO\r\n                if (GlobeVariable.isBlock && this.movePhase == 2) {\r\n                    this.isRvo = true;\r\n                    this.trackMonster();\r\n                    this.spiderName = \"rovSpider\";\r\n                    App.enemyController.setEnemyRvoList(this);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 计算移动方向\r\n        const direction = Vec3.subtract(new Vec3(), targetPos, currentPos).normalize();\r\n\r\n        // 计算每帧移动距离\r\n        const moveDistance = this.speed * deltaTime;\r\n\r\n        // 更新位置\r\n        const newPos = Vec3.add(new Vec3(), currentPos, Vec3.multiplyScalar(new Vec3(), direction, moveDistance));\r\n        this.node.worldPosition = newPos;\r\n\r\n        // 平滑旋转朝向目标\r\n        this.rotateToTarget(targetNode.eulerAngles, deltaTime);\r\n    }\r\n\r\n    /** 平滑旋转到目标角度 */\r\n    private rotateToTarget(targetRot: Vec3, deltaTime: number) {\r\n        const currentRot = this.node.eulerAngles;\r\n        // 计算旋转差值并平滑过渡\r\n        const rotDiff = new Vec3(\r\n            this.smoothDamp(currentRot.x, targetRot.x, deltaTime),\r\n            this.smoothDamp(currentRot.y, targetRot.y, deltaTime),\r\n            this.smoothDamp(currentRot.z, targetRot.z, deltaTime)\r\n        );\r\n        this.node.eulerAngles = rotDiff;\r\n    }\r\n\r\n    /** 平滑插值函数 */\r\n    private smoothDamp(current: number, target: number, deltaTime: number, smoothTime: number = 0.5): number {\r\n        let diff = target - current;\r\n        // 处理角度环绕问题\r\n        if (diff > 180) diff -= 360;\r\n        if (diff < -180) diff += 360;\r\n        return current + diff * (1 - Math.exp(-deltaTime / smoothTime));\r\n    }\r\n\r\n    // // 旋转到目标方向\r\n    // private rotateTowards(targetWorldPos: Vec3, dt: number) {\r\n    //     const currentPos = this.node.worldPosition.clone();\r\n    //     const dir = new Vec3();\r\n    //     Vec3.subtract(dir, targetWorldPos, currentPos);\r\n    //     dir.y = 0;\r\n    //     dir.normalize();\r\n\r\n    //     if (!dir) return;\r\n\r\n    //     const targetQuat = new Quat();\r\n    //     Quat.fromViewUp(targetQuat, dir, Vec3.UP);\r\n\r\n    //     const currentQuat = this.node.worldRotation.clone();\r\n    //     const resultQuat = new Quat();\r\n    //     Quat.slerp(resultQuat, currentQuat, targetQuat, Math.min(1, dt * 40));\r\n    //     this.node.worldRotation = resultQuat;\r\n    // }\r\n\r\n    // public isAlive(): boolean {\r\n    //     return this.machineState !== enemyStateType.Die;\r\n    // }\r\n}\r\n\r\n\r\n"]}