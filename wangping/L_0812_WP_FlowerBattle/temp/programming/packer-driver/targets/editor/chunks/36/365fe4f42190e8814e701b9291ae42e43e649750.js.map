{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/PalingMaterial.ts"],"names":["_decorator","Component","Material","MeshRenderer","tween","ccclass","property","PalingMaterial","type","tooltip","shakeMaterial","rendererMaterial","node","sequence","call","setMaterialInstance","redMaterial","extendMaterial","delay","baseMaterial","repeat","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Y,OAAAA,Y;AAAyCC,MAAAA,K,OAAAA,K;;;;;;;;;OAC7E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;gCAGjBO,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,OAAO,EAAE;AAA3B,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,OAAO,EAAE;AAA3B,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,OAAO,EAAE;AAA3B,OAAD,C,UAIRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL,YAAR;AAAsBM,QAAAA,OAAO,EAAE;AAA/B,OAAD,C,2BAZb,MACaF,cADb,SACoCN,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAgB1C;AACA;AACA;AACAS,QAAAA,aAAa,GAAG;AACZ;AACA;AACA;AACA;AACA;AACAN,UAAAA,KAAK,CAAC,KAAKO,gBAAL,CAAsBC,IAAvB,CAAL,CACI;AADJ,WAEKC,QAFL,EAGQ;AACAT,UAAAA,KAAK,GAAGU,IAAR,CAAa,MAAM;AACf,iBAAKH,gBAAL,CAAsBI,mBAAtB,CAA0C,KAAKC,WAA/C,EAA4D,CAA5D;;AACA,gBAAI,KAAKC,cAAT,EAAyB;AACrB,mBAAKN,gBAAL,CAAsBI,mBAAtB,CAA0C,KAAKC,WAA/C,EAA4D,CAA5D;AACH,aAJc,CAMf;;AACH,WAPD,CAJR,EAYQ;AACAZ,UAAAA,KAAK,GAAGc,KAAR,CAAc,GAAd,CAbR,EAcQ;AACAd,UAAAA,KAAK,GAAGU,IAAR,CAAa,MAAM;AACf,iBAAKH,gBAAL,CAAsBI,mBAAtB,CAA0C,KAAKI,YAA/C,EAA6D,CAA7D;;AACA,gBAAI,KAAKF,cAAT,EAAyB;AACrB,mBAAKN,gBAAL,CAAsBI,mBAAtB,CAA0C,KAAKE,cAA/C,EAA+D,CAA/D;AACH;AACJ,WALD,CAfR,EAqBQ;AACAb,UAAAA,KAAK,GAAGc,KAAR,CAAc,GAAd,CAtBR,EAwBI;AAxBJ,WAyBKE,MAzBL,CAyBY,CAzBZ,EA0BI;AA1BJ,WA2BKC,KA3BL;AA4BH;;AACDA,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA5DyC,O;;;;;iBAEjB,I;;;;;;;iBAGD,I;;;;;;;iBAGI,I;;;;;;;iBAIK,I","sourcesContent":["import { _decorator, Component, Material, MeshRenderer, Node, SkinnedMeshRenderer, tween } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PalingMaterial')\r\nexport class PalingMaterial extends Component {\r\n    @property({ type: Material, tooltip: \"基础材质\" })\r\n    baseMaterial: Material = null;\r\n\r\n    @property({ type: Material, tooltip: \"红色材质\" })\r\n    redMaterial: Material = null;\r\n\r\n    @property({ type: Material, tooltip: \"附加材质\" })\r\n    extendMaterial?: Material = null; \r\n\r\n\r\n    @property({ type: MeshRenderer, tooltip: \"MeshRenderer\" })\r\n    rendererMaterial: MeshRenderer = null;\r\n\r\n\r\n\r\n    // shakeMaterial(){\r\n    //     //this.node.getComponent(MeshRenderer).material = this.redMaterial;\r\n    // }\r\n    shakeMaterial() {\r\n        //  let houseMaterial = this.node.getChildByName(\"playerNode\").getChildByName(\"player\").getChildByName(\"Shimin\").getComponent(SkinnedMeshRenderer);\r\n        // let materials = houseMaterial.materials;\r\n        //    materials[0] = this.redyMaterial;\r\n        //    materials[1] = this.redyMaterial;\r\n        //    houseMaterial.materials = materials\r\n        tween(this.rendererMaterial.node)\r\n            // 定义要重复的动作序列：切换材质→等待→切回材质→等待\r\n            .sequence(\r\n                // 切换到目标材质\r\n                tween().call(() => {\r\n                    this.rendererMaterial.setMaterialInstance(this.redMaterial, 0);\r\n                    if (this.extendMaterial) {\r\n                        this.rendererMaterial.setMaterialInstance(this.redMaterial, 1);\r\n                    }\r\n\r\n                    // houseMaterial.setMaterialInstance(this.redyMaterial, 1);\r\n                }),\r\n                // 等待 0.2 秒\r\n                tween().delay(0.1),\r\n                // 切回原材质\r\n                tween().call(() => {\r\n                    this.rendererMaterial.setMaterialInstance(this.baseMaterial, 0);\r\n                    if (this.extendMaterial) {\r\n                        this.rendererMaterial.setMaterialInstance(this.extendMaterial, 1);\r\n                    }\r\n                }),\r\n                // 等待 0.2 秒（与切换时间对称）\r\n                tween().delay(0.1)\r\n            )\r\n            // 重复整个序列 3 次\r\n            .repeat(1)\r\n            // 启动 tween\r\n            .start();\r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}