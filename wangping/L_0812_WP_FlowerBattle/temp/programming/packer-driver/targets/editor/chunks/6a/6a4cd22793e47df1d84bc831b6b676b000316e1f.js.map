{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/RVO/Common.ts"],"names":["Vector2","Obstacle","Line","KeyValuePair","RVOMath","constructor","x","y","plus","vector","minus","multiply","scale","k","copy","v","clone","substract","out","other","lengthSqr","next","previous","direction","point","id","convex","key","value","absSq","normalize","abs","distSqPointLineSegment","vector1","vector2","vector3","aux1","aux2","r","sqr","p","det","v1","v2","Math","sqrt","leftOf","a","b","c","RVO_EPSILON"],"mappings":"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","sourcesContent":["import { Vec2 } from \"cc\";\r\n\r\nexport class Vector2 {\r\n    x = 0;\r\n    y = 0;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    plus(vector: Vector2) {\r\n        return new Vector2(this.x + vector.x, this.y + vector.y);\r\n    }\r\n\r\n    minus(vector: Vector2) {\r\n        return new Vector2(this.x - vector.x, this.y - vector.y);\r\n    }\r\n\r\n    multiply(vector: Vector2) {\r\n        return this.x * vector.x + this.y * vector.y;\r\n    }\r\n\r\n    scale(k: number) {\r\n        return new Vector2(this.x * k, this.y * k);\r\n    }\r\n\r\n    copy(v: Vector2 | Vec2) {\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        return this;\r\n    }\r\n\r\n    clone() {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    substract(out: Vector2, other: Vector2) {\r\n        out.x -= other.x;\r\n        out.y -= other.y;\r\n        return out;\r\n    }\r\n\r\n    lengthSqr() {\r\n        return this.x ** 2 + this.y ** 2;\r\n    }\r\n}\r\n\r\nexport class Obstacle {\r\n    next: Obstacle;\r\n    previous: Obstacle;\r\n    direction: Vector2;\r\n    point: Vector2;\r\n    id: number;\r\n    convex: boolean;\r\n}\r\n\r\nexport class Line {\r\n    point: Vector2;\r\n    direction: Vector2;\r\n}\r\n\r\nexport class KeyValuePair<K, V> {\r\n    key: K;\r\n    value: V;\r\n    constructor(key: K, value: V) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport class RVOMath {\r\n\r\n    static RVO_EPSILON = 0.00001;\r\n\r\n    static absSq(v: Vector2) {\r\n        return v.multiply(v);\r\n    };\r\n\r\n    static normalize(v: Vector2) {\r\n        return v.scale(1 / RVOMath.abs(v)); // v / abs(v)\r\n    };\r\n\r\n    static distSqPointLineSegment(vector1: Vector2, vector2: Vector2, vector3: Vector2) {\r\n        let aux1 = vector3.minus(vector1);\r\n        let aux2 = vector2.minus(vector1);\r\n\r\n        let r = aux1.multiply(aux2) / RVOMath.absSq(aux2);\r\n\r\n        if (r < 0) {\r\n            return RVOMath.absSq(aux1);\r\n        }\r\n        else if (r > 1) {\r\n            return RVOMath.absSq(vector3.minus(vector2));\r\n        }\r\n        else {\r\n            return RVOMath.absSq(vector3.minus(vector1.plus(aux2.scale(r))));\r\n        }\r\n    };\r\n\r\n    static sqr(p: number) {\r\n        return p * p;\r\n    };\r\n\r\n    static det(v1: Vector2, v2: Vector2) {\r\n        return v1.x * v2.y - v1.y * v2.x;\r\n    };\r\n\r\n    static abs(v: Vector2) {\r\n        return Math.sqrt(RVOMath.absSq(v));\r\n    };\r\n\r\n    static leftOf(a: Vector2, b: Vector2, c: Vector2) {\r\n        return RVOMath.det(a.minus(c), b.minus(a));\r\n    };\r\n\r\n}"]}