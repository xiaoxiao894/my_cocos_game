{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/PlayerBeetle.ts"],"names":["_decorator","Collider","Node","Vec3","Entity","App","EnemySpider","ccclass","property","PlayerBeetle","hp","maxHp","attack","movePhase","currentTargetIndex","speed","start","characterData","dataManager","getCharacterById","moveSpeed","attackDamage","mainPath","sceneNode","beetleMovePath","characterSkeletalAnimation","play","collider","node","getComponent","on","onTriggerEnter","onTriggerStay","onTriggerExit","event","otherCollider","name","console","log","enemySpider","baseHit1","worldPosition","beetleController","removeBeetle","poolManager","returnNode","resetMovement","nodeName","update","deltaTime","handleMovement","children","length","moveToTarget","pathParent","targetNode","targetPos","currentPos","distance","eulerAngles","clone","direction","subtract","normalize","moveDistance","newPos","add","multiplyScalar","rotateToTarget","targetRot","currentRot","rotDiff","smoothDamp","x","y","z","current","target","smoothTime","diff","Math","exp"],"mappings":"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","sourcesContent":["import { _decorator, Collider, Component, ITriggerEvent, Node, Vec3 } from 'cc';\r\nimport Entity from './Entity';\r\nimport { App } from '../App';\r\nimport { EnemySpider } from './EnemySpider';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerBeetle')\r\nexport class PlayerBeetle extends Entity {\r\n     hp = 2;\r\n     maxHp = 2;\r\n     attack: number = 20;\r\n\r\n    // 移动相关属性\r\n    @property(Node)\r\n    mainPath: Node = null; // 主路径节点\r\n\r\n    private movePhase: number = 1; // 移动阶段\r\n    private currentTargetIndex: number = 0; // 当前目标点索引\r\n    private speed: number = 15; // 移动速度\r\n\r\n    start() {\r\n        let characterData = App.dataManager.getCharacterById(4);\r\n        if (characterData) { \r\n            this.speed = characterData.moveSpeed;\r\n            this.attack = characterData.attackDamage;\r\n            this.maxHp = characterData.maxHp\r\n            this.hp = characterData.hp;\r\n        }\r\n        // 初始化路径节点（如果未在编辑器中设置，则使用默认路径）\r\n        if (!this.mainPath) this.mainPath = App.sceneNode.beetleMovePath;\r\n        this.characterSkeletalAnimation?.play('cut_walk_f');\r\n        const collider = this.node.getComponent(Collider);\r\n        collider.on('onTriggerEnter', this.onTriggerEnter, this);\r\n        collider.on('onTriggerStay', this.onTriggerStay, this);\r\n        collider.on('onTriggerExit', this.onTriggerExit, this);\r\n    }\r\n    onTriggerEnter(event: ITriggerEvent) {\r\n        if(event.otherCollider.node.name == \"Spider\" || event.otherCollider.node.name == \"Spider_L\"){\r\n            console.log(\"甲虫的碰撞是否生效 == \"+event.otherCollider.node.name)\r\n            let enemySpider = event.otherCollider.node.getComponent(EnemySpider);\r\n            if(enemySpider.hp > 0){\r\n                enemySpider.baseHit1(this.attack,this.node.worldPosition,6);\r\n\r\n            }\r\n            if(event.otherCollider.node.name == \"Spider\"){\r\n                this.hp-=2;\r\n                if(this.hp <= 0){\r\n                    this.hp = 0;\r\n                }\r\n            }else{\r\n                this.hp-=1;\r\n                if(this.hp <= 0){\r\n                    this.hp = 0;\r\n                }\r\n\r\n            }\r\n            if(this.hp <= 0){\r\n                App.beetleController.removeBeetle(this);\r\n                App.poolManager.returnNode(this.node);\r\n                this.resetMovement();\r\n                return;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    //事件监听触发\r\n    onTriggerStay(event: ITriggerEvent) {\r\n        const nodeName = event.otherCollider.node.name;\r\n    }\r\n\r\n    onTriggerExit(event: ITriggerEvent) {\r\n        console.log(\"onTriggerExit\")\r\n      \r\n    }\r\n    update(deltaTime: number) {\r\n        this.handleMovement(deltaTime);\r\n    }\r\n\r\n    /** 处理移动逻辑 */\r\n    private handleMovement(deltaTime: number) {\r\n        // 第一阶段移动：沿主路径\r\n        if (this.currentTargetIndex < this.mainPath?.children.length ) {\r\n            this.moveToTarget(deltaTime, this.mainPath);\r\n        }\r\n\r\n    }\r\n\r\n    /** 移动到当前目标点 */\r\n    private moveToTarget(deltaTime: number, pathParent: Node) {\r\n        if (!pathParent || pathParent.children.length === 0) return;\r\n\r\n        const targetNode = pathParent.children[this.currentTargetIndex];\r\n        const targetPos = targetNode.worldPosition;\r\n        const currentPos = this.node.worldPosition;\r\n\r\n        // 计算距离\r\n        const distance = Vec3.distance(currentPos, targetPos);\r\n\r\n        // 如果到达目标点，切换到下一个\r\n        if (distance < 3) { // 可根据需要调整阈值\r\n            this.currentTargetIndex++;\r\n            // 旋转到目标方向\r\n            this.node.eulerAngles = targetNode.eulerAngles.clone();\r\n            \r\n            // 检查是否到达路径终点\r\n            if (this.currentTargetIndex >= pathParent.children.length) {\r\n                \r\n                this.currentTargetIndex = 0;\r\n              \r\n                App.beetleController.removeBeetle(this);\r\n                App.poolManager.returnNode(this.node);\r\n                this.resetMovement();\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 计算移动方向\r\n        const direction = Vec3.subtract(new Vec3(), targetPos, currentPos).normalize();\r\n\r\n        // 计算每帧移动距离\r\n        const moveDistance = this.speed * deltaTime;\r\n\r\n        // 更新位置\r\n        const newPos = Vec3.add(new Vec3(), currentPos, Vec3.multiplyScalar(new Vec3(), direction, moveDistance));\r\n        this.node.worldPosition = newPos;\r\n\r\n        // 平滑旋转朝向目标\r\n        this.rotateToTarget(targetNode.eulerAngles, deltaTime);\r\n    }\r\n\r\n    /** 平滑旋转到目标角度 */\r\n    private rotateToTarget(targetRot: Vec3, deltaTime: number) {\r\n        const currentRot = this.node.eulerAngles;\r\n        // 计算旋转差值并平滑过渡\r\n        const rotDiff = new Vec3(\r\n            this.smoothDamp(currentRot.x, targetRot.x, deltaTime),\r\n            this.smoothDamp(currentRot.y, targetRot.y, deltaTime),\r\n            this.smoothDamp(currentRot.z, targetRot.z, deltaTime)\r\n        );\r\n        this.node.eulerAngles = rotDiff;\r\n    }\r\n\r\n    /** 平滑插值函数 */\r\n    private smoothDamp(current: number, target: number, deltaTime: number, smoothTime: number = 0.5): number {\r\n        let diff = target - current;\r\n        // 处理角度环绕问题\r\n        if (diff > 180) diff -= 360;\r\n        if (diff < -180) diff += 360;\r\n        return current + diff * (1 - Math.exp(-deltaTime / smoothTime));\r\n    }\r\n\r\n    /** 重置移动状态 */\r\n    public resetMovement() {\r\n        this.movePhase = 1;\r\n        this.currentTargetIndex = 0;\r\n       \r\n        let characterData = App.dataManager.getCharacterById(4);\r\n        if (characterData) { \r\n            this.speed = characterData.moveSpeed;\r\n            this.attack = characterData.attackDamage;\r\n            this.maxHp = characterData.maxHp\r\n            this.hp = characterData.hp;\r\n        }\r\n    }\r\n\r\n    // /** 设置移动速度 */\r\n    // public setSpeed(newSpeed: number) {\r\n    //     this.speed = newSpeed;\r\n    // }\r\n}\r\n    "]}