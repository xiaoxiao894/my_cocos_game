{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/EnemyController.ts"],"names":["EnemyController","SkeletalAnimation","App","GlobeVariable","EnemySpider","enemyList","enemInitList","enemyRvoList","Instance","_instance","init","sceneNode","enemyParent","children","length","forEach","item","enemy","getComponent","node","name","isAttack","spiderType","entifyName","EnemySpiderL","speedBig","currentTargetIndex","currentIndex","worldPosition","clone","worldRotation","spiderHp","push","continueGame","key","prefab","poolManager","getNode","parent","setWorldPosition","setWorldRotation","active","getState","speed","enemySpider","spiderName","poolName","setHp","creatEnemyByLevel","level","isStartGame","realCreatEnemy","enemyBirthPos","getEnemyList","getEnemyRvoList","setEnemyRvoList","removeEnemy","removeEnemyRvo","index","indexOf","splice","restRvoEnemy","setTimeout","rvoLastMove","console","log","pos","prefabName","curEnemySpiderNum","enemySpiderNumBig","data","dataManager","getMonsterById","Idtype","hp","_hp","maxHp","recordHp","hitPow","_hitPow","update","dt"],"mappings":"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","sourcesContent":["import { _decorator, Node, SkeletalAnimation, tween, Vec3 } from 'cc';\r\nimport { App } from '../App';\r\nimport { GlobeVariable } from '../core/GlobeVariable';\r\nimport { EnemySpider } from './EnemySpider';\r\n\r\n\r\nexport class EnemyController {\r\n\r\n    private enemyList: EnemySpider[] = [];//敌人列\r\n    private enemInitList = {};\r\n    private enemyRvoList: EnemySpider[] = [];//敌人列表\r\n\r\n    public static _instance: EnemyController = null;\r\n\r\n    public static get Instance() {\r\n        if (this._instance == null) {\r\n            this._instance = new EnemyController();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public init() {\r\n        if (App.sceneNode.enemyParent.children.length > 0) {\r\n            App.sceneNode.enemyParent.children.forEach((item) => {\r\n                let enemy = item.getComponent(EnemySpider);\r\n                // 确保enemInitList中存在对应的对象\r\n                if (!this.enemInitList[enemy.node.name]) {\r\n                    this.enemInitList[enemy.node.name] = {};\r\n                }\r\n                // 然后再设置属性\r\n                this.enemInitList[enemy.node.name].isAttack = true;\r\n                if(enemy.spiderType == 0){\r\n                    this.enemInitList[enemy.node.name].entifyName = GlobeVariable.entifyName.EnemySpiderL;\r\n                }else{\r\n                    this.enemInitList[enemy.node.name].entifyName = GlobeVariable.entifyName.EnemySpider;\r\n                }\r\n                this.enemInitList[enemy.node.name].spiderType = enemy.spiderType;\r\n                if(enemy.spiderType == 0){\r\n                    this.enemInitList[enemy.node.name].speedBig = 1.5;\r\n                }else{\r\n                    this.enemInitList[enemy.node.name].speedBig = 1;\r\n                }\r\n                \r\n                this.enemInitList[enemy.node.name].currentTargetIndex = enemy.currentIndex;\r\n                this.enemInitList[enemy.node.name].worldPosition     = enemy.node.worldPosition.clone(); // 使用clone避免引用问题\r\n                this.enemInitList[enemy.node.name].worldRotation     = enemy.node.worldRotation.clone(); // 使用clone避免引用问题\r\n                this.enemInitList[enemy.node.name].spiderHp = enemy.spiderHp;\r\n                if (enemy) {\r\n                    enemy.isAttack = true;\r\n                    this.enemyList.push(enemy);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    continueGame() {\r\n        this.enemyList.length = 0;\r\n        this.enemyRvoList.length = 0;\r\n        this.enemyList = [];//敌人列表\r\n        this.enemyRvoList = [];//敌人列表\r\n        for (let key in this.enemInitList) {\r\n            let prefab = App.poolManager.getNode(this.enemInitList[key].entifyName);\r\n            prefab.parent = App.sceneNode.enemyParent;\r\n            prefab.setWorldPosition(this.enemInitList[key].worldPosition);\r\n            prefab.setWorldRotation(this.enemInitList[key].worldRotation);\r\n            prefab.active = true;\r\n            prefab.getComponent(SkeletalAnimation).getState(\"walk_f_1\").speed = this.enemInitList[key].speedBig;\r\n\r\n            let enemySpider = prefab.getComponent(EnemySpider);\r\n            enemySpider.spiderName = \"spider\";\r\n            enemySpider.poolName = this.enemInitList[key].entifyName;\r\n            \r\n\r\n            enemySpider.init();\r\n            enemySpider.setHp(this.enemInitList[key].spiderHp);\r\n            enemySpider.currentTargetIndex = this.enemInitList[key].currentTargetIndex;\r\n            enemySpider.isAttack = true;\r\n            this.enemyList.push(enemySpider);\r\n        }\r\n       // this.enemInitList = null;\r\n       // this.enemInitList = {};\r\n    }\r\n    //n级敌人随机出现的位置\r\n    public creatEnemyByLevel(level: number) {\r\n        if( !GlobeVariable.isStartGame ) return;\r\n        this.realCreatEnemy(App.sceneNode.enemyBirthPos.worldPosition.clone());\r\n    }\r\n\r\n    getEnemyList() {\r\n        return this.enemyList;\r\n    }\r\n    getEnemyRvoList() {\r\n        return this.enemyRvoList;\r\n    }\r\n    /**\r\n     * 添加敌人到RVO寻找列表\r\n     * 从对列列表删除\r\n     * @param enemy \r\n     */\r\n    setEnemyRvoList(enemy: EnemySpider) {\r\n        this.enemyRvoList.push(enemy);\r\n        this.removeEnemy(enemy);\r\n\r\n    }\r\n\r\n    removeEnemyRvo(enemy: EnemySpider) {\r\n        const index = this.enemyRvoList.indexOf(enemy);\r\n        if (index !== -1) {\r\n            this.enemyRvoList.splice(index, 1); // 从列表中移除\r\n        }\r\n    }\r\n    restRvoEnemy() {\r\n        this.enemyRvoList.forEach((enemy, index) => {\r\n            setTimeout(() => {\r\n                if (enemy) {  // 额外检查，确保元素存在\r\n                    enemy.rvoLastMove = true;\r\n                }\r\n            }, index * 300);\r\n        });\r\n    }\r\n\r\n    // restRvoEnemy() {\r\n    //     for (let index = 0; index < this.enemyRvoList.length; index++) {\r\n    //         setTimeout(() => {\r\n    //             const enemy = this.enemyRvoList[index];\r\n    //             if (enemy) {\r\n    //                 enemy.rvoLastMove = true;\r\n    //             }\r\n    //         }, index * 500);\r\n\r\n    //     }\r\n    // }\r\n\r\n    // resetEnemyAttackPaling() {\r\n    //     for (let index = 0; index < this.enemyList.length; index++) {\r\n    //         const enemy = this.enemyList[index];\r\n    //         enemy.resetPaling();\r\n    //     }\r\n    // }\r\n\r\n\r\n    public removeEnemy(enemy: EnemySpider) {\r\n        const index = this.enemyList.indexOf(enemy);\r\n        if (index !== -1) {\r\n            this.enemyList.splice(index, 1); // 从列表中移除\r\n        }\r\n        console.log(`remove enemy ,num ${this.enemyList.length}`);\r\n    }\r\n    /** 真正创建怪 */\r\n    private realCreatEnemy(pos: Vec3) {\r\n        //  GlobeVariable.curEnemySpiderNum++;\r\n        //let scaleT = 1.8\r\n        // 提取公共逻辑，减少重复代码\r\n        let prefabName = GlobeVariable.curEnemySpiderNum > GlobeVariable.enemySpiderNumBig\r\n            ? GlobeVariable.entifyName.EnemySpider\r\n            : GlobeVariable.entifyName.EnemySpiderL;\r\n\r\n        let prefab = App.poolManager.getNode(prefabName);\r\n        prefab.parent = App.sceneNode.enemyParent;\r\n        prefab.setWorldPosition(pos);\r\n        prefab.active = true;\r\n\r\n\r\n        let enemySpider = prefab.getComponent(EnemySpider);\r\n        prefab.getComponent(SkeletalAnimation).getState(\"walk_f_1\").speed = 1.5;\r\n        enemySpider.spiderName = \"spider\";\r\n        enemySpider.poolName = prefabName;\r\n\r\n        enemySpider.init();\r\n        // if(GlobeVariable.initEnemyBirthPosCurUnm <= GlobeVariable.initEnemyBirthPosNumLimit){\r\n        //     prefab.setWorldPosition(App.sceneNode.enemyBirthPos1.worldPosition.clone());\r\n        //     enemySpider.setSpiderPos();\r\n        //     GlobeVariable.initEnemyBirthPosCurUnm++;\r\n        // }\r\n\r\n        setTimeout(() => {\r\n            enemySpider.isAttack = true;\r\n\r\n        }, 3);\r\n\r\n        this.enemyList.push(enemySpider);\r\n        console.log(`push enemy ,num ${this.enemyList.length}`);\r\n\r\n        // 根据类型设置不同属性\r\n        if (GlobeVariable.curEnemySpiderNum > GlobeVariable.enemySpiderNumBig) {\r\n            GlobeVariable.curEnemySpiderNum = 0;\r\n            prefab.getComponent(SkeletalAnimation).getState(\"walk_f_1\").speed = 1;\r\n            let data = App.dataManager.getMonsterById(2);\r\n            if (data) {\r\n                enemySpider.Idtype = data.Idtype;\r\n                enemySpider.hp = data._hp;\r\n                enemySpider.maxHp = data._hp;\r\n                enemySpider.recordHp = data._hp;\r\n                enemySpider.hitPow = data._hitPow;\r\n            }\r\n\r\n            // 实现大蜘蛛的缩放\r\n            // prefab.setScale(2.8, 2.8, 2.8); // 假设使用这样的方法设置缩放\r\n        }\r\n\r\n        // 统一计数逻辑，无论大小蜘蛛都计入总数\r\n        GlobeVariable.curEnemySpiderNum++;\r\n\r\n\r\n\r\n\r\n\r\n        // //出现动画\r\n        // tween(prefab)\r\n        //     .to(0.15, { scale: new Vec3(1, 1.2, 1) }, { easing: 'quadOut' })\r\n        //     .to(0.05, { scale: new Vec3(scaleT, scaleT, scaleT) }, { easing: 'quadOut' })\r\n\r\n        //     .start();\r\n    }\r\n\r\n    public update(dt: number) {\r\n        for (let index = 0; index < this.enemyList.length; index++) {\r\n            const enemy = this.enemyList[index];\r\n            enemy?.getComponent(EnemySpider)?.update(dt);\r\n        }\r\n        for (let index = 0; index < this.enemyRvoList.length; index++) {\r\n            const enemy = this.enemyRvoList[index];\r\n            enemy?.getComponent(EnemySpider)?.update(dt);\r\n        }\r\n    }\r\n}"]}