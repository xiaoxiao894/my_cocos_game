{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/HandOver.ts"],"names":["_decorator","Component","tween","Vec3","MathUtil","ccclass","property","HandOver","handOver","packNode","handOverNode","callBack","handOverPosNode","console","error","handOverPos","worldPosition","clone","woodNode","woodWorldPos","getWorldPosition","LIFT_HEIGHT","controlPoint","x","y","z","to","scale","easing","onUpdate","target","ratio","position","bezierCurve","call","removeFromParent","destroy","start"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACpCC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BN,SAD9B,CACwC;AAIpCO,QAAAA,QAAQ,CAACC,QAAD,EAAUC,YAAV,EAAwBC,QAAxB,EAAkC;AAExC;AACG;AACA,cAAIC,eAAe,GAAGF,YAAtB;;AACA,cAAI,CAACE,eAAL,EAAsB;AAClBC,YAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACA;AACH;;AACD,cAAIC,WAAW,GAAGH,eAAe,CAACI,aAAhB,CAA8BC,KAA9B,EAAlB;AAIA,cAAMC,QAAQ,GAAGT,QAAjB;AACA,cAAMU,YAAY,GAAGD,QAAQ,CAACE,gBAAT,GAA4BH,KAA5B,EAArB,CAdqC,CAgBrC;;AACA,cAAMI,WAAW,GAAG,EAApB,CAjBqC,CAiBb;AACzB;AACA;AACA;AACA;AACA;;AACC,cAAMC,YAAY,GAAG,IAAInB,IAAJ,CACjBe,QAAQ,CAACF,aAAT,CAAuBO,CADN,EAEjB,CAACL,QAAQ,CAACF,aAAT,CAAuBQ,CAAvB,GAA2BT,WAAW,CAACS,CAAxC,IAA6C,CAA7C,GAAiDH,WAFhC,EAGjBH,QAAQ,CAACF,aAAT,CAAuBS,CAHN,CAArB,CAvBqC,CA4BrC;;AACAvB,UAAAA,KAAK,CAACgB,QAAD,CAAL,CACKQ,EADL,CACQ,GADR,EACa;AACLC,YAAAA,KAAK,EAAE,IAAIxB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AADF,WADb,EAGO;AACCyB,YAAAA,MAAM,EAAE,YADT;AAECC,YAAAA,QAAQ,EAAE,CAACC,MAAD,EAAeC,KAAf,KAAiC;AACzC;AACE;AACA,kBAAMC,QAAQ,GAAG;AAAA;AAAA,wCAASC,WAAT,CACbd,YADa,EAEbG,YAFa,EAGbP,WAHa,EAIbgB,KAJa,CAAjB;AAMAD,cAAAA,MAAM,CAACd,aAAP,GAAuBgB,QAAvB;AACH;AAZF,WAHP,EAiBKE,IAjBL,CAiBU,MAAM;AAER;AACAhB,YAAAA,QAAQ,CAACiB,gBAAT;AACAjB,YAAAA,QAAQ,CAACkB,OAAT,GAJQ,CAKV;;AACEzB,YAAAA,QAAQ;AAEX,WAzBL,EA0BK0B,KA1BL;AA2BJ;;AA5DmC,O","sourcesContent":["import { _decorator, Component, Node, tween, Vec3 } from 'cc';\r\nimport { MathUtil } from '../core/MathUtils';\r\nimport { eventMgr } from '../core/EventManager';\r\nimport { EventType } from '../core/EventType';\r\nimport { GlobeVariable } from '../core/GlobeVariable';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HandOver')\r\nexport class HandOver extends Component {\r\n\r\n\r\n\r\n    handOver(packNode,handOverNode ,callBack) {\r\n\r\n      //  GlobeVariable.handOverPhase = true;\r\n         // 获取交付位置节点\r\n         let handOverPosNode = handOverNode;\r\n         if (!handOverPosNode) {\r\n             console.error(\"找不到交付位置节点\");\r\n             return;\r\n         }\r\n         let handOverPos = handOverPosNode.worldPosition.clone();\r\n \r\n\r\n \r\n         const woodNode = packNode;\r\n         const woodWorldPos = woodNode.getWorldPosition().clone();\r\n \r\n         // 计算贝塞尔曲线控制点（提升高度可配置）\r\n         const LIFT_HEIGHT = 10; // 可提取为配置项\r\n        //  const controlPoint = new Vec3(\r\n        //      (woodNode.worldPosition.x + handOverPos.x) / 2,\r\n        //      (woodNode.worldPosition.y + handOverPos.y) / 2 + LIFT_HEIGHT,\r\n        //      (woodNode.worldPosition.z + handOverPos.z) / 2\r\n        //  );\r\n         const controlPoint = new Vec3(\r\n             woodNode.worldPosition.x ,\r\n             (woodNode.worldPosition.y + handOverPos.y) / 2 + LIFT_HEIGHT,\r\n             woodNode.worldPosition.z \r\n         );\r\n         // 执行贝塞尔曲线动画\r\n         tween(woodNode)\r\n             .to(0.1, {\r\n                 scale: new Vec3(6, 6, 6)\r\n             }, {\r\n                 easing: 'cubicInOut',\r\n                 onUpdate: (target: Node, ratio: number) => {\r\n                   // GlobeVariable.handOverPhase = true;\r\n                     // 计算贝塞尔曲线位置\r\n                     const position = MathUtil.bezierCurve(\r\n                         woodWorldPos,\r\n                         controlPoint,\r\n                         handOverPos,\r\n                         ratio\r\n                     );\r\n                     target.worldPosition = position;\r\n                 }\r\n             })\r\n             .call(() => {\r\n\r\n                 // 从场景中移除木头\r\n                 woodNode.removeFromParent();\r\n                 woodNode.destroy();\r\n               //  GlobeVariable.handOverPhase = false;\r\n                 callBack()\r\n\r\n             })\r\n             .start();\r\n    }\r\n}\r\n\r\n\r\n"]}