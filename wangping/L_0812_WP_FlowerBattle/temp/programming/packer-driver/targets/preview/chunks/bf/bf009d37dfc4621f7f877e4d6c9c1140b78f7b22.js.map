{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/blockRed.ts"],"names":["_decorator","Component","MeshRenderer","DissolveEffect","ccclass","property","blockRed","start","setMaterByIndex","setRed","scheduleOnce","matIndex","needReset","dissolveEffect","forEach","d","init","mesh","node","getComponent","matInstance","getMaterialInstance","setProperty","play","reset","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAqBC,MAAAA,Y,OAAAA,Y;;AACjCC,MAAAA,c,iBAAAA,c;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAGjBM,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ;AAAA;AAAA,2C,2BAFb,MACaC,QADb,SAC8BL,SAD9B,CACwC;AAAA;AAAA;;AAAA;AAAA;;AAI1BM,QAAAA,KAAK,GAAS;AACpB,eAAKC,eAAL,CAAqB,CAArB,EAAwB,IAAxB;AACH;;AACDC,QAAAA,MAAM,GAAG;AACL,eAAKD,eAAL,CAAqB,CAArB;AAEA,eAAKE,YAAL,CAAkB,MAAM;AACpB,iBAAKF,eAAL,CAAqB,CAArB;AACH,WAFD,EAEG,GAFH;AAIH;;AACOA,QAAAA,eAAe,CAACG,QAAD,EAAmBC,SAAnB,EAA+C;AAAA,cAA5BA,SAA4B;AAA5BA,YAAAA,SAA4B,GAAP,KAAO;AAAA;;AAClE,cAAI,CAAC,KAAKC,cAAV,EAA0B;AACtB;AACH;;AACD,eAAKA,cAAL,CAAoBC,OAApB,CAA6BC,CAAD,IAAuB;AAC/CA,YAAAA,CAAC,CAACC,IAAF;AAEA,gBAAIC,IAAkB,GAAGF,CAAC,CAACG,IAAF,CAAOC,YAAP,CAAoBjB,YAApB,CAAzB;;AACA,gBAAIe,IAAJ,EAAU;AACN,kBAAIG,WAAqB,GAAGH,IAAI,CAACI,mBAAL,CAAyB,CAAzB,CAA5B;;AACA,kBAAIV,QAAQ,KAAK,CAAjB,EAAoB;AAChBS,gBAAAA,WAAW,CAACE,WAAZ,CAAwB,UAAxB,EAAoC,GAApC;AACH,eAFD,MAEO,IAAIX,QAAQ,KAAK,CAAjB,EAAoB;AACvBS,gBAAAA,WAAW,CAACE,WAAZ,CAAwB,UAAxB,EAAoC,GAApC;AACAF,gBAAAA,WAAW,CAACE,WAAZ,CAAwB,mBAAxB,EAA6C,GAA7C;AACH,eAHM,MAGA,IAAIX,QAAQ,KAAK,CAAjB,EAAoB;AACvBS,gBAAAA,WAAW,CAACE,WAAZ,CAAwB,UAAxB,EAAoC,GAApC;AACAF,gBAAAA,WAAW,CAACE,WAAZ,CAAwB,mBAAxB,EAA6C,GAA7C;AACAP,gBAAAA,CAAC,CAACQ,IAAF,CAAO,GAAP;AACH;AAEJ;;AAED,gBAAIX,SAAJ,EAAe;AACXG,cAAAA,CAAC,CAACS,KAAF;AACH;AACJ,WAtBD;AAwBH;;AACDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA9CmC,O;;;;;iBAED,E","sourcesContent":["import { _decorator, Component, Material, MeshRenderer, Node } from 'cc';\r\nimport { DissolveEffect } from '../Res/DissolveEffect/scripts/DissolveEffect';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('blockRed')\r\nexport class blockRed extends Component {\r\n    @property(DissolveEffect)\r\n    dissolveEffect: DissolveEffect[] = [];\r\n\r\n    protected start(): void {\r\n        this.setMaterByIndex(0, true);\r\n    }\r\n    setRed() {\r\n        this.setMaterByIndex(1);\r\n\r\n        this.scheduleOnce(() => {\r\n            this.setMaterByIndex(0);\r\n        }, 0.1);\r\n\r\n    }\r\n    private setMaterByIndex(matIndex: number, needReset: boolean = false) {\r\n        if (!this.dissolveEffect) {\r\n            return;\r\n        }\r\n        this.dissolveEffect.forEach((d: DissolveEffect) => {\r\n            d.init();\r\n\r\n            let mesh: MeshRenderer = d.node.getComponent(MeshRenderer);\r\n            if (mesh) {\r\n                let matInstance: Material = mesh.getMaterialInstance(0);\r\n                if (matIndex === 1) {\r\n                    matInstance.setProperty('showType', 1.0);\r\n                } else if (matIndex === 0) {\r\n                    matInstance.setProperty('showType', 0.0);\r\n                    matInstance.setProperty('dissolveThreshold', 0.0);\r\n                } else if (matIndex === 2) {\r\n                    matInstance.setProperty('showType', 0.0);\r\n                    matInstance.setProperty('dissolveThreshold', 0.0);\r\n                    d.play(0.8)\r\n                }\r\n\r\n            }\r\n\r\n            if (needReset) {\r\n                d.reset();\r\n            }\r\n        });\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}