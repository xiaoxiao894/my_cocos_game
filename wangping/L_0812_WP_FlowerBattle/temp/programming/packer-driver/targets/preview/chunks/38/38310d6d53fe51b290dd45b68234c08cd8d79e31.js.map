{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/PlayerPylon.ts"],"names":["_decorator","Node","tween","Vec3","SkeletalAnimation","Quat","Entity","App","GlobeVariable","SoundManager","ccclass","property","PlayerPylon","type","attackRange","enemyList","attackTargetList","attackType","bulletSpeed","hp","maxHp","attack","attackInterval","testInterval","_speed","bulletPos","enemyHitPos","currentTarget","audioPlayNum","onLoad","start","characterData","dataManager","getCharacterById","attackDamage","fireNode","active","node","getChildByName","move","restFireEvent","console","log","AttackAni","checkEnemy","isValidEnemy","currentAttackTarget","hitPosNode","isValid","worldPosition","clone","rotateTowards","Instance","playAudio","prefab","poolManager","getNode","entifyName","FireArrow","setWorldPosition","setWorldRotation","worldRotation","setWorldScale","worldScale","parent","sceneNode","fireArrow","recordHp","distance","flightTime","Math","max","initialTargetPos","to","onUpdate","target","ratio","isAttack","removeFromParent","returnNode","currentPos","dir","subtract","normalize","lengthSqr","oppositeDir","x","y","z","targetQuat","fromViewUp","UP","call","baseHit","attack1","checkRange","characterAnima","play","die","callback","update","deltaTime","rvoEnemyList","enemyController","getEnemyRvoList","getEnemyList","i","length","enemy","isInAttackRange","push","minDis","Number","MAX_VALUE","minEnemy","targetWorldPos","dt","currentQuat","resultQuat","slerp","min"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Vec3, SkeletalAnimation, Quat, BoxCollider } from 'cc';\r\nimport Entity from './Entity';\r\nimport { App } from '../App';\r\nimport { GlobeVariable } from '../core/GlobeVariable';\r\nimport { SoundManager } from '../core/SoundManager';\r\nimport { EnemySpider } from './EnemySpider';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerPylon')\r\nexport class PlayerPylon extends Entity {\r\n    // @property\r\n    attackRange: number = 30; // 攻击范围，可在编辑器中调整\r\n\r\n    @property({ type: SkeletalAnimation })\r\n    characterAnima: SkeletalAnimation = null; // 骨骼动画组件\r\n\r\n    @property({ type: Node })\r\n    fireNode: Node = null;\r\n\r\n\r\n    private enemyList: EnemySpider[] = []; // 敌人列表\r\n    private attackTargetList: EnemySpider[] = []; // 攻击目标列表\r\n\r\n    private attackType = 2; // 1-随机攻击 2-攻击最近的\r\n\r\n    private bulletSpeed: number = 150;\r\n\r\n    // 血量属性\r\n    hp = 2;\r\n    maxHp = 2;\r\n    attack: number = 1;\r\n\r\n    // 攻击间隔\r\n    private attackInterval: number = 0.25;\r\n    private testInterval = 0.3;\r\n\r\n    private _speed: number = 10;\r\n    // 塔发射子弹的位置\r\n    private bulletPos: Node = null;\r\n\r\n    // 敌人受击位置\r\n    private enemyHitPos: Vec3 = null;\r\n    // 当前攻击目标\r\n    private currentTarget: EnemySpider = null;\r\n\r\n    private audioPlayNum: number = 0;\r\n\r\n    onLoad() {\r\n\r\n    }\r\n    start() {\r\n        let characterData = App.dataManager.getCharacterById(2);\r\n        //  \r\n        if (characterData) {\r\n            this.attackRange = characterData.attackRange;\r\n            this.attack = characterData.attackDamage;\r\n            this.maxHp = characterData.maxHp;\r\n            this.hp = characterData.hp;\r\n            this.attackInterval = characterData.attackInterval;\r\n            this.testInterval = characterData.attackInterval;\r\n            this.fireNode.active = true;\r\n        }\r\n        this.bulletPos = this.node.getChildByName(\"attackPos\");\r\n    }\r\n\r\n    move() {\r\n        // 塔防无需移动逻辑\r\n    }\r\n    restFireEvent() {\r\n        this.fireNode.active = true;\r\n        console.log(\"restFireEvent\");\r\n    }\r\n    AttackAni() {\r\n        this.fireNode.active = false;\r\n        // 检查敌人列表（更新范围内敌人）\r\n        this.checkEnemy();\r\n\r\n        // 仅使用attack1中已确定的currentTarget，不重复计算\r\n        if (this.currentTarget) {\r\n            // 二次校验目标有效性（避免攻击准备阶段目标死亡或被重置）\r\n            if (!this.isValidEnemy(this.currentTarget)) {\r\n                this.currentTarget = null;\r\n                return;\r\n            }\r\n\r\n            // 保存当前攻击目标快照，防止回调时目标变化\r\n            const currentAttackTarget = this.currentTarget;\r\n            if (!currentAttackTarget.hitPosNode || !currentAttackTarget.node.isValid) {\r\n                return;\r\n            }\r\n            this.enemyHitPos = currentAttackTarget.hitPosNode.worldPosition.clone();\r\n\r\n            // 旋转到目标方向\r\n            this.rotateTowards(this.enemyHitPos, 40);\r\n\r\n            // 播放攻击音效（限制次数）\r\n            SoundManager.Instance.playAudio(\"gonggongji\");\r\n\r\n            // 创建并发射子弹\r\n            const prefab = App.poolManager.getNode(GlobeVariable.entifyName.FireArrow);\r\n            prefab.setWorldPosition(this.bulletPos.worldPosition);\r\n            prefab.setWorldRotation(this.bulletPos.worldRotation);\r\n            prefab.setWorldScale(this.bulletPos.worldScale);\r\n            prefab.parent = App.sceneNode.fireArrow;\r\n\r\n            currentAttackTarget.recordHp -= this.attack;\r\n\r\n            const distance = Vec3.distance(this.bulletPos.worldPosition, this.enemyHitPos);\r\n            const flightTime = Math.max(0.05, distance / this.bulletSpeed);\r\n\r\n            // 保存初始目标位置，防止目标移动导致子弹跟踪到出生点\r\n            const initialTargetPos = this.enemyHitPos.clone();\r\n\r\n            tween(prefab)\r\n                .to(flightTime, { worldPosition: initialTargetPos }, {\r\n                    onUpdate: (target: Node, ratio) => {\r\n                        // 检查目标是否有效，无效则立即终止动画并回收子弹\r\n                        if (!currentAttackTarget || !currentAttackTarget.node || !currentAttackTarget.node.isValid || !currentAttackTarget.isAttack) {\r\n                            //     prefab.stopAllActions();\r\n                            prefab.removeFromParent();\r\n                            App.poolManager.returnNode(prefab);\r\n                            return;\r\n                        }\r\n                        // 在每一帧更新时，让箭矢面向目标方向\r\n                        const currentPos = target.worldPosition;\r\n                        const dir = new Vec3();\r\n                        Vec3.subtract(dir, initialTargetPos, currentPos);\r\n                        dir.normalize();\r\n\r\n                        if (dir.lengthSqr() > 0.0001) {\r\n                            const oppositeDir = new Vec3(-dir.x, -dir.y, -dir.z);\r\n                            const targetQuat = new Quat();\r\n                            Quat.fromViewUp(targetQuat, oppositeDir, Vec3.UP);\r\n                            target.worldRotation = targetQuat;\r\n                        }\r\n                    }\r\n                })\r\n                .call(() => {\r\n                    // 使用快照目标执行攻击，避免currentTarget已被重置\r\n                    if (currentAttackTarget && currentAttackTarget.node && currentAttackTarget.node.isValid && currentAttackTarget.hp > 0 && currentAttackTarget.isAttack) {\r\n                        currentAttackTarget.baseHit(this.attack, this.bulletPos.worldPosition, 4);\r\n                    }\r\n                    prefab.removeFromParent();\r\n                    App.poolManager.returnNode(prefab);\r\n                })\r\n                .start();\r\n        }\r\n    }\r\n\r\n    attack1() {\r\n        // 1. 先更新敌人列表\r\n        this.checkEnemy();\r\n\r\n        // 2. 统一在这里检查并更新目标（攻击前确认）\r\n        this.checkRange();\r\n\r\n        // 3. 检查是否有有效目标\r\n        if (!this.currentTarget) {\r\n\r\n            return;\r\n        }\r\n\r\n        // 5. 执行攻击动画\r\n        this.characterAnima.play(\"Attack_HuoChaiHe\");\r\n    }\r\n\r\n    die(callback?: (...agrs: unknown[]) => void): void {\r\n        // 死亡逻辑可在此实现\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.testInterval += deltaTime;\r\n        if (this.testInterval > this.attackInterval) {\r\n            this.testInterval -= this.attackInterval;\r\n            this.attack1();\r\n        }\r\n    }\r\n\r\n    /** 查找可攻击的敌人（更新攻击目标列表） */\r\n    checkEnemy() {\r\n        this.attackTargetList = []; // 清空列表\r\n        const rvoEnemyList = App.enemyController.getEnemyRvoList();\r\n        const enemyList = App.enemyController.getEnemyList();\r\n\r\n        // 先检查RVO敌人列表\r\n        for (let i = 0; i < rvoEnemyList.length; i++) {\r\n            const enemy = rvoEnemyList[i];\r\n            if (!this.isValidEnemy(enemy)) continue;\r\n\r\n            if (this.isInAttackRange(enemy.node)) {\r\n                this.attackTargetList.push(enemy);\r\n            }\r\n        }\r\n\r\n        // RVO列表无目标时检查普通敌人列表\r\n        if (this.attackTargetList.length === 0) {\r\n            for (let i = 0; i < enemyList.length; i++) {\r\n                const enemy = enemyList[i];\r\n                if (!this.isValidEnemy(enemy)) continue;\r\n\r\n                if (this.isInAttackRange(enemy.node)) {\r\n                    this.attackTargetList.push(enemy);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 检查并更新最近的敌人目标 */\r\n    checkRange() {\r\n        // 当前目标有效且在范围内则直接返回\r\n        if (this.currentTarget && this.isValidEnemy(this.currentTarget) && this.isInAttackRange(this.currentTarget.node)) {\r\n            return this.currentTarget;\r\n        }\r\n\r\n        // 查找最近的敌人\r\n        let minDis = Number.MAX_VALUE;\r\n        let minEnemy: EnemySpider = null;\r\n        for (let i = 0; i < this.attackTargetList.length; i++) {\r\n            const enemy = this.attackTargetList[i];\r\n            const distance = Vec3.distance(enemy.node.worldPosition, this.node.worldPosition);\r\n            if (distance < minDis) {\r\n                minDis = distance;\r\n                minEnemy = enemy;\r\n            }\r\n        }\r\n\r\n        this.currentTarget = minEnemy;\r\n        return minEnemy;\r\n    }\r\n\r\n    /** 辅助判断：敌人是否有效（存活） */\r\n    private isValidEnemy(enemy: EnemySpider): boolean {\r\n        // 增加对isAttack和node.isValid的检查\r\n        return enemy && enemy.node && enemy.node.isValid && enemy.hp > 0 && enemy.recordHp > 0 && enemy.isAttack;\r\n    }\r\n\r\n    /** 辅助判断：目标是否在攻击范围内 */\r\n    private isInAttackRange(target: Node): boolean {\r\n        if (!target) {\r\n            return false;\r\n        }\r\n        return Vec3.distance(target.worldPosition, this.node.worldPosition) < this.attackRange;\r\n    }\r\n\r\n    /** 旋转到目标方向 */\r\n    private rotateTowards(targetWorldPos: Vec3, dt: number) {\r\n        const currentPos = this.node.worldPosition.clone();\r\n        const dir = new Vec3();\r\n        Vec3.subtract(dir, targetWorldPos, currentPos);\r\n        dir.y = 0; // 保持水平旋转\r\n        dir.normalize();\r\n\r\n        if (dir.lengthSqr() < 0.0001) return;\r\n\r\n        const oppositeDir = new Vec3(-dir.x, -dir.y + 0.1, -dir.z - 0.1);\r\n        const targetQuat = new Quat();\r\n        Quat.fromViewUp(targetQuat, oppositeDir, Vec3.UP);\r\n\r\n        const currentQuat = this.node.worldRotation.clone();\r\n        const resultQuat = new Quat();\r\n        Quat.slerp(resultQuat, currentQuat, targetQuat, Math.min(1, dt * 40));\r\n        this.node.worldRotation = resultQuat;\r\n    }\r\n}"]}