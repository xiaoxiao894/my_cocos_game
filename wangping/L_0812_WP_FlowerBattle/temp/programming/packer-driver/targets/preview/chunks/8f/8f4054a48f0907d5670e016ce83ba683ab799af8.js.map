{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/Entitys/PlayerAttackFlower.ts"],"names":["_decorator","Node","Vec3","SkeletalAnimation","Collider","Animation","ProgressBar","Slider","UIOpacity","Entity","App","EnemySpider","SoundManager","ccclass","property","PlayerAttackFlower","type","tooltip","attackRange","iseatSpiderMove","spiderInitPos","spiderInitScale","isEat","state","attackTargetList","frameIndex","isIncreasing","addFrame","tuanyanAudio","hp","maxHp","attack","showDigestUI","digestUINode","active","getChildByName","continueGame","digestProgress","testInterval","attackInterval","z","spaider","position","x","setPosition","y","currentScale","scale","newScaleX","newScaleY","newScaleZ","setScale","scheduleOnce","Instance","playAudio","getComponent","opacity","characterAnima","getState","isPlaying","play","once","EventType","FINISHED","progress","onLoad","start","collider","console","warn","clone","on","onTriggerEnter","onTriggerStay","onTriggerExit","event","selfnode","otherCollider","node","attackFlowerDie","followNode","log","name","attackList","selfPos","worldPosition","enemiesInSector","enemy","direction","subtract","angle","Math","atan2","PI","abs","push","move","attack1","die","callback","update","deltaTime","checkEnemy","length","rvoEnemyList","enemyController","getEnemyRvoList","enemyList","getEnemyList","i","isValidEnemy","isInAttackRange","isValid","recordHp","isAttack","target","distance"],"mappings":"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","sourcesContent":["import { _decorator, Node, Vec3, SkeletalAnimation, ITriggerEvent, Collider, Animation, ProgressBar, Slider, UIOpacity } from 'cc';\r\nimport Entity from './Entity';\r\nimport { App } from '../App';\r\nimport { EnemySpider } from './EnemySpider';\r\nimport { SoundManager } from '../core/SoundManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerAttackFlower')\r\nexport class PlayerAttackFlower extends Entity {\r\n    // @property\r\n    attackRange: number = 60; // 攻击范围，可在编辑器中调整\r\n    @property({ type: SkeletalAnimation })\r\n    characterAnima: SkeletalAnimation = null; // 骨骼动画组件\r\n\r\n    @property({ type: Collider })\r\n    collider: Collider = null; // 碰撞组件\r\n\r\n    @property({ type: Node })\r\n    followNode: Node = null; // 跟随节点\r\n\r\n    @property({ type: Node, tooltip: \"消化状态进度条\" })\r\n    digestUINode: Node = null;\r\n\r\n    @property({ type: Node, tooltip: \"蜘蛛\" })\r\n    spaider: Node = null;\r\n\r\n    private iseatSpiderMove: boolean = false;\r\n\r\n    private spiderInitPos: Vec3 = new Vec3()\r\n    private spiderInitScale: Vec3 = new Vec3()\r\n    private isEat: boolean = false;//是否实在咀嚼状态\r\n\r\n    private state: number = 0; //  1 攻击中 2 咀嚼中 3 吞咽\r\n\r\n    private attackTargetList: EnemySpider[] = []; // 攻击目标列表\r\n    frameIndex: number = 0;\r\n    isIncreasing = false;\r\n    addFrame = 10;\r\n    private tuanyanAudio:boolean = false\r\n    // 血量属性\r\n    hp = 2;\r\n    maxHp = 2;\r\n    attack: number = 1;\r\n    // 攻击间隔\r\n    @property({ tooltip: \"攻击间隔\" })\r\n    private attackInterval: number = 6;\r\n\r\n    @property({ tooltip: \"攻击间隔\" })\r\n    private testInterval = 6;\r\n    showDigestUI() {\r\n        this.digestUINode.active = true;\r\n        this.digestUINode.getChildByName(\"shanguang01\").active = false;\r\n        this.digestUINode.getChildByName(\"xiaohua_shanguang\").active = false;\r\n    }\r\n    continueGame() {\r\n        this.digestUINode.active = false;\r\n    }\r\n\r\n\r\n    digestProgress() {\r\n        let digestProgress = 1 - this.testInterval / this.attackInterval;\r\n        if (this.iseatSpiderMove) {\r\n            let z = this.spaider.position.z\r\n            let x = this.spaider.position.x\r\n            this.spaider.setPosition(x -= 0.003, this.spaider.position.y, z += 0.0015)\r\n        }\r\n        if (digestProgress <= 0) {\r\n            // 获取当前缩放\r\n            let currentScale = this.spaider.scale;\r\n            // 计算新缩放值（向目标缩放靠近）\r\n            let newScaleX = currentScale.x -0.002;\r\n            let newScaleY = currentScale.y - 0.002;\r\n            let newScaleZ = currentScale.z -0.002;\r\n            // 设置新缩放\r\n            this.spaider.setScale(newScaleX, newScaleY, newScaleZ);\r\n\r\n\r\n\r\n            digestProgress = -0.1;\r\n            this.digestUINode.getChildByName(\"shanguang01\").active = true;\r\n            this.digestUINode.getChildByName(\"xiaohua_shanguang\").active = true;\r\n\r\n            // 首先在类中添加一个状态变量，用于标记当前是否在增加透明度\r\n            // this.isIncreasing = false;  // 可以在初始化时设置\r\n\r\n            // 修改透明度更新逻辑\r\n            if (this.isIncreasing) {\r\n                // 处于增加状态，逐渐增加到255\r\n                this.frameIndex += this.addFrame;\r\n                // 当达到255时，切换回减少状态\r\n                if (this.frameIndex >= 255) {\r\n                    this.frameIndex = 255;\r\n                    this.isIncreasing = false;\r\n                }\r\n            } else {\r\n                // 处于减少状态，逐渐减少到0\r\n                this.frameIndex -= this.addFrame;\r\n                // 当减到0时，切换到增加状态\r\n                if (this.frameIndex <= 0) {\r\n                    this.frameIndex = 0;\r\n                    this.isIncreasing = true;\r\n                }\r\n            }\r\n            this.scheduleOnce(()=>{\r\n                if (!this.tuanyanAudio) {\r\n                    this.tuanyanAudio = true\r\n                    SoundManager.Instance.playAudio(\"tunyan\");\r\n                }\r\n            },0.3)\r\n\r\n            // 应用透明度\r\n            this.digestUINode.getChildByName(\"shanguang01\").getComponent(UIOpacity).opacity = this.frameIndex;\r\n            this.digestUINode.getChildByName(\"xiaohua_shanguang\").getComponent(UIOpacity).opacity = this.frameIndex;\r\n\r\n            if (this.characterAnima.getState(\"Attack-end\").isPlaying) return;\r\n            this.characterAnima.play(\"Attack-end\");\r\n            this.state = 3;\r\n            this.characterAnima.once(Animation.EventType.FINISHED, () => {\r\n                // this.testInterval = 0;\r\n                this.isEat = false;\r\n                this.testInterval = 6;\r\n                this.state = 0;\r\n                // 重置蜘蛛位置和缩放\r\n                this.spaider.active = false;\r\n                this.spaider.setPosition(this.spiderInitPos);\r\n                this.spaider.setScale(this.spiderInitScale);\r\n                this.iseatSpiderMove = false;\r\n                this.tuanyanAudio = false;\r\n\r\n                // this.digestUINode.getChildByName(\"shanguang01\").active = false;\r\n\r\n            })\r\n        } else {\r\n            this.digestUINode.getChildByName(\"Green\").getComponent(ProgressBar).progress = digestProgress;\r\n            this.digestUINode.getChildByName(\"Slider\").getComponent(Slider).progress = digestProgress;\r\n        }\r\n    }\r\n    onLoad() {\r\n        this.digestUINode.active = false;\r\n    }\r\n    start() {\r\n        if (!this.characterAnima.getState(\"Idle\").isPlaying)\r\n            this.characterAnima.play(\"Idle\");\r\n        if (!this.collider) {\r\n            console.warn('没有找到碰撞矩阵');\r\n            return;\r\n        }\r\n        if (!this.collider) return;\r\n        this.spiderInitPos = this.spaider.position.clone();\r\n        this.spiderInitScale = this.spaider.scale.clone();\r\n        this.collider.on('onTriggerEnter', this.onTriggerEnter, this);\r\n        this.collider.on('onTriggerStay', this.onTriggerStay, this);\r\n        this.collider.on('onTriggerExit', this.onTriggerExit, this);\r\n\r\n    }\r\n    onTriggerEnter(event: ITriggerEvent) {\r\n        if (this.state == 2 || this.state == 3) return;\r\n        const selfnode = event.otherCollider.node;\r\n        //selfnode.getComponent(EnemySpider).node.active = false;\r\n        selfnode.getComponent(EnemySpider).attackFlowerDie(this.followNode);\r\n        console.log(\"onTriggerExit nodeName == \", selfnode.name);\r\n    }\r\n    onTriggerExit(event: ITriggerEvent) {\r\n        console.log(\"onTriggerExit\")\r\n\r\n    }\r\n    onTriggerStay(event: ITriggerEvent) {\r\n\r\n    }\r\n\r\n    attackList() { // 可攻击的怪物\r\n        // 获取当前节点的世界位置\r\n        const selfPos = this.node.worldPosition;\r\n\r\n        // 存储在120度范围内的敌人\r\n        const enemiesInSector: EnemySpider[] = [];\r\n\r\n        // 遍历攻击目标列表\r\n        for (const enemy of this.attackTargetList) {\r\n            if (!enemy || !enemy.node) continue;\r\n\r\n            // 计算敌人相对于当前节点的方向向量\r\n            const direction = new Vec3();\r\n            Vec3.subtract(direction, enemy.node.worldPosition, selfPos);\r\n\r\n            // 计算方向向量与前方（假设为Z轴正方向）的夹角\r\n            // 注：根据游戏坐标系实际情况可能需要调整参考轴\r\n            const angle = Math.atan2(direction.x, direction.z) * 180 / Math.PI;\r\n\r\n            // 取绝对值，判断是否在120度范围内（-60度到+60度之间）\r\n            if (Math.abs(angle) <= 60) {\r\n                enemiesInSector.push(enemy);\r\n            }\r\n        }\r\n\r\n        // 返回在120度范围内的敌人列表\r\n        return enemiesInSector;\r\n    }\r\n    move() {\r\n        // 塔防无需移动逻辑\r\n    }\r\n    // AttackAni() {\r\n    //     // 检查敌人列表（更新范围内敌人）\r\n    //     this.checkEnemy();\r\n    //     let list = this.attackList();\r\n    //     list.forEach((enemy) => {\r\n    //         enemy.getComponent(EnemySpider).node.active = false;\r\n    //         enemy.getComponent(EnemySpider).attackFlowerDie();\r\n    //     })\r\n    // }\r\n\r\n    attack1() {\r\n        // 1. 先更新敌人列表\r\n        // this.checkEnemy();\r\n        SoundManager.Instance.playAudio(\"eat\");\r\n        this.digestUINode.getChildByName(\"shanguang01\").active = false;\r\n        this.digestUINode.getChildByName(\"xiaohua_shanguang\").active = false;\r\n        this.characterAnima.play(\"Attack-start2\");\r\n        this.state = 1\r\n        this.scheduleOnce(() => {\r\n            if (this.spaider) {\r\n                this.spaider.active = true;\r\n                if (!this.iseatSpiderMove) {\r\n                    this.iseatSpiderMove = true;\r\n                }\r\n            }\r\n        }, 0.5)\r\n\r\n        this.characterAnima.once(Animation.EventType.FINISHED, () => {\r\n            this.isEat = true;\r\n            if (!this.digestUINode.active) {\r\n                this.showDigestUI();\r\n            }\r\n\r\n            this.characterAnima.play(\"Attack-loop\");\r\n            this.state = 2;\r\n            this.testInterval = 0;\r\n        })\r\n\r\n    }\r\n\r\n    die(callback?: (...agrs: unknown[]) => void): void {\r\n        // 死亡逻辑可在此实现\r\n    }\r\n    update(deltaTime: number) {\r\n        if (!this.isEat) {\r\n            this.testInterval += deltaTime;\r\n            if (this.testInterval > this.attackInterval) {\r\n                this.testInterval = 0;\r\n                this.checkEnemy();\r\n                let attackList = this.attackList();\r\n                if (attackList.length > 0) {\r\n                    this.attack1();\r\n                } else {\r\n                    this.testInterval = 6;\r\n                    if (!this.characterAnima.getState(\"Idle\").isPlaying)\r\n                        this.characterAnima.play(\"Idle\");\r\n                    this.digestUINode.getChildByName(\"shanguang01\").active = true;\r\n                    this.digestUINode.getChildByName(\"xiaohua_shanguang\").active = true;\r\n\r\n                    if (this.isIncreasing) {\r\n                        // 处于增加状态，逐渐增加到255\r\n                        this.frameIndex += this.addFrame;\r\n                        // 当达到255时，切换回减少状态\r\n                        if (this.frameIndex >= 255) {\r\n                            this.frameIndex = 255;\r\n                            this.isIncreasing = false;\r\n                        }\r\n                    } else {\r\n                        // 处于减少状态，逐渐减少到0\r\n                        this.frameIndex -= this.addFrame;\r\n                        // 当减到0时，切换到增加状态\r\n                        if (this.frameIndex <= 0) {\r\n                            this.frameIndex = 0;\r\n                            this.isIncreasing = true;\r\n                        }\r\n                    }\r\n\r\n                    // 应用透明度\r\n                    this.digestUINode.getChildByName(\"shanguang01\").getComponent(UIOpacity).opacity = this.frameIndex;\r\n                    this.digestUINode.getChildByName(\"xiaohua_shanguang\").getComponent(UIOpacity).opacity = this.frameIndex;\r\n                }\r\n            }\r\n        } else {\r\n            this.testInterval += deltaTime;\r\n            this.digestProgress()\r\n            // if (this.testInterval > this.attackInterval) {\r\n            //     this.testInterval = 0;\r\n            //     this.characterAnima.play(\"Attack-end\");\r\n            //     this.characterAnima.once(Animation.EventType.FINISHED, () => {\r\n            //         this.isEat = false;\r\n            //         this.testInterval = 6;\r\n\r\n            //     })\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    /** 查找可攻击的敌人（更新攻击目标列表） */\r\n    checkEnemy() {\r\n        this.attackTargetList = []; // 清空列表\r\n        const rvoEnemyList = App.enemyController.getEnemyRvoList();\r\n        const enemyList = App.enemyController.getEnemyList();\r\n\r\n        // 先检查RVO敌人列表\r\n        for (let i = 0; i < rvoEnemyList.length; i++) {\r\n            const enemy = rvoEnemyList[i];\r\n            if (!this.isValidEnemy(enemy)) continue;\r\n\r\n            if (this.isInAttackRange(enemy.node)) {\r\n                this.attackTargetList.push(enemy);\r\n            }\r\n        }\r\n\r\n        // RVO列表无目标时检查普通敌人列表\r\n        //    if (this.attackTargetList.length === 0) {\r\n        for (let i = 0; i < enemyList.length; i++) {\r\n            const enemy = enemyList[i];\r\n            if (!this.isValidEnemy(enemy)) continue;\r\n\r\n            if (this.isInAttackRange(enemy.node)) {\r\n                this.attackTargetList.push(enemy);\r\n            }\r\n        }\r\n        //  }\r\n    }\r\n\r\n    /** 辅助判断：敌人是否有效（存活） */\r\n    private isValidEnemy(enemy: EnemySpider): boolean {\r\n        // 增加对isAttack和node.isValid的检查\r\n        return enemy && enemy.node && enemy.node.isValid && enemy.hp > 0 && enemy.recordHp > 0 && enemy.isAttack;\r\n    }\r\n\r\n    /** 辅助判断：目标是否在攻击范围内 */\r\n    private isInAttackRange(target: Node): boolean {\r\n        if (!target) {\r\n            return false;\r\n        }\r\n        return Vec3.distance(target.worldPosition, this.node.worldPosition) < this.attackRange;\r\n    }\r\n\r\n\r\n}"]}