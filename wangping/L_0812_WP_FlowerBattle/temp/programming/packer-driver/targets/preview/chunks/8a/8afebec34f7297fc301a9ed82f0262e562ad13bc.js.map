{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_0812_WP_FlowerBattle/assets/JavaScript/RVO/RVOObstacles.ts"],"names":["RVOObstacles","BoxCollider","Collider","CylinderCollider","Vec3","Vector2","Simulator","addOneObstacle","obstacle","collider","getComponent","worldPos","worldPosition","worldRotation","worldScale","vertices","size","clone","x","z","halfExtents","corners","forEach","corner","rotated","transformQuat","push","radius","Math","max","segments","j","angle","PI","cos","sin","instance","addObstacle"],"mappings":"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","sourcesContent":["import { BoxCollider, Collider, CylinderCollider, Node, Vec3 } from \"cc\";\r\nimport { Vector2 } from \"../RVO/Common\";\r\nimport { Simulator } from \"../RVO/Simulator\";\r\n/**\r\n * 每个障碍物需要有Collider组件 目前只支持了 BoxCollider 和 CylinderCollider\r\n */\r\nexport default class RVOObstacles {\r\n    public static addOneObstacle(obstacle:Node){\r\n            let collider:Collider = obstacle.getComponent(Collider);\r\n            if (!collider) return;\r\n\r\n            // 获取障碍物世界变换信息\r\n            const worldPos = obstacle.worldPosition;\r\n            const worldRotation = obstacle.worldRotation;\r\n            const worldScale = obstacle.worldScale;\r\n\r\n            const vertices = [];\r\n            if (collider instanceof BoxCollider) {\r\n                // 盒子碰撞器 - 精确四个角点\r\n                const size = collider.size.clone();\r\n                size.x *= worldScale.x;\r\n                size.z *= worldScale.z;\r\n                \r\n                // 定义盒子4个顶点（局部空间）\r\n                const halfExtents = new Vec3(size.x / 2, 0, size.z / 2);\r\n                const corners = [\r\n                    new Vec3(-halfExtents.x, 0, -halfExtents.z),\r\n                    new Vec3( halfExtents.x, 0, -halfExtents.z),\r\n                    new Vec3( halfExtents.x, 0,  halfExtents.z),\r\n                    new Vec3(-halfExtents.x, 0,  halfExtents.z),\r\n                    new Vec3(-halfExtents.x, 0, -halfExtents.z) // 闭合多边形\r\n                ];\r\n                \r\n                // 转换到世界空间\r\n                corners.forEach(corner => {\r\n                    const rotated = Vec3.transformQuat(new Vec3(), corner, worldRotation);\r\n                    vertices.push(new Vector2(\r\n                        worldPos.x + rotated.x,\r\n                        worldPos.z + rotated.z\r\n                    ));\r\n                });\r\n            } else if (collider instanceof CylinderCollider) {\r\n                // 圆柱体碰撞器 - 用6边形近似\r\n                const radius = collider.radius * Math.max(worldScale.x, worldScale.z);\r\n                const segments = 6; // 6边形\r\n                \r\n                for (let j = 0; j <= segments; j++) { // 注意这里 j <= segments 确保闭合\r\n                    const angle = (j / segments) * Math.PI * 2;\r\n                    const x = Math.cos(angle) * radius;\r\n                    const z = Math.sin(angle) * radius;\r\n                    \r\n                    vertices.push(new Vector2(\r\n                        worldPos.x + x,\r\n                        worldPos.z + z\r\n                    ));\r\n                }\r\n            } \r\n\r\n            // 添加到RVO2仿真器\r\n            Simulator.instance.addObstacle(vertices);\r\n    }\r\n}"]}