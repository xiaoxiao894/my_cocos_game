
precision highp float;
#include <legacy/input-standard>
#include <builtin/uniforms/cc-global>
#include <legacy/local-batch>
#include "../GameRes/shader/chunks/OutLineParmas"

out vec2 v_uv;
out vec3 v_normal;


vec4 vert () {
  StandardVertInput In;
  CCVertInput(In);

  mat4 matWorld,matWorldIT;
  CCGetWorldMatrixFull(matWorld,matWorldIT);


  float width = outlineParams.x * 0.001;

  #if USE_POSITION_SCALING
    vec3 dir = normalize(In.position.xyz);
    float flip = dot(dir, normalize(In.normal)) < 0.0 ? -1.0 : 1.0;
    In.position.xyz += flip * dir * width * 2.0;
    mat4 s = cc_matProj * (cc_matView * matWorld) ;
  #else
    In.position.xyz += normalize(In.normal) * width;
    mat4 s = cc_matProj * (cc_matView * matWorld) ;
  #endif

  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);

  vec4 newPosition = In.position + vec4(v_normal,0.0) * clamp((outdissolveThreshold * outoffSetThreshold),0.0,1.0) * outoffSetScale;

  vec4 pos = s * newPosition;
  float scaleZ = cc_nearFar.z == 0.0 ? 0.5 : 1.0;
  pos.z -= outlineParams.y * 0.002 * scaleZ;

  v_uv = a_texCoord;


  return   pos ;
}
