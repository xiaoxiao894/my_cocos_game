{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/SearchSystem/SearchTreeManager.ts"],"names":["_decorator","Component","Vec3","DataManager","ccclass","property","SearchTreeManager","searchNumber","start","Instance","searchTreeManager","getAttackTargets","player","attackRange","maxAngle","isPlayer","gridSystem","nearby","getNearbyNodes","worldPosition","forward","clone","normalize","result","i","length","enemy","activeInHierarchy","toEnemy","subtract","dist","angle","Math","acos","dot","PI","push"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;mCAGjBM,iB,WADZF,OAAO,CAAC,mBAAD,C,gBAAR,MACaE,iBADb,SACuCL,SADvC,CACiD;AAAA;AAAA;AAC7C;AAD6C,eAE7CM,YAF6C,GAE9B,EAF8B;AAAA;;AAI7CC,QAAAA,KAAK,GAAG;AACJ;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,iBAArB,GAAyC,IAAzC;AACH;;AAEDC,QAAAA,gBAAgB,CAACC,MAAD,EAAeC,WAAf,EAAoCC,QAApC,EAAsDC,QAAtD,EAAgF;AAAA,cAA1BA,QAA0B;AAA1BA,YAAAA,QAA0B,GAAf,KAAe;AAAA;;AAC5F,cAAI,CAAC;AAAA;AAAA,0CAAYN,QAAZ,CAAqBO,UAA1B,EAAsC;AAEtC,cAAMC,MAAM,GAAG;AAAA;AAAA,0CAAYR,QAAZ,CAAqBO,UAArB,CAAgCE,cAAhC,CAA+CN,MAAM,CAACO,aAAtD,EAAqEN,WAArE,CAAf;AACA,cAAMO,OAAO,GAAGR,MAAM,CAACQ,OAAP,CAAeC,KAAf,GAAuBC,SAAvB,EAAhB;AACA,cAAMC,MAAc,GAAG,EAAvB;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACQ,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,gBAAME,KAAK,GAAGT,MAAM,CAACO,CAAD,CAApB;AACA,gBAAI,CAACE,KAAK,CAACC,iBAAX,EAA8B;AAE9B,gBAAMC,OAAO,GAAGF,KAAK,CAACP,aAAN,CAAoBE,KAApB,GAA4BQ,QAA5B,CAAqCjB,MAAM,CAACO,aAA5C,CAAhB;AACA,gBAAMW,IAAI,GAAGF,OAAO,CAACH,MAAR,EAAb;AAEA,gBAAIK,IAAI,GAAGjB,WAAX,EAAwB;AAExBe,YAAAA,OAAO,CAACN,SAAR;AACA,gBAAMS,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAU/B,IAAI,CAACgC,GAAL,CAASd,OAAT,EAAkBQ,OAAlB,CAAV,IAAwC,GAAxC,GAA8CI,IAAI,CAACG,EAAjE;;AAEA,gBAAIJ,KAAK,IAAIjB,QAAb,EAAuB;AACnBS,cAAAA,MAAM,CAACa,IAAP,CAAYV,KAAZ;AACH;AACJ;;AAED,iBAAOH,MAAP;AACH;;AAjC4C,O","sourcesContent":["import { _decorator, Component, Node, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SearchTreeManager')\r\nexport class SearchTreeManager extends Component {\r\n    // 优先搜索前56个\r\n    searchNumber = 56;\r\n\r\n    start() {\r\n        DataManager.Instance.searchTreeManager = this;\r\n    }\r\n\r\n    getAttackTargets(player: Node, attackRange: number, maxAngle: number, isPlayer = false): Node[] {\r\n        if (!DataManager.Instance.gridSystem) return;\r\n\r\n        const nearby = DataManager.Instance.gridSystem.getNearbyNodes(player.worldPosition, attackRange);\r\n        const forward = player.forward.clone().normalize();\r\n        const result: Node[] = [];\r\n\r\n        for (let i = 0; i < nearby.length; i++) {\r\n            const enemy = nearby[i];\r\n            if (!enemy.activeInHierarchy) continue;\r\n\r\n            const toEnemy = enemy.worldPosition.clone().subtract(player.worldPosition);\r\n            const dist = toEnemy.length();\r\n\r\n            if (dist > attackRange) continue;\r\n\r\n            toEnemy.normalize();\r\n            const angle = Math.acos(Vec3.dot(forward, toEnemy)) * 180 / Math.PI;\r\n\r\n            if (angle <= maxAngle) {\r\n                result.push(enemy);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\n"]}