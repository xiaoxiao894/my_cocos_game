{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Actor/ItemPartnerManager.ts"],"names":["_decorator","Collider","Component","find","Quat","RigidBody","SkeletalAnimation","tween","Vec3","DataManager","PartnerEnum","ItemTreeManager","ccclass","property","ItemPartnerManager","_currentState","_attackDistance","_moveSpeed","_target","_attackCount","_attackCooldown","_attackTimer","_deliveryPoint","_maxCutDownTreeNum","_cutDownTreeNum","_isBusy","_startMovePos","_deliveryQueue","update","deltaTime","Instance","hasHelperCuttingDownTrees","hasHelperReachDeliveryLocation","moveToDeliveryPoint","handleTreeApproachAndCut","updateTargetIfNeeded","selfPos","node","worldPosition","targetPos","clone","distanceToTarget","distance","changState","Walk","moveToTarget","Attack","playAttackAnimation","target","isValid","parent","skeletalAnimation","removeTarget","tree","getComponent","isBeingCut","HIT_DELAY","BETWEEN_DELAY","crossFade","scheduleOnce","treeManager","affectedTrees","trees","searchTreeManager","getAttackTargets","length","minDist","Number","MAX_VALUE","selected","claimedTargets","has","dist","name","add","dir","subtract","normalize","moveDelta","multiplyScalar","newPos","setWorldPosition","lookAtTarget","state","partner","partnerPos","forward","y","rotation","fromViewUp","UP","setWorldRotation","Idle","startSequentialDelivery","backpack","getChildByName","children","to","stackManager","i","child","push","_deliverNextItem","item","shift","startPos","getWorldPosition","slot","assignSlot","endPos","getSlotWorldPos","controlPoint","x","Math","max","z","tParam","t","onUpdate","oneMinusT","current","onComplete","eulerAngles","rigidBody","enabled","collider","scale","easing","start","finalWorldPos","setParent","localPos","inverseTransformPoint","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Collider, Component, find, Node, Quat, RigidBody, SkeletalAnimation, tween, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { PartnerEnum } from './StateDefine';\r\nimport { TypeItemEnum } from '../Enum/Index';\r\nimport { StackManager } from '../StackSlot/StackManager';\r\nimport { ItemTreeManager } from '../Tree/ItemTreeManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ItemPartnerManager')\r\nexport class ItemPartnerManager extends Component {\r\n    @property(SkeletalAnimation)\r\n    skeletalAnimation: SkeletalAnimation = null;\r\n\r\n    private _currentState: PartnerEnum | string = null;\r\n    private _attackDistance = 2.2;\r\n    private _moveSpeed = 15;\r\n    private _target: Node | null = null;\r\n\r\n    private _attackCount = 0;\r\n    private _attackCooldown = 2.394;\r\n    private _attackTimer = 0;\r\n\r\n    private _deliveryPoint = new Vec3(-10.884, 0, 3.818);\r\n    private _maxCutDownTreeNum = 5;\r\n    private _cutDownTreeNum = 0;\r\n\r\n    private _isBusy = false;\r\n    private _startMovePos: Vec3 | null = null;\r\n\r\n    update(deltaTime: number) {\r\n        if (DataManager.Instance.hasHelperCuttingDownTrees || DataManager.Instance.hasHelperReachDeliveryLocation) return;\r\n\r\n        if (this._cutDownTreeNum >= this._maxCutDownTreeNum) {\r\n            this.moveToDeliveryPoint(deltaTime);\r\n            return;\r\n        }\r\n\r\n        if (this._target) {\r\n            this.handleTreeApproachAndCut(deltaTime);\r\n        } else if (!this._isBusy) {\r\n            this.updateTargetIfNeeded();\r\n\r\n            if (!this._target) {\r\n                this.moveToDeliveryPoint(deltaTime);\r\n            }\r\n        }\r\n\r\n        if (this._attackTimer > 0) {\r\n            this._attackTimer -= deltaTime;\r\n        }\r\n    }\r\n\r\n    private handleTreeApproachAndCut(deltaTime: number) {\r\n        const selfPos = this.node.worldPosition;\r\n        const targetPos = this._target.worldPosition;\r\n\r\n        // 记录初始移动位置（只记录一次）\r\n        if (!this._startMovePos) {\r\n            this._startMovePos = selfPos.clone();\r\n        }\r\n\r\n        const distanceToTarget = Vec3.distance(selfPos, targetPos);\r\n\r\n        if (distanceToTarget > this._attackDistance) {\r\n            this.changState(PartnerEnum.Walk);\r\n            this.moveToTarget(targetPos, deltaTime);\r\n        } else {\r\n            DataManager.Instance.hasHelperCuttingDownTrees = true;\r\n            this.changState(PartnerEnum.Attack);\r\n\r\n            if (!this._isBusy && this._attackTimer <= 0) {\r\n                this._isBusy = true;\r\n                this._attackTimer = this._attackCooldown;\r\n                this.playAttackAnimation(this._target);\r\n            }\r\n        }\r\n    }\r\n\r\n    private playAttackAnimation(target: Node | null) {\r\n        if (!target?.isValid || !target.parent || !this.skeletalAnimation) {\r\n            this.removeTarget();\r\n            return;\r\n        }\r\n\r\n        let tree = target.getComponent(ItemTreeManager);\r\n        if (!tree || tree.isBeingCut) {\r\n            this.removeTarget();\r\n            return;\r\n        }\r\n\r\n        // 第一次攻击动画\r\n        const HIT_DELAY = 0.48 // 1.33 / 2.8;   // 命中点\r\n        const BETWEEN_DELAY = 0.48;    // 两次攻击之间的等待\r\n\r\n        // 第一次攻击动画\r\n        this.skeletalAnimation.crossFade(PartnerEnum.Attack, 0.1);\r\n\r\n        this.scheduleOnce(() => {\r\n            DataManager.Instance.treeManager.affectedTrees([target], false, this.node);\r\n        }, HIT_DELAY);\r\n\r\n        // 第一次攻击结束 -> 进入第二次\r\n        this.scheduleOnce(() => {\r\n            if (target?.isValid && target.parent) {\r\n                const tree = target.getComponent(ItemTreeManager);\r\n                if (!tree || tree.isBeingCut) {\r\n                    this.removeTarget();\r\n                    return;\r\n                }\r\n\r\n                this._attackCount = 1;\r\n\r\n                // 第二次攻击动画\r\n                this.skeletalAnimation.crossFade(PartnerEnum.Attack, 0.1);\r\n                this.scheduleOnce(() => {\r\n                    DataManager.Instance.treeManager.affectedTrees([target], false, this.node);\r\n                }, HIT_DELAY);\r\n\r\n                // 第二次命中\r\n                this.scheduleOnce(() => {\r\n                    if (target?.isValid && target.parent) {\r\n                        // console.log(\"===========================> 开始进攻了2\");\r\n                        this._attackCount = 2;\r\n\r\n                        // —— 第三次攻击开始 —— //\r\n                        this.skeletalAnimation.crossFade(PartnerEnum.Attack, 0.1);\r\n                        this.scheduleOnce(() => {\r\n                            DataManager.Instance.treeManager.affectedTrees([target], false, this.node);\r\n                        }, HIT_DELAY);\r\n\r\n                        this.scheduleOnce(() => {\r\n                            if (target?.isValid && target.parent) {\r\n                                // console.log(\"===========================> 开始进攻了3\");\r\n                                this._attackCount = 3;\r\n\r\n                                // 收尾\r\n                                this._cutDownTreeNum++;\r\n                                this._target = null;\r\n                                this._startMovePos = null;\r\n                                this._isBusy = false;\r\n                                this._attackTimer = 0;\r\n                                DataManager.Instance.hasHelperCuttingDownTrees = false;\r\n                                // console.log(\"砍树完成，总数:\", this._cutDownTreeNum);\r\n                            } else {\r\n                                this.removeTarget();\r\n                            }\r\n                        }, BETWEEN_DELAY); // 第三次攻击延迟\r\n                        // —— 第三次攻击结束 —— //\r\n\r\n                    } else {\r\n                        this.removeTarget();\r\n                    }\r\n                }, BETWEEN_DELAY); // 第二次攻击命中延迟（保持你原来的 0.74）\r\n            } else {\r\n                this.removeTarget();\r\n            }\r\n        }, BETWEEN_DELAY); // 第一次攻击结束到第二次攻击开始的延迟\r\n\r\n    }\r\n\r\n    private removeTarget() {\r\n        this._isBusy = false;\r\n        this._target = null;\r\n        this._startMovePos = null;\r\n        this._attackTimer = 0;\r\n        DataManager.Instance.hasHelperCuttingDownTrees = false;\r\n    }\r\n\r\n\r\n    private updateTargetIfNeeded() {\r\n        const trees = DataManager.Instance.searchTreeManager.getAttackTargets(this.node, 100, 360);\r\n        if (!trees || trees.length === 0) return;\r\n\r\n        const selfPos = this.node.worldPosition;\r\n        let minDist = Number.MAX_VALUE;\r\n        let selected: Node | null = null;\r\n\r\n        for (const tree of trees) {\r\n            if (DataManager.Instance.claimedTargets.has(tree)) continue;\r\n            const dist = Vec3.distance(tree.worldPosition, selfPos);\r\n            if (dist < minDist && tree.name === \"Tree\") {\r\n                minDist = dist;\r\n                selected = tree;\r\n            }\r\n        }\r\n\r\n        if (selected) {\r\n            this._target = selected;\r\n            DataManager.Instance.claimedTargets.add(selected);\r\n        }\r\n    }\r\n\r\n    private moveToTarget(targetPos: Vec3, deltaTime: number) {\r\n        const selfPos = this.node.worldPosition;\r\n        const dir = new Vec3();\r\n        Vec3.subtract(dir, targetPos, selfPos).normalize();\r\n\r\n        const moveDelta = dir.multiplyScalar(this._moveSpeed * deltaTime);\r\n        const newPos = selfPos.clone().add(moveDelta);\r\n        this.node.setWorldPosition(newPos);\r\n\r\n        this.lookAtTarget(targetPos);\r\n    }\r\n\r\n    private changState(state: PartnerEnum | string) {\r\n        if (state === this._currentState) return;\r\n        this._currentState = state;\r\n        this.skeletalAnimation?.crossFade(state as string, 0.1);\r\n    }\r\n\r\n    private lookAtTarget(targetPos: Vec3) {\r\n        const partner = this.node;\r\n        if (!partner) return;\r\n\r\n        const partnerPos = partner.worldPosition;\r\n\r\n        const forward = new Vec3();\r\n        Vec3.subtract(forward, targetPos, partnerPos);\r\n        forward.y = 0;\r\n        forward.normalize();\r\n\r\n        // 朝向目标方向的旋转\r\n        const rotation = new Quat();\r\n        Quat.fromViewUp(rotation, forward, Vec3.UP);\r\n\r\n        // ✅ 强制设置子节点的世界旋转\r\n        partner.setWorldRotation(rotation);\r\n    }\r\n\r\n\r\n    private moveToDeliveryPoint(deltaTime: number) {\r\n        const selfPos = this.node.worldPosition;\r\n        const distance = Vec3.distance(selfPos, this._deliveryPoint);\r\n\r\n        if (distance > 0.2) {\r\n            const dir = new Vec3();\r\n            Vec3.subtract(dir, this._deliveryPoint, selfPos).normalize();\r\n\r\n            this.changState(PartnerEnum.Walk);\r\n\r\n            this.node.setWorldPosition(selfPos.clone().add(dir.multiplyScalar(this._moveSpeed * deltaTime)));\r\n\r\n            this.lookAtTarget(this._deliveryPoint);\r\n        } else {\r\n            DataManager.Instance.hasHelperReachDeliveryLocation = true;\r\n            this.changState(PartnerEnum.Idle);\r\n            this._cutDownTreeNum = 0;\r\n            this._isBusy = false;\r\n            // console.log(\"📦 已到达交付点，清空砍树计数。\");\r\n\r\n            //  像交付地点交付\r\n            this.startSequentialDelivery();\r\n        }\r\n    }\r\n\r\n    private _deliveryQueue: Node[] = [];\r\n    private startSequentialDelivery() {\r\n        const backpack = this.node.getChildByName(\"Backpack1\");\r\n        if (!backpack) return;\r\n\r\n        const children = backpack.children;\r\n        if (children.length === 0) return;\r\n\r\n        const to = find(\"THREE3DNODE/PlacingCon/WoodAccumulationCon\");\r\n        if (!to) return;\r\n\r\n        const stackManager: StackManager = to[\"__stackManager\"];\r\n\r\n        // 从最后一个有效的准备 item 开始\r\n        this._deliveryQueue = [];\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            const child = children[i];\r\n            if (child?.isValid && child['__isReady']) {\r\n                this._deliveryQueue.push(child);\r\n            }\r\n        }\r\n\r\n        if (this._deliveryQueue.length > 0) {\r\n            this._deliverNextItem(to, stackManager);\r\n        }\r\n    }\r\n\r\n    private _deliverNextItem(to: Node, stackManager: StackManager) {\r\n        if (this._deliveryQueue.length === 0) {\r\n            DataManager.Instance.hasHelperReachDeliveryLocation = false;\r\n            this.updateTargetIfNeeded();\r\n            return;\r\n        }\r\n\r\n        const item = this._deliveryQueue.shift();\r\n        if (!item || !item.isValid) {\r\n            this._deliverNextItem(to, stackManager); // 跳过无效\r\n            return;\r\n        }\r\n\r\n        const startPos = item.getWorldPosition();\r\n        item.parent = this.node;\r\n        item.setWorldPosition(startPos);\r\n\r\n        const slot = stackManager.assignSlot(item);\r\n        if (!slot) return;\r\n\r\n        const endPos = stackManager.getSlotWorldPos(slot, to);\r\n        const controlPoint = new Vec3(\r\n            (startPos.x + endPos.x) / 2,\r\n            Math.max(startPos.y, endPos.y) + 15,\r\n            (startPos.z + endPos.z) / 2\r\n        );\r\n\r\n        const tParam = { t: 0 };\r\n        tween(tParam)\r\n            .to(0.1, { t: 1 }, {\r\n                onUpdate: () => {\r\n                    const t = tParam.t;\r\n                    const oneMinusT = 1 - t;\r\n                    const current = new Vec3(\r\n                        oneMinusT * oneMinusT * startPos.x + 2 * oneMinusT * t * controlPoint.x + t * t * endPos.x,\r\n                        oneMinusT * oneMinusT * startPos.y + 2 * oneMinusT * t * controlPoint.y + t * t * endPos.y,\r\n                        oneMinusT * oneMinusT * startPos.z + 2 * oneMinusT * t * controlPoint.z + t * t * endPos.z\r\n                    );\r\n                    item.setWorldPosition(current);\r\n                },\r\n                onComplete: () => {\r\n                    item.eulerAngles = new Vec3(-90, 0, 0);\r\n\r\n                    const rigidBody = item.getComponent(RigidBody);\r\n                    if (rigidBody) rigidBody.enabled = false;\r\n\r\n                    const collider = item.getComponent(Collider);\r\n                    if (collider) collider.enabled = false;\r\n\r\n                    tween(item)\r\n                        .to(0.15, { scale: new Vec3(1.2, 1.2, 1.2) }, { easing: 'quadOut' })\r\n                        .to(0.05, { scale: new Vec3(1, 1, 1) }, { easing: 'quadOut' })\r\n                        .start();\r\n\r\n                    // 放入目标父节点并转为局部坐标\r\n                    const finalWorldPos = endPos;\r\n                    item.setWorldPosition(finalWorldPos);\r\n                    item.setParent(to);\r\n                    const localPos = new Vec3();\r\n                    to.inverseTransformPoint(localPos, finalWorldPos);\r\n                    item.setPosition(localPos);\r\n\r\n                    // ✅ 延迟 0.3 秒后交付下一个\r\n                    this.scheduleOnce(() => {\r\n                        this._deliverNextItem(to, stackManager);\r\n                    }, 0.03);\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n}"]}