{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Board/BoardConManager.ts"],"names":["_decorator","Animation","Color","Component","find","instantiate","Label","Node","Pool","SkeletalAnimation","tween","Vec3","DataManager","EntityTypeEnum","ccclass","property","BoardConManager","_boardPool","_boardCount","_isOnceFire","_curBoardCount","_speed","_direction","_endPos","_boardList","_conveyorAniPlaying","_plots","_unlock","_elapsedTime","_curSecond","_tmp","start","Instance","boardManager","boardManagerInit","boardPrefab","prefabMap","get","Board","node","removeFromParent","createboard","alloc","parent","setParent","active","onDestroy","destroy","onboardDead","free","boardAni","startNode","endNode","board","setPosition","position","setScale","isConveyerBeltUpgrade","setRotationFromEuler","worldPosition","clone","subtract","normalize","to","scale","easing","call","push","_applyFractionFontSize","denLen","s","denominatorLabel","fontSize","lineHeight","line","moleculeLabel","_handleArrive","dm","color","curQuantityFirewood","Math","max","string","length","isValid","fireAni","fireNode","getComponent","children","play","isTowerAttack","update","dt","Number","isContinueFillFireWood","curReduceTemplateTimeArr","level","conveyorLevel","speedStep","i","splice","dot","scaleAndAdd","setWorldPosition","reduceTime","curReduceTemplateTimeIndex","denominatorNum","cleanElectricCoil","name","plot","item","elementCon","getChildByName","dtai","dianhuan","dianqiu","denominatorUpgradeAni","minNum","maxNum","interval","label","scheduleOnce","String"],"mappings":"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","sourcesContent":["import { _decorator, Animation, Color, Component, find, instantiate, Label, Node, Pool, SkeletalAnimation, tween, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { EntityTypeEnum, PlotEnum } from '../Enum/Index';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BoardConManager')\r\nexport class BoardConManager extends Component {\r\n    @property(Node)\r\n    landmarkNode: Node = null;\r\n\r\n    @property(Node)\r\n    fireNode: Node = null;\r\n\r\n    @property(Label)\r\n    line: Label = null;\r\n\r\n    // 分母\r\n    @property(Label)\r\n    denominatorLabel: Label = null;\r\n\r\n    // 分子\r\n    @property(Label)\r\n    moleculeLabel: Label = null;\r\n\r\n    @property(SkeletalAnimation)\r\n    conveyorAni: SkeletalAnimation = null;\r\n\r\n    private _boardPool: Pool<Node> | null = null;\r\n    private _boardCount: number = 300;\r\n    private _isOnceFire = true;\r\n    private _curBoardCount = 0;\r\n    private _speed: number = 4.7;\r\n    private _direction: Vec3 = new Vec3();\r\n    private _endPos: Vec3;\r\n\r\n    private _boardList: Node[] = [];\r\n    private _conveyorAniPlaying: boolean = false;\r\n\r\n    private _plots = [\"Plot0\", \"Plot2\", \"Plot3\", \"Plot4\", \"Plot9\"]\r\n    private _unlock = null;\r\n    // 1 , 0.7, 0.5 , 0.4\r\n    private _elapsedTime: number = 0;\r\n    private _curSecond: number = 0;\r\n    start(): void {\r\n        DataManager.Instance.boardManager = this;\r\n        this._unlock = find(\"THREE3DNODE/Unlock\");\r\n    }\r\n\r\n    boardManagerInit() {\r\n        this._boardPool = new Pool(() => {\r\n            const boardPrefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.Board);\r\n            return instantiate(boardPrefab)\r\n        }, this._boardCount, (node: Node) => {\r\n            node.removeFromParent();\r\n        })\r\n    }\r\n\r\n    createboard() {\r\n        if (!this._boardPool) return;\r\n\r\n        const node = this._boardPool.alloc();\r\n        if (node.parent == null) node.setParent(this.node);\r\n        node.active = true;\r\n\r\n        return node;\r\n    }\r\n\r\n    onDestroy() {\r\n        this._boardPool.destroy();\r\n    }\r\n\r\n    // 回收木桩\r\n    onboardDead(node) {\r\n        node.active = false;\r\n        this._boardPool.free(node);\r\n    }\r\n\r\n    public boardAni(startNode: Node, endNode: Node) {\r\n        const board = this.createboard();\r\n        if (!board) return;\r\n\r\n        board.setPosition(startNode.position)\r\n        board.setScale(0, 0, 0);\r\n        if (!DataManager.Instance.isConveyerBeltUpgrade) {\r\n            board.setRotationFromEuler(0, 90, 0);\r\n        } else {\r\n            board.setRotationFromEuler(0, 0, 0);\r\n        }\r\n\r\n        if (!this._endPos) {\r\n            this._endPos = endNode.worldPosition.clone();\r\n            Vec3.subtract(this._direction, endNode.worldPosition, startNode.worldPosition)\r\n            this._direction = this._direction.normalize();\r\n        }\r\n        tween(board)\r\n            .to(0.15, { scale: new Vec3(1.2, 1.2, 1.2) }, { easing: 'quadOut' })\r\n            .to(0.05, { scale: new Vec3(1, 1, 1) }, { easing: 'quadOut' })\r\n            .call(() => {\r\n                this._boardList.push(board);\r\n                // if (!this._conveyorAniPlaying) {\r\n                //     this.conveyorAni.play();\r\n                //     this._conveyorAniPlaying = true;\r\n                // }\r\n            })\r\n            .start();\r\n    }\r\n\r\n    // 放在类里\r\n    private _tmp = new Vec3();\r\n\r\n    private _applyFractionFontSize(denLen: number) {\r\n        if (denLen >= 4) {\r\n            const s = 30;\r\n            this.denominatorLabel.fontSize = s;\r\n            this.denominatorLabel.lineHeight = s;\r\n            this.line.fontSize = s;\r\n            this.line.lineHeight = s;\r\n            this.moleculeLabel.fontSize = s;\r\n            this.moleculeLabel.lineHeight = s;\r\n        } else if (denLen >= 3) {\r\n            const s = 40;\r\n            this.denominatorLabel.fontSize = s;\r\n            this.denominatorLabel.lineHeight = s;\r\n            this.line.fontSize = s;\r\n            this.line.lineHeight = s;\r\n            this.moleculeLabel.fontSize = s;\r\n            this.moleculeLabel.lineHeight = s;\r\n        }\r\n    }\r\n\r\n    private _handleArrive(board: Node, dm: typeof DataManager.Instance) {\r\n        // 到达后的收尾动画与状态更新\r\n        tween(board)\r\n            .to(0.05, { scale: new Vec3(0, 0, 0) }, { easing: 'quadOut' })\r\n            .call(() => {\r\n                this._curSecond += 2;\r\n                this._curBoardCount += 1;\r\n                this.moleculeLabel.color = new Color(0, 255, 0, 255)\r\n                this.denominatorLabel.color = new Color(0, 255, 0, 255);\r\n                this.line.color = new Color(0, 255, 0, 255);\r\n\r\n                DataManager.Instance.curQuantityFirewood = Math.max(DataManager.Instance.curQuantityFirewood - 1, 0);\r\n\r\n                if (this.moleculeLabel) {\r\n                    this.moleculeLabel.string = `${this._curBoardCount}`;\r\n                }\r\n\r\n\r\n                // 根据分母长度调整字形\r\n                const denLen = this.denominatorLabel?.string?.length ?? 0;\r\n                this._applyFractionFontSize(denLen);\r\n\r\n                // 清理木板\r\n                this.onboardDead(board);\r\n                if (board?.isValid) board.removeFromParent();\r\n\r\n                // 仅触发一次火焰动画\r\n                const fireAni = this.fireNode?.getComponent(Animation);\r\n                if (fireAni && this.node?.isValid && this.node.children.length > 0 && this._isOnceFire) {\r\n                    this._isOnceFire = false;\r\n                    this.fireNode.active = true;\r\n                    fireAni.play(\"TX_huoyan-001\");\r\n                }\r\n\r\n                dm.isTowerAttack = true;\r\n            })\r\n            .start();\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if (Number(this.denominatorLabel.string) + 1 <= Number(this.moleculeLabel.string) + DataManager.Instance.curQuantityFirewood) {\r\n            DataManager.Instance.isContinueFillFireWood = false;\r\n        } else {\r\n            DataManager.Instance.isContinueFillFireWood = true;\r\n        }\r\n\r\n        const dm = DataManager.Instance;\r\n        if (!dm.curReduceTemplateTimeArr) return;\r\n\r\n        // 缓存经常用到的量\r\n        const level = dm.conveyorLevel || 1;\r\n        const speedStep = this._speed * dt * level;\r\n\r\n        // === 更新木桩（木板）位置，从后往前安全移除 ===\r\n        for (let i = this._boardList.length - 1; i >= 0; i--) {\r\n            const board = this._boardList[i];\r\n            if (!board?.isValid) {\r\n                this._boardList.splice(i, 1);\r\n                continue;\r\n            }\r\n\r\n            // dir = endPos - boardPos\r\n            Vec3.subtract(this._tmp, this._endPos, board.worldPosition);\r\n\r\n            // 到达判定：与前进方向点积 < 0 说明超越终点\r\n            if (Vec3.dot(this._tmp, this._direction) < 0) {\r\n                // 出列并处理抵达\r\n                this._boardList.splice(i, 1);\r\n                this._handleArrive(board, dm);\r\n            } else {\r\n                // 未到：沿方向推进\r\n                Vec3.scaleAndAdd(this._tmp, board.worldPosition, this._direction, speedStep);\r\n                board.setWorldPosition(this._tmp);\r\n            }\r\n        }\r\n\r\n        // 没有触发塔攻击则不继续倒计时\r\n        if (!dm.isTowerAttack) return;\r\n\r\n        if (this._curBoardCount > 0) {\r\n            this._elapsedTime += dt;\r\n\r\n            // 取当前模板减时；默认 2\r\n            const reduceTime = dm.curReduceTemplateTimeArr[dm.curReduceTemplateTimeIndex] ?? 2;\r\n\r\n            if (this._elapsedTime >= reduceTime) {\r\n                this._elapsedTime = 0;\r\n                this._curBoardCount = Math.max(0, this._curBoardCount - 1);\r\n\r\n                if (this.moleculeLabel) {\r\n                    this.moleculeLabel.string = `${this._curBoardCount}`;\r\n                }\r\n\r\n                // 当分子==分母时收尾\r\n                const denominatorNum = Number(this.denominatorLabel?.string ?? \"0\");\r\n                if (this._curBoardCount === denominatorNum) {\r\n                    DataManager.Instance.isContinueFillFireWood = false;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            this.moleculeLabel.color = new Color(255, 0, 0, 255)\r\n            this.denominatorLabel.color = new Color(255, 0, 0, 255);\r\n            this.line.color = new Color(255, 0, 0, 255);\r\n\r\n            this._isOnceFire = true;           // 重置为可再次触发一次\r\n            if (this.fireNode) this.fireNode.active = false;\r\n            dm.isTowerAttack = false;\r\n\r\n            // 归零秒数并清理线圈\r\n            this._curSecond = 0;\r\n            this.cleanElectricCoil();\r\n        }\r\n    }\r\n\r\n\r\n    // 清理电圈\r\n    cleanElectricCoil() {\r\n        if (!this._unlock) return;\r\n\r\n        for (let i = 0; i < this._plots.length; i++) {\r\n            const name = this._plots[i];\r\n\r\n            const plot = this._unlock.children.find(item => {\r\n                return item.name == name;\r\n            })\r\n\r\n            if (plot) {\r\n                const elementCon = plot.getChildByName(\"ElementCon\");\r\n                if (!elementCon) continue;\r\n\r\n                const node = elementCon.getChildByName(\"Node\");\r\n                if (!node) continue;\r\n\r\n                const dtai = node.getChildByName(\"DTani\");\r\n                if (!dtai) continue;\r\n\r\n                const dianhuan = dtai.getChildByName(\"TX_dianhuan\");\r\n                if (!dianhuan) continue;\r\n\r\n                dianhuan.active = false;\r\n\r\n                const dianqiu = dtai.getChildByName(\"TX_dianqiu\");\r\n                if (!dianqiu) continue;\r\n\r\n                dianqiu.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    denominatorUpgradeAni(minNum: number, maxNum: number, interval: number = 0.05) {\r\n        const label = this.denominatorLabel;\r\n        if (!label || !label.isValid) return;\r\n\r\n        for (let i = minNum; i <= maxNum; i++) {\r\n            this.scheduleOnce(() => {\r\n                label.string = String(i);\r\n            }, (i - minNum) * interval);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}