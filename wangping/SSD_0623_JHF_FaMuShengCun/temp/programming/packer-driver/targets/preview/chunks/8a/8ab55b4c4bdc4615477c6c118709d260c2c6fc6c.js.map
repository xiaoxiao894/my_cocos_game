{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Monster/MonsterConManager.ts"],"names":["_decorator","Component","director","Node","Quat","tween","Vec3","EntityTypeEnum","EventNames","Pool","Simulator","Vector2","Util","MonsterItem","EventManager","DataManager","ccclass","property","SPIN_KEY","MonsterConManager","selectLocationIndex","_monsterPools","_monsterTypes","Elephant","Bear","Bear_B","Bear_L","_dropPool","_bloodPool","_speedCfg","_radiusCfg","_coinsList","initMonsterPos","pos","type","_bornSpeed","_bornTimeLimit","_bornTime","start","Instance","monsterManager","init","i","length","push","Coin","instance","setAgentDefaults","monster","node","children","monsterItem","getComponent","validPos","worldPosition","idx","findIndex","item","name","mass","agentId","addAgent","v3t2","agentObj","getAgentByAid","neighborDist","agentHandleId","creatMonster","isDissolveOnce","isAfferentPos","isCustomHp","randomNum","getWeightedRandom","pool","getItem","setWorldPosition","birthPoints","monsterBirthPoint","birthPoint","getWorldPosition","newNode","setScale","getScene","addChild","to","scale","easing","call","monsterParent","removeFromParent","destroy","weights","total","reduce","a","b","rand","Math","random","cumulative","killMonsters","nodes","end","isValid","deathAni","recycleMonster","index","putItem","update","dt","isStartGame","currentMonsterCount","monsterNum","bornTimeLimit","spawnCount","min","run","moveByRvo","inst","emit","ArmyMoveByRVO","dropItem","coinConNode","eulerAngles","x","y","z","startY","peakY","bounceY","targetPos","startRot","rotation","clone","p0","p2","p1","max","totalSpinDeg","tmpQ","startSelfRotate","param","t","onUpdate","u","angle","fromEuler","curQ","multiply","setRotation","position","delay","getDrops","newList","splice","speedDegPerSec","axis","stopSelfRotate","dur","delta","by","tw","repeatForever","stop"],"mappings":"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","sourcesContent":["import { _decorator, Component, director, Node, Quat, Tween, tween, Vec3 } from 'cc';\r\nimport { EntityTypeEnum, EventNames } from '../Enum/Index';\r\nimport Pool from '../Pool/Pool';\r\nimport { Simulator } from '../RVO/Simulator';\r\nimport { Vector2 } from '../RVO/Common';\r\nimport { MathUtil } from '../Util/MathUtil';\r\nimport Util from '../Common/Util';\r\nimport { MonsterItem } from './MonsterItem';\r\nimport { EventManager } from '../Global/EventManager';\r\nimport { DataManager } from '../Global/DataManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst SPIN_KEY = '__spinTween';\r\n\r\n@ccclass('MonsterConManager')\r\nexport class MonsterConManager extends Component {\r\n    @property(Node)\r\n    monsterBirthPoint: Node = null;\r\n\r\n    @property(Node)\r\n    monsterParent: Node = null;\r\n\r\n    @property(Node)\r\n    coinConNode: Node = null;\r\n\r\n    private selectLocationIndex = 0;\r\n\r\n    private _monsterPools: Pool[] = [];\r\n    private _monsterTypes: EntityTypeEnum[] = [EntityTypeEnum.Elephant, EntityTypeEnum.Bear, EntityTypeEnum.Bear_B, EntityTypeEnum.Bear_L];\r\n    private _dropPool: Pool;\r\n    private _bloodPool: Pool;\r\n\r\n    private _speedCfg = [7, 5.5, 5.5, 5.5];\r\n    private _radiusCfg = [3, 2, 2.5, 1.8];\r\n\r\n    private _coinsList = [];\r\n\r\n    private initMonsterPos = [\r\n        { pos: new Vec3(-18.466, 0, -25.856), type: EntityTypeEnum.Elephant },\r\n        { pos: new Vec3(-10.782, 0, -25.856), type: EntityTypeEnum.Bear_L },\r\n        { pos: new Vec3(-2.515, 0, -25.856), type: EntityTypeEnum.Bear_B },\r\n        { pos: new Vec3(8.038, 0, -25.209), type: EntityTypeEnum.Bear },\r\n        { pos: new Vec3(16.237, 0, -25.687), type: EntityTypeEnum.Bear },\r\n    ]\r\n\r\n    protected start(): void {\r\n        DataManager.Instance.monsterManager = this;\r\n    }\r\n\r\n    public init() {\r\n        this._monsterPools = [];\r\n        for (let i = 0; i < this._monsterTypes.length; i++) {\r\n            this._monsterPools.push(new Pool(this._monsterTypes[i]));\r\n        }\r\n\r\n        this._dropPool = new Pool(EntityTypeEnum.Coin);\r\n        Simulator.instance.setAgentDefaults(60, 3, 1, 0.1, 14, 80, new Vector2(0, 0));\r\n\r\n        // for (let i = 0; i < this.initMonsterPos.length; i++) {\r\n        //     const { pos } = this.initMonsterPos[i];\r\n\r\n        //     DataManager.Instance.monsterManager.creatMonster(true, true, pos, true);\r\n        // }\r\n        for (let i = 0; i < this.node.children.length; i++) {\r\n            const monster = this.node.children[i];\r\n            const monsterItem = monster.getComponent(MonsterItem);\r\n            if (!monsterItem) return;\r\n            let validPos: Vec3 = monster.worldPosition;\r\n\r\n            const idx = this._monsterPools.findIndex(item => {\r\n                return item[`_prefab`].name == monster.name;\r\n                // return item == monster.name;\r\n            })\r\n\r\n            monsterItem.init(idx, true, false);\r\n\r\n            // const newNode = new Node(\"tempNode\");\r\n            // newNode.setScale(1, 0, 1);\r\n            // director.getScene().addChild(newNode);\r\n            // newNode.addChild(monster)\r\n            // tween(newNode)\r\n            //     .to(0.15, { scale: new Vec3(1, 1.1, 1) }, { easing: 'quadOut' })\r\n            //     .to(0.05, { scale: new Vec3(1, 1, 1) }, { easing: 'quadOut' })\r\n            //     .call(() => {\r\n            //         this.monsterParent.addChild(monster);\r\n            //         newNode.removeFromParent();\r\n            //         newNode.destroy();\r\n            const mass = 1;\r\n            const agentId = Simulator.instance.addAgent(\r\n                Util.v3t2(validPos),\r\n                this._radiusCfg[idx],\r\n                this._speedCfg[idx],\r\n                null,\r\n                mass\r\n            );\r\n\r\n            const agentObj = Simulator.instance.getAgentByAid(agentId);\r\n            agentObj.neighborDist = this._radiusCfg[idx] * 2;\r\n\r\n            monsterItem.agentHandleId = agentId;\r\n            // })\r\n            // .start();\r\n        }\r\n    }\r\n\r\n    creatMonster(isDissolveOnce, isAfferentPos = false, pos = new Vec3(0, 0, 0), isCustomHp = false) {\r\n        const randomNum = this.getWeightedRandom();\r\n        const pool = this._monsterPools[randomNum];\r\n        if (!pool) {\r\n            // console.warn(`No monster pool found for type ${randomNum}`);\r\n            return;\r\n        }\r\n\r\n        const node: Node = pool.getItem();\r\n        const monster: MonsterItem = node.getComponent(MonsterItem);\r\n        if (!monster) return;\r\n\r\n        let validPos: Vec3 = null;\r\n        if (isAfferentPos) {\r\n            validPos = pos;\r\n            node.setWorldPosition(validPos);\r\n        } else {\r\n            const birthPoints = this.monsterBirthPoint.children;\r\n            if (this.selectLocationIndex >= birthPoints.length) {\r\n                this.selectLocationIndex = 0;\r\n            }\r\n\r\n            const birthPoint = birthPoints[this.selectLocationIndex];\r\n            validPos = birthPoint.getWorldPosition();\r\n            node.setWorldPosition(validPos);\r\n            this.selectLocationIndex++;\r\n        }\r\n\r\n        monster.init(randomNum, true, isCustomHp);\r\n\r\n        const newNode = new Node(\"tempNode\");\r\n        newNode.setScale(1, 0, 1);\r\n        director.getScene().addChild(newNode);\r\n        newNode.addChild(node)\r\n        tween(newNode)\r\n            .to(0.15, { scale: new Vec3(1, 1.1, 1) }, { easing: 'quadOut' })\r\n            .to(0.05, { scale: new Vec3(1, 1, 1) }, { easing: 'quadOut' })\r\n            .call(() => {\r\n                this.monsterParent.addChild(node);\r\n                newNode.removeFromParent();\r\n                newNode.destroy();\r\n                const mass = 1;\r\n                const agentId = Simulator.instance.addAgent(\r\n                    Util.v3t2(validPos),\r\n                    this._radiusCfg[randomNum],\r\n                    this._speedCfg[randomNum],\r\n                    null,\r\n                    mass\r\n                );\r\n\r\n                const agentObj = Simulator.instance.getAgentByAid(agentId);\r\n                agentObj.neighborDist = this._radiusCfg[randomNum] * 2;\r\n\r\n                monster.agentHandleId = agentId;\r\n            })\r\n            .start();\r\n    }\r\n\r\n    getWeightedRandom(): number {\r\n        const weights = [25, 25, 25, 25]; // 对应 0, 1, 2 的权重\r\n        const total = weights.reduce((a, b) => a + b, 0);\r\n        const rand = Math.random() * total;\r\n\r\n        let cumulative = 0;\r\n        for (let i = 0; i < weights.length; i++) {\r\n            cumulative += weights[i];\r\n            if (rand < cumulative) {\r\n                return i; // i 就是结果：0, 1, 或 2\r\n            }\r\n        }\r\n\r\n        return 1; // 理论上不会走到这里，但加上以防万一\r\n    }\r\n\r\n    public killMonsters(nodes: Node[], end) {\r\n        for (let node of nodes) {\r\n            if (!node || !node.isValid) {\r\n                continue;\r\n            }\r\n            let monster: MonsterItem = node.getComponent(MonsterItem);\r\n            if (monster) {\r\n                monster.deathAni(end);\r\n            }\r\n        }\r\n    }\r\n\r\n    public recycleMonster(index: number, node: Node) {\r\n        if (this._monsterPools[index]) {\r\n            this._monsterPools[index].putItem(node);\r\n        }\r\n    }\r\n\r\n    private _bornSpeed: number = 1;\r\n    private _bornTimeLimit: number = 1;\r\n    private _bornTime: number = 0;\r\n    protected update(dt: number): void {\r\n        if (DataManager.Instance.isStartGame) {\r\n            if (this._monsterPools.length > 0) {\r\n                const currentMonsterCount = this.monsterParent.children.length;\r\n\r\n                if (currentMonsterCount < DataManager.Instance.monsterNum) {\r\n                    this._bornTime += dt;\r\n                    if (this._bornTime > DataManager.Instance.bornTimeLimit) {\r\n                        this._bornTime = 0;\r\n\r\n                        // 可创建的数量不超过最大限制\r\n                        const spawnCount = Math.min(this._bornSpeed, DataManager.Instance.monsterNum - currentMonsterCount);\r\n                        for (let i = 0; i < spawnCount; i++) {\r\n                            this.creatMonster(false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // rvo 更新逻辑坐标\r\n            Simulator.instance.run(dt);\r\n\r\n            for (let index = 0; index < this.monsterParent.children.length; index++) {\r\n                const monster = this.monsterParent.children[index];\r\n                monster?.getComponent(MonsterItem)?.moveByRvo(dt);\r\n            }\r\n            EventManager.inst.emit(EventNames.ArmyMoveByRVO, dt);\r\n        }\r\n    }\r\n\r\n    public dropItem(pos: Vec3, end) {\r\n        const node = this._dropPool.getItem();\r\n        node['__isReady'] = false;\r\n        node['__fallingTarget'] = false;\r\n        this.coinConNode.addChild(node);\r\n        node.eulerAngles = new Vec3(90, 0, 0);\r\n        node.setWorldPosition(new Vec3(pos.x, pos.y + 0.5, pos.z));\r\n\r\n        const startY = pos.y + 0.5;\r\n        const peakY = startY + 3;      // 第一次跃起高度\r\n        const bounceY = startY + 0.7;  // 回落后的弹跳高度\r\n        const targetPos = new Vec3(pos.x, pos.y, pos.z - 3);\r\n\r\n        const startRot = node.rotation.clone();\r\n        const p0 = end //.worldPosition //.clone();// node.worldPosition.clone(); // 起点（此时在地面）\r\n        const p2 = targetPos.clone();          // 终点\r\n        // 控制点：取中点并抬高一些，形成明显弧线；你也可以把 2.5 调高/调低\r\n        const p1 = new Vec3(\r\n            (p0.x + p2.x) * 0.5,\r\n            Math.max(p0.y, p2.y) + 15,\r\n            (p0.z + p2.z) * 0.5\r\n        );\r\n        const totalSpinDeg = 720;\r\n        const tmpQ = new Quat();\r\n\r\n        this.startSelfRotate(node, 180);\r\n\r\n        const param = { t: 0 };\r\n        tween(param)\r\n            .to(0.5, { t: 1 }, {\r\n                easing: 'quadInOut',\r\n                onUpdate: () => {\r\n                    const t = param.t;\r\n                    const u = 1 - t;\r\n                    // 二次贝塞尔：B(t) = u^2 * p0 + 2*u*t * p1 + t^2 * p2\r\n                    const x = u * u * p0.x + 2 * u * t * p1.x + t * t * p2.x;\r\n                    const y = u * u * p0.y + 2 * u * t * p1.y + t * t * p2.y;\r\n                    const z = u * u * p0.z + 2 * u * t * p1.z + t * t * p2.z;\r\n                    node.setWorldPosition(x, y, z);\r\n\r\n                    // —— 同步做 360° 翻滚 —— \r\n                    // 1) 默认绕 X 轴翻滚；如需改轴：X翻滚(ang,0,0) / Y自转(0,ang,0) / Z滚动(0,0,ang)\r\n                    const angle = totalSpinDeg * t;\r\n                    Quat.fromEuler(tmpQ, angle, 0, 0); // 绕 X 轴\r\n                    const curQ = new Quat();\r\n                    Quat.multiply(curQ, startRot, tmpQ);\r\n                    node.setRotation(curQ); // 局部旋转\r\n                },\r\n                // onComplete: () => {\r\n                //     node['__isReady'] = true;\r\n                //     node['__fallingTarget'] = true;\r\n                //     this._coinsList.push(node);\r\n                // }\r\n            })\r\n            .call(() => {\r\n                // 先做一次“起落-回弹”的弹性效果\r\n                tween(node)\r\n                    .to(0.15, { position: new Vec3(targetPos.x, peakY, targetPos.z) }, { easing: 'quadOut' })  // 向上弹起\r\n                    .to(0.15, { position: new Vec3(targetPos.x, startY, targetPos.z) }, { easing: 'quadIn' })  // 回落\r\n                    .to(0.07, { position: new Vec3(targetPos.x, bounceY, targetPos.z) }, { easing: 'quadOut' })// 二次弹起\r\n                    .to(0.07, { position: new Vec3(targetPos.x, startY, targetPos.z) }, { easing: 'quadIn' })  // 回到地面\r\n                    .delay(0.5)\r\n                    .call(() => {\r\n                        // 弹跳结束后，沿二次贝塞尔弧线飞向 targetPos\r\n                        node[`__isReady`] = true;\r\n                        this._coinsList.push(node);\r\n                    })\r\n                    .start();\r\n            })\r\n            .start();\r\n\r\n    }\r\n\r\n    // public dropItem(pos: Vec3) {\r\n    //     let node = this._dropPool.getItem();\r\n    //     node[`__isReady`] = false;\r\n    //     node[`__fallingTarget`] = false;\r\n    //     this.coinConNode.addChild(node);\r\n    //     node.setWorldPosition(pos);\r\n\r\n    //     const targetPos = new Vec3(pos.x, pos.y, pos.z - 3);\r\n\r\n    //     // 原始位置\r\n    //     const startY = pos.y;\r\n    //     const peakY = startY + 3;     // 第一次跃起高度\r\n    //     const bounceY = startY + 0.7;   // 回落后的弹跳高度\r\n\r\n    //     tween(node)\r\n    //         .to(0.25, { position: new Vec3(pos.x, peakY, pos.z) }, { easing: 'quadOut' })   // 向上弹起\r\n    //         .to(0.2, { position: new Vec3(pos.x, startY, pos.z) }, { easing: 'quadIn' })    // 回落\r\n    //         .to(0.15, { position: new Vec3(pos.x, bounceY, pos.z) }, { easing: 'quadOut' }) // 二次弹起\r\n    //         .to(0.15, { position: new Vec3(pos.x, startY, pos.z) }, { easing: 'quadIn' })   // 回到地面\r\n    //         .call(() => {\r\n    //             node[`__isReady`] = true;\r\n    //             this._coinsList.push(node);\r\n    //         })\r\n    //         .start();\r\n    // }\r\n\r\n    public getDrops() {\r\n        let newList = this._coinsList.splice(0, Math.min(this._coinsList.length, 1));\r\n        return newList;\r\n    }\r\n\r\n    public startSelfRotate(node: Node, speedDegPerSec = 60, axis: 'x' | 'y' | 'z' = 'y') {\r\n        if (!node?.isValid) return;\r\n        this.stopSelfRotate(node); // 避免重复叠加\r\n\r\n        const dur = 10; // tween 动画时长\r\n        const delta = speedDegPerSec * dur; // 总旋转角度\r\n        const by = axis === 'x' ? new Vec3(delta, 0, 0)\r\n            : axis === 'y' ? new Vec3(0, delta, 0)\r\n                : new Vec3(0, 0, delta);\r\n\r\n        const tw = tween(node)\r\n            .repeatForever(tween(node).to(dur, { eulerAngles: by }))\r\n            .start();\r\n\r\n        (node as any)[SPIN_KEY] = tw;\r\n    }\r\n\r\n\r\n    public stopSelfRotate(node: Node) {\r\n        const tw: Tween<Node> | undefined = (node as any)?.[SPIN_KEY];\r\n        if (tw) {\r\n            tw.stop();\r\n            delete (node as any)[SPIN_KEY];\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}