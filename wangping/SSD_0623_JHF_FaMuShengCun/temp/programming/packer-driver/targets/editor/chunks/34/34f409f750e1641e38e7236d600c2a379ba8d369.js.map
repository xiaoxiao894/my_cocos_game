{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Arrow/Arrow3DManager.ts"],"names":["_decorator","Component","Vec3","DataManager","ccclass","property","Arrow3DManager","_floatingTime","_floatingRotateY","_floatingSpeed","_floatingAmplitude","_floatingHeightOffset","_floatingRotateSpeed","start","Instance","arrow3DManager","node","active","playFloatingEffect","deltaTime","targetVec","isPlot","floatY","Math","sin","PI","setWorldPosition","x","y","z","setRotationFromEuler"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;gCAGjBM,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCL,SADpC,CAC8C;AAAA;AAAA;AAAA,eAClCM,aADkC,GAClB,CADkB;AAAA,eAElCC,gBAFkC,GAEf,CAFe;AAAA,eAGzBC,cAHyB,GAGR,GAHQ;AAAA,eAIzBC,kBAJyB,GAIJ,GAJI;AAAA,eAKlCC,qBALkC,GAKV,CALU;AAAA,eAMzBC,oBANyB,GAMF,GANE;AAAA;;AAQ1CC,QAAAA,KAAK,GAAS;AACV;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,cAArB,GAAsC,IAAtC;AACA,eAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,kBAAkB,CAACC,SAAD,EAAoBC,SAApB,EAAqCC,MAAM,GAAG,KAA9C,EAAqD;AACnE,eAAKd,aAAL,IAAsBY,SAAtB,CADmE,CAGnE;;AACA,gBAAMG,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKjB,aAAL,GAAqB,CAArB,GAAyBgB,IAAI,CAACE,EAA9B,GAAmC,KAAKhB,cAAjD,IAAmE,KAAKC,kBAAvF;;AAEA,cAAIW,MAAJ,EAAY;AACR,iBAAKV,qBAAL,GAA6B,CAA7B;AACH,WAFD,MAEO;AACH,iBAAKA,qBAAL,GAA6B,GAA7B;AACH;;AAED,eAAKK,IAAL,CAAUU,gBAAV,CAA2B,IAAIxB,IAAJ,CACvBkB,SAAS,CAACO,CADa,EAEvBP,SAAS,CAACQ,CAAV,GAAc,KAAKjB,qBAAnB,GAA2CW,MAFpB,EAGvBF,SAAS,CAACS,CAHa,CAA3B,EAZmE,CAkBnE;;AACA,eAAKrB,gBAAL,IAAyB,KAAKI,oBAAL,GAA4BO,SAArD;AACA,eAAKX,gBAAL,IAAyB,GAAzB;AAEA,eAAKQ,IAAL,CAAUc,oBAAV,CAA+B,CAAC,GAAhC,EAAqC,KAAKtB,gBAA1C,EAA4D,CAA5D;AACH;;AAzCyC,O","sourcesContent":["import { _decorator, Component, Node, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Arrow3DManager')\r\nexport class Arrow3DManager extends Component {\r\n    private _floatingTime = 0;\r\n    private _floatingRotateY = 0;\r\n    private readonly _floatingSpeed = 0.4;\r\n    private readonly _floatingAmplitude = 1.2;\r\n    private _floatingHeightOffset = 4;\r\n    private readonly _floatingRotateSpeed = 180;\r\n\r\n    start(): void {\r\n        DataManager.Instance.arrow3DManager = this;\r\n        this.node.active = false;\r\n    }\r\n\r\n    /**\r\n     * 播放立起来跳动 + 自转效果（调用前需设置 _targetVec）\r\n     * @param deltaTime 每帧传入的时间\r\n     * @param targetVec 箭头要跳动的目标位置\r\n     */\r\n    playFloatingEffect(deltaTime: number, targetVec: Vec3, isPlot = false) {\r\n        this._floatingTime += deltaTime;\r\n\r\n        // 上下浮动\r\n        const floatY = Math.sin(this._floatingTime * 2 * Math.PI * this._floatingSpeed) * this._floatingAmplitude;\r\n\r\n        if (isPlot) {\r\n            this._floatingHeightOffset = 1;\r\n        } else {\r\n            this._floatingHeightOffset = 4.5;\r\n        }\r\n\r\n        this.node.setWorldPosition(new Vec3(\r\n            targetVec.x,\r\n            targetVec.y + this._floatingHeightOffset + floatY,\r\n            targetVec.z\r\n        ));\r\n\r\n        // 自转\r\n        this._floatingRotateY += this._floatingRotateSpeed * deltaTime;\r\n        this._floatingRotateY %= 360;\r\n\r\n        this.node.setRotationFromEuler(-270, this._floatingRotateY, 0);\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}