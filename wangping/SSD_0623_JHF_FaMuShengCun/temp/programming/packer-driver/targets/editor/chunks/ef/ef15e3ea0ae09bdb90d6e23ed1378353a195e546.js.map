{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Monster/MonsterItem.ts"],"names":["_decorator","Component","Node","SkeletalAnimation","CCString","Vec3","tween","Material","MeshRenderer","CCInteger","Quat","Vec2","v2","ProgressBar","CCFloat","DataManager","Simulator","RVOMath","Vector2","MonsterStateEnum","DissolveEffect","ccclass","property","MonsterItem","currentState","_isDead","_index","_lastPathHasObstacle","_checkCounter","_noMove","_nowHp","redTimeout","_frames","_agentHandleId","_assignedGuardrail","_hasCountedAttack","agentHandleId","value","init","index","isDissolveOnce","isCustomHp","hp","runAniName","scheduleOnce","changState","Walk","bloodNode","bar","getComponent","progress","active","setMaterByIndex","matIndex","needReset","dissolveEffect","forEach","d","mesh","node","matInstance","getMaterialInstance","setProperty","reset","warmUpMaterial","setMaterial","mats","type","deathAni","end","knockbackDir","knockbackDistance","goalVector","multiplyScalar","by","position","call","agent","instance","getAgentByAid","isValid","newWorldPos","worldPosition","position_","x","z","attackingMonsterCount","Math","max","start","clearTimeout","affectedSpecialEffects","setTimeout","Die","timeout","play","clearData","Instance","monsterManager","recycleMonster","updateIconPos","gridSystem","removeNode","worldPos","getWorldPosition","clone","i","dropNum","randius","angle","random","PI","r","sqrt","offsetX","cos","offsetZ","sin","newRandomPos","y","dropItem","update","dt","setPreferredVelocities","guardrailArr","length","moveTarget","worldTarget","monsterPos","nearestGuardrail","minDistSqr","Infinity","guardrail","attackingCount","guardrailPos","dx","dz","distSqr","pos","dir","subtract","normalize","offset","adjustedPos","agentAid","agentPos","getAgentPosition","subtract2f","lengthSqr","distanceToTargetSquared","squaredDistance","hasArrived","sizeSquare","Attack","setAgentPrefVelocity","ZERO","rotateTowards","RVO_EPSILON","forward","currentRotation","skeletalAnimation","worldRotation","targetRotation","fromViewUp","UP","rotateSpeed","slerped","slerp","min","childZero","targetWorldPos","currentPos","targetQuat","currentQuat","resultQuat","moveByRvo","p","targetPos","dist","distance","smoothFactor","lerp","setWorldPosition","updateNode","state","getState","pause","removeAgent","crossFade","attack","blood","getChildByName","parent","bloodBar","guardrailBlood","name","includes","leftNode","getChildByPath","leftMesh","sceneManager","doorMaterials","rightNode","rightMesh","fenceNode","fenceMesh","guardrailMaterials","isDead"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SkeletalAnimation, CCString, Vec3, tween, Material, MeshRenderer, CCInteger, Quat, Vec2, v2, ProgressBar, CCFloat } from 'cc';\r\nimport { DataManager, Guardrail } from '../Global/DataManager';\r\nimport { Simulator } from '../RVO/Simulator';\r\nimport { RVOMath, Vector2 } from '../RVO/Common';\r\nimport { MonsterStateEnum } from '../Actor/StateDefine';\r\nimport { DissolveEffect } from '../../Res/DissolveEffect/scripts/DissolveEffect';\r\nimport { MathUtil } from '../Util/MathUtil';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MonsterItem')\r\nexport class MonsterItem extends Component {\r\n    @property(SkeletalAnimation)\r\n    skeletalAnimation: SkeletalAnimation = null;\r\n\r\n    @property(Node)\r\n    affectedSpecialEffects: Node = null;\r\n\r\n    @property(CCString)\r\n    runAniName: string = \"walk_f\";\r\n\r\n    @property(CCString)\r\n    dieAniName: string = \"die\";\r\n\r\n    @property(CCInteger)\r\n    type: number = 0;\r\n\r\n    @property(DissolveEffect)\r\n    dissolveEffect: DissolveEffect[] = [];\r\n\r\n    @property(Material)\r\n    mats: Material[] = [];\r\n\r\n    @property(CCInteger)\r\n    hp: number = 1;\r\n\r\n    //rvo\r\n    @property(CCInteger)\r\n    hitPow: number = 5 //受击系数 系数越高 反弹力度越大\r\n\r\n    @property(CCFloat)\r\n    sizeSquare: number = 16;\r\n\r\n    @property(CCFloat)\r\n    dropNum: number = 3;\r\n\r\n    @property(Node)\r\n    bloodNode: Node = null;\r\n\r\n    private currentState = null;\r\n\r\n    private _isDead: boolean = false;\r\n    private _index: number;\r\n    private _lastPathHasObstacle: boolean = false;\r\n    private _checkCounter: number = 0;\r\n\r\n    private _noMove: boolean = false;\r\n\r\n    private _nowHp: number = 1;\r\n\r\n    // 闪红恢复timeout\r\n    private redTimeout;\r\n\r\n    private _frames: number = 0;\r\n    private _agentHandleId: number = -1; //RVOid\r\n    public get agentHandleId(): number {\r\n        return this._agentHandleId;\r\n    }\r\n    public set agentHandleId(value: number) {\r\n        this._agentHandleId = value;\r\n    }\r\n\r\n    public init(index: number = 0, isDissolveOnce = true, isCustomHp) {\r\n        this._index = index;\r\n        if (isCustomHp) {\r\n            this._nowHp = 1;\r\n            this.hp = 1;\r\n        } else {\r\n            this._nowHp = this.hp;\r\n        }\r\n        this._isDead = false;\r\n        this._noMove = false;\r\n        this._hasCountedAttack = false;\r\n        this._assignedGuardrail = null;\r\n        if (this.runAniName) {\r\n            this.scheduleOnce(() => {\r\n                this.changState(MonsterStateEnum.Walk);\r\n            }, 0);\r\n        }\r\n\r\n        if (this.bloodNode) {\r\n            let bar: ProgressBar = this.bloodNode.getComponent(ProgressBar);\r\n            if (bar) {\r\n                bar.progress = 1;\r\n            }\r\n            this.bloodNode.active = false;\r\n        }\r\n\r\n        //初始化材质\r\n        // this.dissolveEffect.forEach((d: DissolveEffect) => {\r\n        //     this.setMaterByIndex(d.node, 0);\r\n        //     if (isDissolveOnce) {\r\n        //         this.warmUpMaterial(d.node, 1);\r\n        //         this.warmUpMaterial(d.node, 2);\r\n        //     }\r\n        //     d.reset();\r\n        // })\r\n\r\n        this.setMaterByIndex(0, true)\r\n    }\r\n\r\n    private setMaterByIndex(matIndex: number, needReset: boolean = false) {\r\n        this.dissolveEffect.forEach((d: DissolveEffect) => {\r\n            let mesh: MeshRenderer = d.node.getComponent(MeshRenderer);\r\n            if (mesh) {\r\n                let matInstance: Material = mesh.getMaterialInstance(0);\r\n                if (matIndex === 1) {\r\n                    matInstance.setProperty('showType', 1.0);\r\n                } else {\r\n                    matInstance.setProperty('showType', 0.0);\r\n                    matInstance.setProperty('dissolveThreshold', 0.0);\r\n                }\r\n            }\r\n\r\n            if (needReset) {\r\n                d.reset();\r\n            }\r\n        });\r\n    }\r\n\r\n    public warmUpMaterial(node, index: number) {\r\n        let mesh: MeshRenderer = node.getComponent(MeshRenderer);\r\n        if (!mesh) return;\r\n\r\n        mesh.setMaterial(this.mats[index], 0);\r\n\r\n        if (this.type === 1) {\r\n            if (index === 1) {\r\n                mesh.setMaterial(this.mats[index], 1);\r\n            } else {\r\n                mesh.setMaterial(this.mats[index + 3], 1);\r\n            }\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            mesh.setMaterial(this.mats[0], 0);\r\n            if (this.type === 1) {\r\n                mesh.setMaterial(this.mats[0 + 3], 1);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public deathAni(end) {\r\n        if (this._isDead) {\r\n            return;\r\n        }\r\n        // 固定击退方向 -Z 方向）\r\n        const knockbackDir = new Vec3(0, 0, -1);\r\n\r\n        // 固定击退距离\r\n        const knockbackDistance = 0.75;   // 击退 3 个单位\r\n\r\n        const goalVector = knockbackDir.multiplyScalar(knockbackDistance);\r\n\r\n        tween(this.node)\r\n            .by(0.15, { position: goalVector })\r\n            .call(() => {\r\n                const agent = Simulator.instance.getAgentByAid(this.agentHandleId);\r\n                if (agent && this.node?.isValid) {\r\n                    const newWorldPos = this.node.worldPosition;\r\n                    agent.position_ = new Vector2(newWorldPos.x, newWorldPos.z);\r\n                }\r\n                if (this._assignedGuardrail) {\r\n                    this._assignedGuardrail.attackingMonsterCount = Math.max(\r\n                        0,\r\n                        (this._assignedGuardrail.attackingMonsterCount || 1) - 1\r\n                    );\r\n\r\n                    this.changState(MonsterStateEnum.Walk);\r\n                    this._assignedGuardrail = null;\r\n                    this._hasCountedAttack = false;\r\n                    this._noMove = false;\r\n                }\r\n            })\r\n            .start();\r\n\r\n        if (this.redTimeout) {\r\n            clearTimeout(this.redTimeout);\r\n            this.redTimeout = null;\r\n        }\r\n        this._nowHp--;\r\n        if (this.affectedSpecialEffects) {\r\n            this.affectedSpecialEffects.active = true;\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            this.affectedSpecialEffects.active = false;\r\n        }, 2)\r\n\r\n        if (this.bloodNode) {\r\n            let bar: ProgressBar = this.bloodNode.getComponent(ProgressBar);\r\n            if (bar) {\r\n                bar.progress = this._nowHp / this.hp;\r\n            }\r\n            this.bloodNode.active = true;\r\n        }\r\n\r\n        if (this._nowHp > 0) {\r\n            //闪红\r\n            this.setMaterByIndex(1);\r\n            this.redTimeout = setTimeout(() => {\r\n                //恢复\r\n                this.setMaterByIndex(0);\r\n            }, 250);\r\n            return;\r\n        }\r\n        //真死了\r\n        this._isDead = true;\r\n        // this.updateIconPos();\r\n        if (this._assignedGuardrail && this._assignedGuardrail.attackingMonsterCount > 0) {\r\n            this._assignedGuardrail.attackingMonsterCount--;\r\n        }\r\n        this.changState(MonsterStateEnum.Die);\r\n        let timeout: number = 650;\r\n        if (this.type > 0) {\r\n            timeout = 880;\r\n        }\r\n        //闪红\r\n        this.setMaterByIndex(1);\r\n        setTimeout(() => {\r\n            //消融\r\n            // this.setMaterByIndex(0);\r\n            this.dissolveEffect.forEach((d) => {\r\n                this.setMaterByIndex(0);\r\n                d.init();\r\n                d.play(0.5);\r\n            });\r\n        }, 250);\r\n\r\n        setTimeout(() => {\r\n            this.clearData();\r\n            DataManager.Instance.monsterManager.recycleMonster(this._index, this.node);\r\n        }, timeout);\r\n\r\n        // this.scheduleOnce(() => {\r\n        this.updateIconPos(end);\r\n        // }, 0.15)\r\n\r\n        DataManager.Instance.gridSystem.removeNode(this.node);\r\n    }\r\n\r\n    updateIconPos(end) {\r\n        // const randomIconNum = MathUtil.getRandom(1, 4);\r\n        const worldPos = this.node.getWorldPosition().clone();\r\n        for (let i = 0; i < this.dropNum; i++) {\r\n            const randius = 3;\r\n            const angle = Math.random() * Math.PI * 2;\r\n            const r = Math.sqrt(Math.random()) * randius;\r\n\r\n            const offsetX = r * Math.cos(angle)\r\n            const offsetZ = r * Math.sin(angle);\r\n\r\n            const newRandomPos = new Vec3(worldPos.x + offsetX, worldPos.y, worldPos.z + offsetZ);\r\n            DataManager.Instance.monsterManager.dropItem(newRandomPos, end);\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this._isDead) {\r\n            return;\r\n        }\r\n\r\n        if (this._frames++ > 8) {\r\n            this._frames = 0\r\n            this.setPreferredVelocities(dt) //设置追踪主角的线速度\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 设置追踪主角的线速度方向和大小\r\n    */\r\n    // 怪物 RVO 移动与护栏攻击逻辑\r\n    private _assignedGuardrail: Guardrail = null;\r\n    private _hasCountedAttack: boolean = false;\r\n    setPreferredVelocities(dt: number) {\r\n        if (this.agentHandleId < 0 || DataManager.Instance.guardrailArr.length <= 0) return;\r\n\r\n        let moveTarget: Vec2;\r\n        let worldTarget: Vec3;\r\n\r\n        const monsterPos = this.node.worldPosition.clone();\r\n        let nearestGuardrail = null;\r\n        let minDistSqr = Infinity;\r\n\r\n        for (const guardrail of DataManager.Instance.guardrailArr) {\r\n            const attackingCount = guardrail.attackingMonsterCount || 0;\r\n            if (attackingCount >= 2) continue;\r\n\r\n            const guardrailPos = guardrail.node.worldPosition;\r\n            const dx = guardrailPos.x - monsterPos.x;\r\n            const dz = guardrailPos.z - monsterPos.z;\r\n            const distSqr = dx * dx + dz * dz;\r\n\r\n            if (distSqr < minDistSqr) {\r\n                minDistSqr = distSqr;\r\n                nearestGuardrail = guardrail;\r\n            }\r\n        }\r\n\r\n        if (nearestGuardrail && !this._assignedGuardrail) {\r\n            const pos = nearestGuardrail.node.worldPosition;\r\n            const dir = new Vec3();\r\n            Vec3.subtract(dir, pos, monsterPos);\r\n            dir.y = 0;\r\n            dir.normalize();\r\n            const offset = 4;\r\n            const adjustedPos = pos.clone().subtract(dir.multiplyScalar(offset));\r\n\r\n            moveTarget = v2(adjustedPos.x, adjustedPos.z);\r\n            worldTarget = new Vec3(adjustedPos.x, 0, adjustedPos.z);\r\n\r\n            this._assignedGuardrail = nearestGuardrail;\r\n            this._assignedGuardrail.attackingMonsterCount = (this._assignedGuardrail.attackingMonsterCount || 0) + 1;\r\n        } else if (this._assignedGuardrail) {\r\n            const guardrailPos = this._assignedGuardrail.node.worldPosition;\r\n            const dir = new Vec3();\r\n            Vec3.subtract(dir, guardrailPos, monsterPos);\r\n            dir.y = 0;\r\n            dir.normalize();\r\n            const offset = 4;\r\n            const adjustedPos = guardrailPos.clone().subtract(dir.multiplyScalar(offset));\r\n\r\n            moveTarget = v2(adjustedPos.x, adjustedPos.z);\r\n            worldTarget = new Vec3(adjustedPos.x, 0, adjustedPos.z);\r\n        } else {\r\n            for (const guardrail of DataManager.Instance.guardrailArr) {\r\n                const guardrailPos = guardrail.node.worldPosition;\r\n                const dx = guardrailPos.x - monsterPos.x;\r\n                const dz = guardrailPos.z - monsterPos.z;\r\n                const distSqr = dx * dx + dz * dz;\r\n\r\n                if (distSqr < minDistSqr) {\r\n                    minDistSqr = distSqr;\r\n                    nearestGuardrail = guardrail;\r\n                }\r\n            }\r\n            if (nearestGuardrail) {\r\n                const pos = nearestGuardrail.node.worldPosition;\r\n                const dir = new Vec3();\r\n                Vec3.subtract(dir, pos, monsterPos);\r\n                dir.y = 0;\r\n                dir.normalize();\r\n                const offset = 4;\r\n                const adjustedPos = pos.clone().subtract(dir.multiplyScalar(offset));\r\n\r\n                moveTarget = v2(adjustedPos.x, adjustedPos.z);\r\n                worldTarget = new Vec3(adjustedPos.x, 0, adjustedPos.z);\r\n\r\n            }\r\n        }\r\n\r\n        if (!moveTarget || !worldTarget) {\r\n            return;\r\n        }\r\n\r\n        const agentAid = this.agentHandleId;\r\n        const agent = Simulator.instance.getAgentByAid(agentAid);\r\n        const agentPos = Simulator.instance.getAgentPosition(agentAid);\r\n\r\n        if (agent && agentPos) {\r\n            const goalVector = moveTarget.subtract2f(agentPos.x, agentPos.y);\r\n            const distSqr = goalVector.lengthSqr();\r\n            const distanceToTargetSquared = Vec3.squaredDistance(this.node.worldPosition, worldTarget);\r\n            const hasArrived = distanceToTargetSquared <= this.sizeSquare;\r\n\r\n            if (hasArrived) {\r\n                if (this.currentState !== MonsterStateEnum.Attack) {\r\n                    this.changState(MonsterStateEnum.Attack);\r\n                }\r\n\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, Vec2.ZERO);\r\n\r\n                if (this._assignedGuardrail) {\r\n                    this.rotateTowards(this._assignedGuardrail.node.worldPosition, dt);\r\n                    this._hasCountedAttack = true;\r\n                }\r\n\r\n                return;\r\n            } else {\r\n                if (this.currentState !== MonsterStateEnum.Walk) {\r\n                    this.changState(MonsterStateEnum.Walk);\r\n                }\r\n            }\r\n\r\n            if (distSqr < RVOMath.RVO_EPSILON) {\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, Vec2.ZERO);\r\n            } else {\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, goalVector);\r\n            }\r\n\r\n            const forward = new Vec3(goalVector.x, 0, goalVector.y).normalize();\r\n            if (forward.lengthSqr() > 0.0001) {\r\n                const currentRotation = this.skeletalAnimation.node.worldRotation.clone();\r\n                const targetRotation = new Quat();\r\n                Quat.fromViewUp(targetRotation, forward, Vec3.UP);\r\n\r\n                const rotateSpeed = 8;\r\n                const slerped = new Quat();\r\n                Quat.slerp(slerped, currentRotation, targetRotation, Math.min(1, dt * rotateSpeed));\r\n\r\n                const childZero = this.skeletalAnimation.node;\r\n                if (childZero) {\r\n                    childZero.worldRotation = slerped;\r\n                }\r\n            }\r\n        } else {\r\n            // console.error(\"RVO异常::\", agent, agentPos, agentAid);\r\n        }\r\n    }\r\n\r\n    private rotateTowards(targetWorldPos: Vec3, dt: number) {\r\n        const currentPos = this.node.worldPosition.clone();\r\n        const dir = new Vec3();\r\n        Vec3.subtract(dir, targetWorldPos, currentPos);\r\n        dir.y = 0;\r\n        dir.normalize();\r\n\r\n        if (dir.lengthSqr() < 0.0001) return;\r\n\r\n        const targetQuat = new Quat();\r\n        Quat.fromViewUp(targetQuat, dir, Vec3.UP);\r\n\r\n        const currentQuat = this.skeletalAnimation.node.worldRotation.clone();\r\n        const resultQuat = new Quat();\r\n        Quat.slerp(resultQuat, currentQuat, targetQuat, Math.min(1, dt * 40));\r\n        this.skeletalAnimation.node.worldRotation = resultQuat;\r\n    }\r\n\r\n    /**\r\n     * 在此之前 请确保Simulator run执行完毕\r\n     */\r\n    moveByRvo(dt) {\r\n        if (this._isDead) return;\r\n        if (this._noMove) {\r\n            return;\r\n        }\r\n\r\n        //栅栏边上的怪不移动\r\n        if (this._hasCountedAttack) {\r\n            this._noMove = true;\r\n        }\r\n\r\n        if (this.agentHandleId == -1) return;\r\n\r\n        const p = Simulator.instance.getAgentPosition(this.agentHandleId);\r\n        const targetPos = new Vec3(p.x, 0, p.y);\r\n        const currentPos = this.node.worldPosition.clone();\r\n\r\n        const dist = Vec3.distance(currentPos, targetPos);\r\n        if (dist > 0.01) {\r\n            const smoothFactor = 10;\r\n            Vec3.lerp(currentPos, currentPos, targetPos, dt * smoothFactor);\r\n            this.node.setWorldPosition(currentPos);\r\n            DataManager.Instance.gridSystem?.updateNode(this.node);\r\n        }\r\n\r\n    }\r\n\r\n    changState(state: MonsterStateEnum | string) {\r\n        if (state == this.currentState) {\r\n            return;\r\n        }\r\n        if (state === MonsterStateEnum.Die) {\r\n            // 播放一次动画以初始化动画状态\r\n            this.skeletalAnimation.play(MonsterStateEnum.Attack);\r\n\r\n            const state = this.skeletalAnimation.getState(MonsterStateEnum.Attack);\r\n            if (!state) return;\r\n\r\n            state.update(0); // 强制立即应用该时间的骨骼姿势\r\n            state.pause();\r\n            Simulator.instance.removeAgent(this.agentHandleId);\r\n        } else {\r\n            this.skeletalAnimation?.crossFade(state as string, 0.1)\r\n        }\r\n\r\n        this.currentState = state;\r\n    }\r\n\r\n    attack() {\r\n        //打护栏\r\n        if (this._assignedGuardrail) {\r\n            //护栏掉血\r\n            if (this._assignedGuardrail.blood > 0) {\r\n                this._assignedGuardrail.blood -= 1;\r\n                let bloodNode = this._assignedGuardrail.node.getChildByName(\"FenceBloodBar\");\r\n                if (!bloodNode) {\r\n                    // bloodNode = instantiate(DataManager.Instance.prefabMap.get(EntityTypeEnum.FenceBloodBar));\r\n                    if (!bloodNode) {\r\n                        return;\r\n                    }\r\n                    bloodNode.parent = this._assignedGuardrail.node;\r\n                }\r\n                bloodNode.active = true;\r\n                let bloodBar: ProgressBar = bloodNode.getComponent(ProgressBar);\r\n                if (bloodBar) {\r\n                    bloodBar.progress = this._assignedGuardrail.blood / DataManager.Instance.guardrailBlood;\r\n                }\r\n            }\r\n\r\n            //闪白\r\n            if (this._assignedGuardrail.node.name.includes(\"Door\")) {\r\n                //门\r\n                let leftNode = this._assignedGuardrail.node.getChildByPath(\"Door_Left/WeiLan/WeiLan\");\r\n                if (leftNode) {\r\n                    let leftMesh: MeshRenderer = leftNode.getComponent(MeshRenderer);\r\n                    if (leftMesh) {\r\n                        leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 0);\r\n                        leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 1);\r\n                        leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 2);\r\n                        setTimeout(() => {\r\n                            leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[0], 0);\r\n                            leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[1], 1);\r\n                            leftMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[2], 2);\r\n                        }, 50);\r\n                    }\r\n                }\r\n                let rightNode = this._assignedGuardrail.node.getChildByPath(\"Door_Right/WeiLan/WeiLan\");\r\n                if (rightNode) {\r\n                    let rightMesh: MeshRenderer = rightNode.getComponent(MeshRenderer);\r\n                    if (rightMesh) {\r\n                        rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 0);\r\n                        rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 1);\r\n                        rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[3], 2);\r\n                        setTimeout(() => {\r\n                            rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[0], 0);\r\n                            rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[1], 1);\r\n                            rightMesh.setMaterial(DataManager.Instance.sceneManager.doorMaterials[2], 2);\r\n                        }, 50);\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                //围栏\r\n                let fenceNode = this._assignedGuardrail.node.getChildByName(\"weiqiang02\");\r\n                if (fenceNode) {\r\n                    let fenceMesh: MeshRenderer = fenceNode.getComponent(MeshRenderer);\r\n                    if (fenceMesh) {\r\n                        fenceMesh.setMaterial(DataManager.Instance.sceneManager.guardrailMaterials[1], 0);\r\n                        setTimeout(() => {\r\n                            fenceMesh.setMaterial(DataManager.Instance.sceneManager.guardrailMaterials[0], 0);\r\n                        }, 50);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearData(): void {\r\n        if (this.agentHandleId >= 0) {\r\n            Simulator.instance.removeAgent(this.agentHandleId);\r\n            this._agentHandleId = -1;\r\n        }\r\n        this._isDead = false;\r\n        this.currentState = null;\r\n        this._frames = 0;\r\n\r\n    }\r\n\r\n    get isDead() {\r\n        return this._isDead;\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}