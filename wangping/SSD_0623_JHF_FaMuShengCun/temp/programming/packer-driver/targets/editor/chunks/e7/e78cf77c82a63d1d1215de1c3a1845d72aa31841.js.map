{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Wood/WoodManager.ts"],"names":["_decorator","Collider","Component","find","instantiate","Mat4","Pool","RigidBody","tween","Vec3","DataManager","EntityTypeEnum","MathUtil","ccclass","property","WoodManager","_woodPool","_woodCount","_woodMaxNum","_woodMinNum","_woodList","stackGap","arcOffset","start","Instance","woodManager","woodManagerInit","woodPrefab","prefabMap","get","Wood","node","removeFromParent","createWood","alloc","parent","setParent","active","onDestroy","destroy","onWoodDead","free","generateWoods","isPlayer","treeNode","role","woods","renderWoodNum","getRandom","startPos","worldPosition","i","wood","addChild","radius","angle","Math","random","PI","distance","offsetX","cos","offsetZ","sin","targetPos","x","y","z","ctrlPos","setWorldPosition","bezierHelper","t","randomRotation","to","easing","onUpdate","onComplete","eulerAngles","push","collider","getComponent","enabled","rightbody","getWoods","getWood","woodList","splice","length","getBackpackBaseY","bp","base","getChildByName","getPosition","findTargetBackpack","backpacks","matched","empty","backpack","children","child","isValid","name","woodLs","player","backpack1","backpack2","backpack3","allwoods","delayCounter","targetBackpack","clone","duration","controller","woodCollider","woodRigidBody","startRot","endRot","delay","oneMinusT","baseY","nextIndex","localTarget","worldPos","getWorldPosition","worldRot","getWorldRotation","worldScale","getWorldScale","worldMat","fromRTS","worldTarget","transformMat4","control","max","pos","lerpedEuler","call","finalWorldPos","slice","forEach","idx","setPosition","scale"],"mappings":"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","sourcesContent":["import { _decorator, Collider, Component, find, instantiate, Mat4, Node, Pool, RigidBody, tween, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { EntityTypeEnum } from '../Enum/Index';\r\nimport { MathUtil } from '../Util/MathUtil';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('WoodManager')\r\nexport class WoodManager extends Component {\r\n    private _woodPool: Pool<Node> | null = null;\r\n    private _woodCount: number = 300;\r\n    private _woodMaxNum = 3;\r\n    private _woodMinNum = 3;\r\n    private _woodList = [];\r\n\r\n    start(): void {\r\n        DataManager.Instance.woodManager = this;\r\n    }\r\n\r\n    woodManagerInit() {\r\n        this._woodPool = new Pool(() => {\r\n            const woodPrefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.Wood);\r\n            return instantiate(woodPrefab)\r\n        }, this._woodCount, (node: Node) => {\r\n            node.removeFromParent();\r\n        })\r\n    }\r\n\r\n    createWood() {\r\n        if (!this._woodPool) return;\r\n\r\n        const node = this._woodPool.alloc();\r\n        if (node.parent == null) node.setParent(this.node);\r\n        node.active = true;\r\n\r\n        return node;\r\n    }\r\n\r\n    onDestroy() {\r\n        this._woodPool.destroy();\r\n    }\r\n\r\n    // 回收木桩\r\n    onWoodDead(node) {\r\n        node.active = false;\r\n        this._woodPool.free(node);\r\n    }\r\n\r\n    // 随机生成木桩\r\n    generateWoods(isPlayer, treeNode, role) {\r\n        const woods = find(\"THREE3DNODE/Woods\");\r\n        if (!woods) return;\r\n\r\n        const renderWoodNum = MathUtil.getRandom(this._woodMinNum, this._woodMaxNum);\r\n        const startPos = treeNode.worldPosition;\r\n\r\n        for (let i = 0; i < renderWoodNum; i++) {\r\n            const woodPrefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.Wood);\r\n            const wood = instantiate(woodPrefab);\r\n            wood[`__isReady`] = false;\r\n            woods.addChild(wood);\r\n\r\n            // === 随机目标点（相对世界坐标） ===\r\n            const radius = 2;\r\n            const angle = Math.random() * 2 * Math.PI;\r\n            const distance = Math.random() * radius;\r\n            const offsetX = Math.cos(angle) * distance;\r\n            const offsetZ = Math.sin(angle) * distance;\r\n            const targetPos = new Vec3(startPos.x + offsetX, startPos.y + 1.5, startPos.z + offsetZ);\r\n\r\n            // === 控制点（中间高度 +1~2） ===\r\n            const ctrlPos = new Vec3(\r\n                startPos.x + offsetX * 0.5,\r\n                startPos.y + 2 + Math.random(), // 提升 Y 值形成抛物\r\n                startPos.z + offsetZ * 0.5\r\n            );\r\n\r\n            wood.setWorldPosition(startPos); // 确保以世界坐标为准\r\n\r\n            // === 贝塞尔动画 ===\r\n            const bezierHelper = { t: 0 };\r\n            const randomRotation = new Vec3(\r\n                Math.random() * 360, // X轴旋转（可选）\r\n                Math.random() * 360, // Y轴旋转（最常见）\r\n                Math.random() * 360  // Z轴旋转（可选）\r\n            );\r\n\r\n            tween(bezierHelper)\r\n                .to(0.35, { t: 1 }, {\r\n                    easing: 'quadOut',\r\n                    onUpdate: () => {\r\n                        const t = bezierHelper.t;\r\n                        const x = (1 - t) * (1 - t) * startPos.x + 2 * (1 - t) * t * ctrlPos.x + t * t * targetPos.x;\r\n                        const y = (1 - t) * (1 - t) * startPos.y + 2 * (1 - t) * t * ctrlPos.y + t * t * targetPos.y;\r\n                        const z = (1 - t) * (1 - t) * startPos.z + 2 * (1 - t) * t * ctrlPos.z + t * t * targetPos.z;\r\n\r\n                        wood.setWorldPosition(new Vec3(x, y, z));\r\n                    },\r\n                    onComplete: () => {\r\n                        wood.eulerAngles = randomRotation;\r\n                        wood[`__isReady`] = true;\r\n\r\n                        if (isPlayer) {\r\n                            this._woodList.push(wood);\r\n                        } else {\r\n                            const collider = wood.getComponent(Collider)\r\n                            if (collider) {\r\n                                collider.enabled = false;\r\n                            }\r\n\r\n                            const rightbody = wood.getComponent(RigidBody);\r\n                            if (rightbody) {\r\n                                rightbody.enabled = false;\r\n                            }\r\n\r\n                            if (role) {\r\n                                this.getWoods(role, [wood]);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                })\r\n                .start();\r\n        }\r\n    }\r\n\r\n\r\n    public getWood() {\r\n        const woodList = this._woodList.splice(0, this._woodList.length);\r\n\r\n        return woodList;\r\n    }\r\n\r\n    public stackGap: number = 0.5;\r\n    public arcOffset: number = -2;\r\n\r\n    /**\r\n       * 从背包子节点里寻找“Base”节点作为底部锚点；没有则返回 0\r\n       */\r\n    private getBackpackBaseY(bp: Node): number {\r\n        const base = bp.getChildByName('Base');\r\n        return base ? base.getPosition().y : 0;\r\n    }\r\n\r\n    /**\r\n     * 目标背包选择规则：\r\n     * 1) 优先已有同名木头的背包；\r\n     * 2) 否则优先空背包；\r\n     * 3) 否则回退第一个背包。\r\n     */\r\n    private findTargetBackpack(wood: Node, backpacks: (Node | null)[]): Node | null {\r\n        let matched: Node | null = null;\r\n        let empty: Node | null = null;\r\n\r\n        for (const backpack of backpacks) {\r\n            if (!backpack) continue;\r\n\r\n            const children = backpack.children;\r\n            if (children.length === 0 && !empty) {\r\n                empty = backpack;\r\n            } else {\r\n                for (const child of children) {\r\n                    if (!child || !child.isValid) continue;\r\n                    if (child.name === wood.name) {\r\n                        matched = backpack;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (matched) break;\r\n        }\r\n\r\n        return matched || empty || backpacks[0] || null;\r\n    }\r\n\r\n    /**\r\n     * 从最底部开始堆叠木头，并在落地后统一重排\r\n     */\r\n    public getWoods(role: Node, woodLs: Node[]) {\r\n        const player = role;\r\n\r\n        const backpack1 = player.getChildByName('Backpack1');\r\n        const backpack2 = player.getChildByName('Backpack2');\r\n        const backpack3 = player.getChildByName('Backpack3');\r\n        const backpacks = [backpack1, backpack2, backpack3];\r\n\r\n        const allwoods: Node[] = [...woodLs];\r\n        let delayCounter = 0;\r\n\r\n        for (let i = 0; i < allwoods.length; i++) {\r\n            const wood = allwoods[i];\r\n            if (!wood || !wood.isValid) continue;\r\n\r\n            const targetBackpack = this.findTargetBackpack(wood, backpacks);\r\n            if (!targetBackpack) continue;\r\n\r\n            // 起点（世界坐标）\r\n            const start = wood.worldPosition.clone();\r\n            const duration = 0.6;\r\n            const controller = { t: 0 };\r\n\r\n            // 暂时提升到较上层父节点，避免局部坐标干扰\r\n            wood.setParent(this.node.parent);\r\n            wood.setWorldPosition(start);\r\n\r\n            // 禁用物理，避免飞行中被撞动\r\n            const woodCollider = wood.getComponent(Collider);\r\n            if (woodCollider) woodCollider.enabled = false;\r\n\r\n            const woodRigidBody = wood.getComponent(RigidBody);\r\n            if (woodRigidBody) woodRigidBody.enabled = false;\r\n\r\n            // 旋转插值（例：飞行中转到 Z=90°）\r\n            const startRot = wood.eulerAngles.clone();\r\n            const endRot = new Vec3(0, 0, 90);\r\n\r\n            tween(controller)\r\n                .delay(delayCounter * 0.05)\r\n                .to(duration, { t: 1 }, {\r\n                    easing: 'quadOut',\r\n                    onUpdate: () => {\r\n                        const t = controller.t;\r\n                        const oneMinusT = 1 - t;\r\n\r\n                        // —— 从“底部 + 已有数量 * 间距”开始堆叠（底部优先）——\r\n                        const baseY = this.getBackpackBaseY(targetBackpack);\r\n                        const nextIndex = targetBackpack.children.length; // 本木头将要放置的层索引\r\n                        const localTarget = new Vec3(0, baseY + nextIndex * this.stackGap, 0);\r\n\r\n                        // 背包的世界变换\r\n                        const worldPos = targetBackpack.getWorldPosition();\r\n                        const worldRot = targetBackpack.getWorldRotation();\r\n                        const worldScale = targetBackpack.getWorldScale();\r\n                        const worldMat = new Mat4();\r\n                        Mat4.fromRTS(worldMat, worldRot, worldPos, worldScale);\r\n\r\n                        const worldTarget = Vec3.transformMat4(new Vec3(), localTarget, worldMat);\r\n\r\n                        // 抛物曲线的控制点\r\n                        const control = new Vec3(\r\n                            (start.x + worldTarget.x) / 2,\r\n                            Math.max(start.y, worldTarget.y) + this.arcOffset,\r\n                            (start.z + worldTarget.z) / 2\r\n                        );\r\n\r\n                        // 二次贝塞尔插值\r\n                        const pos = new Vec3(\r\n                            oneMinusT * oneMinusT * start.x + 2 * oneMinusT * t * control.x + t * t * worldTarget.x,\r\n                            oneMinusT * oneMinusT * start.y + 2 * oneMinusT * t * control.y + t * t * worldTarget.y,\r\n                            oneMinusT * oneMinusT * start.z + 2 * oneMinusT * t * control.z + t * t * worldTarget.z\r\n                        );\r\n\r\n                        wood.setWorldPosition(pos);\r\n\r\n                        // 旋转插值\r\n                        const lerpedEuler = new Vec3(\r\n                            startRot.x * oneMinusT + endRot.x * t,\r\n                            startRot.y * oneMinusT + endRot.y * t,\r\n                            startRot.z * oneMinusT + endRot.z * t\r\n                        );\r\n                        wood.eulerAngles = lerpedEuler;\r\n                    }\r\n                })\r\n                .call(() => {\r\n                    // 落地：先把世界坐标固定，再改父节点，最后回设世界坐标\r\n                    const finalWorldPos = wood.getWorldPosition().clone();\r\n                    wood.setParent(targetBackpack);\r\n                    wood.setWorldPosition(finalWorldPos);\r\n\r\n                    // === 从底部开始统一重新排列（严格对齐到 Base + 层间距） ===\r\n                    const baseY = this.getBackpackBaseY(targetBackpack);\r\n                    const children = targetBackpack.children.slice(); // 拷贝避免遍历时修改影响\r\n                    children.forEach((child, idx) => {\r\n                        if (!child || !child.isValid) return;\r\n                        child.setPosition(0, baseY + idx * this.stackGap, 0);\r\n                    });\r\n\r\n                    // 反馈缩放动画\r\n                    tween(wood)\r\n                        .to(0.15, { scale: new Vec3(1.2, 1.2, 1.2) }, { easing: 'quadOut' })\r\n                        .to(0.05, { scale: new Vec3(1, 1, 1) }, { easing: 'quadOut' })\r\n                        .start();\r\n\r\n                    // 如需恢复物理，可在此处按需开启：\r\n                    // if (woodCollider) woodCollider.enabled = true;\r\n                    // if (woodRigidBody) woodRigidBody.enabled = true;\r\n                })\r\n                .start();\r\n\r\n            delayCounter++;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}