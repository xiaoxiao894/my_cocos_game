{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0623_JHF_FaMuShengCun/assets/JavaScript/Actor/PartnerConManager.ts"],"names":["_decorator","Component","instantiate","Pool","EntityTypeEnum","DataManager","SoundManager","ccclass","property","PartnerConManager","PartnerPool","partnerCount","start","Instance","partnerConManager","partnerConManagerInit","monsterPrefab","prefabMap","get","Partner","node","removeFromParent","create","alloc","active","inst","playAudio","onDestroy","destroy","onProjectileDead","free","update","dt","children","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,I,OAAAA,I;;AAC1CC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;mCAGjBS,iB,WADZF,OAAO,CAAC,mBAAD,C,gBAAR,MACaE,iBADb,SACuCR,SADvC,CACiD;AAAA;AAAA;AAAA,eACrCS,WADqC,GACJ,IADI;AAAA,eAErCC,YAFqC,GAEtB,EAFsB;AAAA;;AAI7CC,QAAAA,KAAK,GAAG;AACJ;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,iBAArB,GAAyC,IAAzC;AACH;;AAEDC,QAAAA,qBAAqB,GAAG;AACpB,eAAKL,WAAL,GAAmB,IAAIP,IAAJ,CAAS,MAAM;AAC9B,kBAAMa,aAAa,GAAG;AAAA;AAAA,4CAAYH,QAAZ,CAAqBI,SAArB,CAA+BC,GAA/B,CAAmC;AAAA;AAAA,kDAAeC,OAAlD,CAAtB;AACA,mBAAOjB,WAAW,CAACc,aAAD,CAAlB;AACH,WAHkB,EAGhB,KAAKL,YAHW,EAGIS,IAAD,IAAgB;AAClCA,YAAAA,IAAI,CAACC,gBAAL;AACH,WALkB,CAAnB;AAMH;;AAEDC,QAAAA,MAAM,GAAG;AACL,cAAI,CAAC,KAAKZ,WAAV,EAAuB;AACvB,cAAIU,IAAI,GAAG,KAAKV,WAAL,CAAiBa,KAAjB,EAAX;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,IAAd;AACA;AAAA;AAAA,4CAAaC,IAAb,CAAkBC,SAAlB,CAA4B,WAA5B;AACA,iBAAON,IAAP;AACH;;AAEDO,QAAAA,SAAS,GAAG;AACR,eAAKjB,WAAL,CAAiBkB,OAAjB;AACH,SA3B4C,CA6B7C;;;AACAC,QAAAA,gBAAgB,CAACT,IAAD,EAAO;AACnBA,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKd,WAAL,CAAiBoB,IAAjB,CAAsBV,IAAtB;AACH,SAjC4C,CAmC7C;;;AACAW,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKZ,IAAL,CAAUa,QAAV,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC,OADpB,CAEf;AAEA;AACA;AACA;AAEA;AAGH;;AA/C4C,O","sourcesContent":["import { _decorator, Component, instantiate, Node, Pool } from 'cc';\r\nimport { EntityTypeEnum } from '../Enum/Index';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { SoundManager } from '../Common/SoundManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PartnerConManager')\r\nexport class PartnerConManager extends Component {\r\n    private PartnerPool: Pool<Node> | null = null;\r\n    private partnerCount = 10;\r\n\r\n    start() {\r\n        DataManager.Instance.partnerConManager = this;\r\n    }\r\n\r\n    partnerConManagerInit() {\r\n        this.PartnerPool = new Pool(() => {\r\n            const monsterPrefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.Partner);\r\n            return instantiate(monsterPrefab!);\r\n        }, this.partnerCount, (node: Node) => {\r\n            node.removeFromParent();\r\n        })\r\n    }\r\n\r\n    create() {\r\n        if (!this.PartnerPool) return;\r\n        let node = this.PartnerPool.alloc();\r\n        node.active = true;\r\n        SoundManager.inst.playAudio(\"YX_huoban\");\r\n        return node;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.PartnerPool.destroy();\r\n    }\r\n\r\n    // 回收金币\r\n    onProjectileDead(node) {\r\n        node.active = false;\r\n        this.PartnerPool.free(node);\r\n    }\r\n\r\n    // 自动寻怪\r\n    update(dt: number) {\r\n        if (this.node.children.length < 0) return;\r\n        //\r\n\r\n        // 攻击到的怪\r\n        // const monsters = DataManager.Instance.monsterConMananger.getAttackTargets(this.node, 10, 360);\r\n        // const hasMonsters = monsters && monsters.length > 0;\r\n\r\n        // if (!hasMonsters) return;\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}