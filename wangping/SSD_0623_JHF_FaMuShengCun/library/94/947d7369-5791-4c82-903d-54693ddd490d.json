{
  "__type__": "cc.EffectAsset",
  "_name": "../Res/Fbx/materials/dissolve/dissolveEffect",
  "_objFlags": 0,
  "__editorExtras__": {},
  "_native": "",
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true,
                "blendSrc": 2,
                "blendDst": 4,
                "blendSrcAlpha": 2,
                "blendDstAlpha": 4
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "program": "../Res/Fbx/materials/dissolve/dissolveEffect|vs|fs",
          "depthStencilState": {
            "depthTest": true,
            "depthWrite": true
          },
          "properties": {
            "mainTexture": {
              "value": "white",
              "type": 28
            },
            "mainColor": {
              "value": [
                1,
                1,
                1,
                1
              ],
              "linear": true,
              "editor": {
                "type": "color"
              },
              "displayName": "MainColor",
              "type": 16
            },
            "dissolveNoise": {
              "value": "white",
              "macro": "USE_DISSOLVE",
              "type": 28
            },
            "uvNoise": {
              "value": "white",
              "macro": "USE_UV_DISTORT",
              "type": 28
            },
            "timeScale": {
              "value": [
                1
              ],
              "editor": {
                "slide": true,
                "range": [
                  0,
                  5
                ],
                "step": 0.1
              },
              "type": 13
            },
            "dissolveThreshold": {
              "value": [
                0.5
              ],
              "editor": {
                "slide": true,
                "range": [
                  0,
                  1
                ],
                "step": 0.1
              },
              "macro": "USE_DISSOLVE",
              "type": 13
            },
            "edgeWidth": {
              "value": [
                0.05
              ],
              "editor": {
                "slide": true,
                "range": [
                  0,
                  1
                ],
                "step": 0.01
              },
              "macro": "USE_DISSOLVE_EDGE",
              "type": 13
            },
            "edgeColor": {
              "value": [
                1,
                0.5,
                0,
                1
              ],
              "linear": true,
              "editor": {
                "type": "color"
              },
              "macro": "USE_DISSOLVE_EDGE",
              "type": 16
            },
            "uvFlowU": {
              "value": [
                0.1
              ],
              "editor": {
                "slide": true,
                "range": [
                  -2,
                  2
                ],
                "step": 0.1
              },
              "macro": "USE_UV_FLOW",
              "type": 13
            },
            "uvFlowV": {
              "value": [
                0
              ],
              "editor": {
                "slide": true,
                "range": [
                  -2,
                  2
                ],
                "step": 0.1
              },
              "macro": "USE_UV_FLOW",
              "type": 13
            },
            "uvDistortIntensity": {
              "value": [
                0.05
              ],
              "editor": {
                "slide": true,
                "range": [
                  0,
                  0.5
                ],
                "step": 0.01
              },
              "macro": "USE_UV_DISTORT",
              "type": 13
            },
            "mainTextureTilingOffset": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "editor": {
                "type": "vec4",
                "step": 0.01
              },
              "displayName": "Main Tex Tiling Offset",
              "type": 16
            },
            "dissolveNoiseTilingOffset": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "editor": {
                "type": "vec4",
                "step": 0.01
              },
              "displayName": "Dissolve Noise Tiling Offset",
              "type": 16
            },
            "uvNoiseTilingOffset": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "editor": {
                "type": "vec4",
                "step": 0.01
              },
              "displayName": "UV Noise Tiling Offset",
              "type": 16
            }
          }
        }
      ]
    }
  ],
  "shaders": [
    {
      "blocks": [
        {
          "name": "Material",
          "members": [
            {
              "name": "mainColor",
              "type": 16,
              "count": 1
            },
            {
              "name": "edgeColor",
              "type": 16,
              "count": 1
            },
            {
              "name": "mainTextureTilingOffset",
              "type": 16,
              "count": 1
            },
            {
              "name": "dissolveNoiseTilingOffset",
              "type": 16,
              "count": 1
            },
            {
              "name": "uvNoiseTilingOffset",
              "type": 16,
              "count": 1
            },
            {
              "name": "timeScale",
              "type": 13,
              "count": 1
            },
            {
              "name": "dissolveThreshold",
              "type": 13,
              "count": 1
            },
            {
              "name": "edgeWidth",
              "type": 13,
              "count": 1
            },
            {
              "name": "uvFlowU",
              "type": 13,
              "count": 1
            },
            {
              "name": "uvFlowV",
              "type": 13,
              "count": 1
            },
            {
              "name": "uvDistortIntensity",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "stageFlags": 17,
          "binding": 0
        }
      ],
      "samplerTextures": [
        {
          "name": "mainTexture",
          "type": 28,
          "count": 1,
          "defines": [],
          "stageFlags": 16,
          "binding": 1
        },
        {
          "name": "dissolveNoise",
          "type": 28,
          "count": 1,
          "defines": [
            "USE_DISSOLVE"
          ],
          "stageFlags": 16,
          "binding": 2
        },
        {
          "name": "uvNoise",
          "type": 28,
          "count": 1,
          "defines": [
            "USE_UV_DISTORT"
          ],
          "stageFlags": 16,
          "binding": 3
        }
      ],
      "samplers": [],
      "textures": [],
      "buffers": [],
      "images": [],
      "subpassInputs": [],
      "attributes": [
        {
          "name": "a_position",
          "defines": [],
          "format": 44,
          "location": 0
        },
        {
          "name": "a_texCoord",
          "defines": [],
          "format": 21,
          "location": 1
        },
        {
          "name": "a_normal",
          "defines": [],
          "format": 32,
          "location": 2
        }
      ],
      "varyings": [
        {
          "name": "v_uv",
          "type": 14,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 0
        },
        {
          "name": "v_pos",
          "type": 16,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 1
        },
        {
          "name": "v_depth",
          "type": 13,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 2
        },
        {
          "name": "v_normal",
          "type": 15,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 3
        },
        {
          "name": "v_worldPos",
          "type": 16,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 4
        }
      ],
      "fragColors": [
        {
          "name": "o_color",
          "typename": "vec4",
          "type": 16,
          "count": 1,
          "defines": [],
          "stageFlags": 16,
          "location": 0
        }
      ],
      "descriptors": [
        {
          "rate": 0,
          "blocks": [
            {
              "tags": {
                "builtin": "local"
              },
              "name": "CCLocal",
              "members": [
                {
                  "name": "cc_matWorld",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matWorldIT",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_lightingMapUVParam",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_localShadowBias",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeData1",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeData2",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeBlendData1",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeBlendData2",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                }
              ],
              "defines": [],
              "stageFlags": 1
            }
          ],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 1,
          "blocks": [
            {
              "name": "Material",
              "members": [
                {
                  "name": "mainColor",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "edgeColor",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "mainTextureTilingOffset",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "dissolveNoiseTilingOffset",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "uvNoiseTilingOffset",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "timeScale",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "dissolveThreshold",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "edgeWidth",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "uvFlowU",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "uvFlowV",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "uvDistortIntensity",
                  "type": 13,
                  "count": 1
                }
              ],
              "defines": [],
              "stageFlags": 17,
              "binding": 0
            }
          ],
          "samplerTextures": [
            {
              "name": "mainTexture",
              "type": 28,
              "count": 1,
              "defines": [],
              "stageFlags": 16,
              "binding": 1
            },
            {
              "name": "dissolveNoise",
              "type": 28,
              "count": 1,
              "defines": [
                "USE_DISSOLVE"
              ],
              "stageFlags": 16,
              "binding": 2
            },
            {
              "name": "uvNoise",
              "type": 28,
              "count": 1,
              "defines": [
                "USE_UV_DISTORT"
              ],
              "stageFlags": 16,
              "binding": 3
            }
          ],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 2,
          "blocks": [],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 3,
          "blocks": [
            {
              "tags": {
                "builtin": "global"
              },
              "name": "CCGlobal",
              "members": [
                {
                  "name": "cc_time",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_screenSize",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_nativeSize",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_probeInfo",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_debug_view_mode",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                }
              ],
              "defines": [],
              "stageFlags": 17
            },
            {
              "tags": {
                "builtin": "global"
              },
              "name": "CCCamera",
              "members": [
                {
                  "name": "cc_matView",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matProj",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matProjInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewProj",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewProjInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_cameraPos",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_surfaceTransform",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_screenScale",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_exposure",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_mainLitDir",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_mainLitColor",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_ambientSky",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_ambientGround",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogColor",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogBase",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogAdd",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_nearFar",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_viewPort",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                }
              ],
              "defines": [],
              "stageFlags": 17
            }
          ],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        }
      ],
      "hash": 2530294553,
      "glsl4": {
        "vert": "\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n  highp vec4 cc_localShadowBias;\n  highp vec4 cc_reflectionProbeData1;\n  highp vec4 cc_reflectionProbeData2;\n  highp vec4 cc_reflectionProbeBlendData1;\n  highp vec4 cc_reflectionProbeBlendData2;\n};\nlayout(location = 0) in vec4 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec3 a_normal;\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out vec4 v_pos;\nlayout(location = 2) out float v_depth;\nlayout(location = 3) out vec3 v_normal;\nlayout(location = 4) out vec4 v_worldPos;\nlayout(set = 1, binding = 0) uniform Material {\n  vec4 mainColor;\n  vec4 edgeColor;\n  vec4 mainTextureTilingOffset;\n  vec4 dissolveNoiseTilingOffset;\n  vec4 uvNoiseTilingOffset;\n  float timeScale;\n  float dissolveThreshold;\n  float edgeWidth;\n  float uvFlowU;\n  float uvFlowV;\n  float uvDistortIntensity;\n};\nvoid main () {\n  v_worldPos = cc_matWorld * a_position;\n  v_uv = a_texCoord;\n  v_pos = cc_matProj * cc_matView * v_worldPos;\n  v_depth = v_pos.z / v_pos.w;\n  v_normal = mat3(cc_matWorld) * a_normal;\n  gl_Position = v_pos;\n}",
        "frag": "\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in vec4 v_pos;\nlayout(location = 2) in float v_depth;\nlayout(location = 3) in vec3 v_normal;\nlayout(location = 4) in vec4 v_worldPos;\nlayout(location = 0) out vec4 o_color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\n#if USE_DISSOLVE\nlayout(set = 1, binding = 2) uniform sampler2D dissolveNoise;\n#endif\n#if USE_UV_DISTORT\nlayout(set = 1, binding = 3) uniform sampler2D uvNoise;\n#endif\nlayout(set = 1, binding = 0) uniform Material {\n  vec4 mainColor;\n  vec4 edgeColor;\n  vec4 mainTextureTilingOffset;\n  vec4 dissolveNoiseTilingOffset;\n  vec4 uvNoiseTilingOffset;\n  float timeScale;\n  float dissolveThreshold;\n  float edgeWidth;\n  float uvFlowU;\n  float uvFlowV;\n  float uvDistortIntensity;\n};\nvoid main () {\n  float time = cc_time.x * timeScale;\n  vec2 mainUV = v_uv * mainTextureTilingOffset.xy + mainTextureTilingOffset.zw;\n  vec2 dissolveUV = v_uv * dissolveNoiseTilingOffset.xy + dissolveNoiseTilingOffset.zw;\n  vec2 noiseUV = v_uv * uvNoiseTilingOffset.xy + uvNoiseTilingOffset.zw;\n  vec2 uv = mainUV;\n  #if USE_UV_FLOW\n  uv += vec2(time * uvFlowU, time * uvFlowV);\n  #endif\n  #if USE_UV_DISTORT\n  vec2 noise = texture(uvNoise, noiseUV * 3.0 + vec2(time * 0.5, 0.0)).rg - 0.5;\n  uv += noise * uvDistortIntensity;\n  #endif\n  vec4 baseColor = texture(mainTexture, uv);\n  baseColor.rgb *= mainColor.rgb;\n  baseColor.a *= mainColor.a;\n  #if USE_DISSOLVE\n  float noiseVal = texture(dissolveNoise, dissolveUV).r;\n  float dissolve = noiseVal - dissolveThreshold;\n  #if USE_DISSOLVE_EDGE\n  float edge = smoothstep(0.0, edgeWidth, dissolve);\n  baseColor = mix(edgeColor, baseColor, edge);\n  #endif\n  baseColor.a *= step(0.0, dissolve);\n  if (baseColor.a < 0.01) discard;\n  #endif\n  o_color = baseColor;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n  highp vec4 cc_localShadowBias;\n  highp vec4 cc_reflectionProbeData1;\n  highp vec4 cc_reflectionProbeData2;\n  highp vec4 cc_reflectionProbeBlendData1;\n  highp vec4 cc_reflectionProbeBlendData2;\n};\nin vec4 a_position;\nin vec2 a_texCoord;\nin vec3 a_normal;\nout vec2 v_uv;\nout vec4 v_pos;\nout float v_depth;\nout vec3 v_normal;\nout vec4 v_worldPos;\nlayout(std140) uniform Material {\n  vec4 mainColor;\n  vec4 edgeColor;\n  vec4 mainTextureTilingOffset;\n  vec4 dissolveNoiseTilingOffset;\n  vec4 uvNoiseTilingOffset;\n  float timeScale;\n  float dissolveThreshold;\n  float edgeWidth;\n  float uvFlowU;\n  float uvFlowV;\n  float uvDistortIntensity;\n};\nvoid main () {\n  v_worldPos = cc_matWorld * a_position;\n  v_uv = a_texCoord;\n  v_pos = cc_matProj * cc_matView * v_worldPos;\n  v_depth = v_pos.z / v_pos.w;\n  v_normal = mat3(cc_matWorld) * a_normal;\n  gl_Position = v_pos;\n}",
        "frag": "\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nin vec4 v_pos;\nin float v_depth;\nin vec3 v_normal;\nin vec4 v_worldPos;\nlayout(location = 0) out vec4 o_color;\nuniform sampler2D mainTexture;\n#if USE_DISSOLVE\nuniform sampler2D dissolveNoise;\n#endif\n#if USE_UV_DISTORT\nuniform sampler2D uvNoise;\n#endif\nlayout(std140) uniform Material {\n  vec4 mainColor;\n  vec4 edgeColor;\n  vec4 mainTextureTilingOffset;\n  vec4 dissolveNoiseTilingOffset;\n  vec4 uvNoiseTilingOffset;\n  float timeScale;\n  float dissolveThreshold;\n  float edgeWidth;\n  float uvFlowU;\n  float uvFlowV;\n  float uvDistortIntensity;\n};\nvoid main () {\n  float time = cc_time.x * timeScale;\n  vec2 mainUV = v_uv * mainTextureTilingOffset.xy + mainTextureTilingOffset.zw;\n  vec2 dissolveUV = v_uv * dissolveNoiseTilingOffset.xy + dissolveNoiseTilingOffset.zw;\n  vec2 noiseUV = v_uv * uvNoiseTilingOffset.xy + uvNoiseTilingOffset.zw;\n  vec2 uv = mainUV;\n  #if USE_UV_FLOW\n  uv += vec2(time * uvFlowU, time * uvFlowV);\n  #endif\n  #if USE_UV_DISTORT\n  vec2 noise = texture(uvNoise, noiseUV * 3.0 + vec2(time * 0.5, 0.0)).rg - 0.5;\n  uv += noise * uvDistortIntensity;\n  #endif\n  vec4 baseColor = texture(mainTexture, uv);\n  baseColor.rgb *= mainColor.rgb;\n  baseColor.a *= mainColor.a;\n  #if USE_DISSOLVE\n  float noiseVal = texture(dissolveNoise, dissolveUV).r;\n  float dissolve = noiseVal - dissolveThreshold;\n  #if USE_DISSOLVE_EDGE\n  float edge = smoothstep(0.0, edgeWidth, dissolve);\n  baseColor = mix(edgeColor, baseColor, edge);\n  #endif\n  baseColor.a *= step(0.0, dissolve);\n  if (baseColor.a < 0.01) discard;\n  #endif\n  o_color = baseColor;\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matWorld;\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 v_uv;\nvarying vec4 v_pos;\nvarying float v_depth;\nvarying vec3 v_normal;\nvarying vec4 v_worldPos;\nvoid main () {\n  v_worldPos = cc_matWorld * a_position;\n  v_uv = a_texCoord;\n  v_pos = cc_matProj * cc_matView * v_worldPos;\n  v_depth = v_pos.z / v_pos.w;\n  v_normal = mat3(cc_matWorld) * a_normal;\n  gl_Position = v_pos;\n}",
        "frag": "\nprecision highp float;\nuniform highp vec4 cc_time;\nvarying vec2 v_uv;\nvarying vec4 v_pos;\nvarying float v_depth;\nvarying vec3 v_normal;\nvarying vec4 v_worldPos;\nuniform sampler2D mainTexture;\n#if USE_DISSOLVE\nuniform sampler2D dissolveNoise;\n#endif\n#if USE_UV_DISTORT\nuniform sampler2D uvNoise;\n#endif\n   uniform vec4 mainColor;\n   uniform vec4 edgeColor;\n   uniform vec4 mainTextureTilingOffset;\n   uniform vec4 dissolveNoiseTilingOffset;\n   uniform vec4 uvNoiseTilingOffset;\n   uniform float timeScale;\n   uniform float dissolveThreshold;\n   uniform float edgeWidth;\n   uniform float uvFlowU;\n   uniform float uvFlowV;\n   uniform float uvDistortIntensity;\nvoid main () {\n  float time = cc_time.x * timeScale;\n  vec2 mainUV = v_uv * mainTextureTilingOffset.xy + mainTextureTilingOffset.zw;\n  vec2 dissolveUV = v_uv * dissolveNoiseTilingOffset.xy + dissolveNoiseTilingOffset.zw;\n  vec2 noiseUV = v_uv * uvNoiseTilingOffset.xy + uvNoiseTilingOffset.zw;\n  vec2 uv = mainUV;\n  #if USE_UV_FLOW\n  uv += vec2(time * uvFlowU, time * uvFlowV);\n  #endif\n  #if USE_UV_DISTORT\n  vec2 noise = texture2D(uvNoise, noiseUV * 3.0 + vec2(time * 0.5, 0.0)).rg - 0.5;\n  uv += noise * uvDistortIntensity;\n  #endif\n  vec4 baseColor = texture2D(mainTexture, uv);\n  baseColor.rgb *= mainColor.rgb;\n  baseColor.a *= mainColor.a;\n  #if USE_DISSOLVE\n  float noiseVal = texture2D(dissolveNoise, dissolveUV).r;\n  float dissolve = noiseVal - dissolveThreshold;\n  #if USE_DISSOLVE_EDGE\n  float edge = smoothstep(0.0, edgeWidth, dissolve);\n  baseColor = mix(edgeColor, baseColor, edge);\n  #endif\n  baseColor.a *= step(0.0, dissolve);\n  if (baseColor.a < 0.01) discard;\n  #endif\n  gl_FragColor = baseColor;\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            },
            {
              "name": "CCCamera",
              "defines": []
            }
          ],
          "samplerTextures": [],
          "buffers": [],
          "images": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplerTextures": [],
          "buffers": [],
          "images": []
        },
        "statistics": {
          "CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS": 67,
          "CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS": 53
        }
      },
      "defines": [
        {
          "name": "USE_DISSOLVE",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_UV_DISTORT",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_UV_FLOW",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_DISSOLVE_EDGE",
          "type": "boolean",
          "defines": [
            "USE_DISSOLVE"
          ]
        }
      ],
      "name": "../Res/Fbx/materials/dissolve/dissolveEffect|vs|fs"
    }
  ],
  "combinations": [],
  "hideInEditor": false
}