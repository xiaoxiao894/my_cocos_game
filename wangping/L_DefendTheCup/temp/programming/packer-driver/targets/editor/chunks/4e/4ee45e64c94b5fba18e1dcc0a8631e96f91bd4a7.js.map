{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/Res/DissolveEffect/scripts/DissolveEffect.ts"],"names":["_decorator","Component","Material","MeshRenderer","SkinnedMeshRenderer","ccclass","property","DissolveEffect","_matInstances","_startTime","_playTime","_resetTimes","start","init","_createMaterialInstances","renderer","getComponent","console","error","mats","length","originalMaterials","materials","i","originalMat","matInstance","setMaterial","getMaterialInstance","push","onEnable","play","timeS","Date","now","delayTime","setProperty","onPlayTest","event","customData","update","deltaTime","timeElapsed","factor","reset"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Material, MeshRenderer, EventTouch, SkinnedMeshRenderer } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('DissolveEffect')\r\nexport class DissolveEffect extends Component {\r\n\r\n    @property\r\n    delayTime = 0;\r\n\r\n    @property([Material])\r\n    mats: Material[] = [];\r\n\r\n    _matInstances: Material[] = [];\r\n    _startTime: number = 0;\r\n    _playTime: number = 0;\r\n\r\n    _resetTimes:number = 0;\r\n\r\n    start() {\r\n        \r\n        //this._createMaterialInstances();\r\n    }\r\n\r\n    //\r\n    public init(){\r\n        this._matInstances = [];\r\n        this._createMaterialInstances();\r\n    }\r\n\r\n    // 创建材质实例，确保每个模型使用独立的材质\r\n    private _createMaterialInstances() {\r\n        // 优先检查 SkinnedMeshRenderer，其次检查 MeshRenderer\r\n        let renderer = this.getComponent(SkinnedMeshRenderer) || this.getComponent(MeshRenderer);\r\n\r\n        if (!renderer) {\r\n            console.error(\"DissolveEffect: 找不到 SkinnedMeshRenderer 或 MeshRenderer 组件\");\r\n            return;\r\n        }\r\n\r\n        if (this.mats.length === 0) {\r\n            console.error(\"DissolveEffect: 没有指定材质\");\r\n            return;\r\n        }\r\n\r\n        // 保存原始材质索引\r\n        const originalMaterials = renderer.materials;\r\n\r\n        // 创建材质实例\r\n        for (let i = 0; i < this.mats.length; i++) {\r\n            const originalMat = this.mats[i];\r\n            if (originalMat) {\r\n                let matInstance: Material = null;\r\n\r\n\r\n                // 尝试使用 setMaterial() 方法创建实例（通用方法）\r\n\r\n                // 临时应用材质以创建实例\r\n                if (i < renderer.materials.length) {\r\n                    renderer.setMaterial(originalMat, i);\r\n\r\n                    // 获取实例化后的材质（兼容新旧 API）\r\n                    if (typeof renderer.getMaterialInstance === 'function') {\r\n                        // 使用新 API (推荐)\r\n                        matInstance = renderer.getMaterialInstance(i);\r\n                    } \r\n                }\r\n\r\n\r\n                if (matInstance) {\r\n                    this._matInstances.push(matInstance);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 恢复原始材质，避免影响场景\r\n        renderer.materials = originalMaterials;\r\n\r\n        // 应用新的材质实例\r\n        if (this._matInstances.length > 0) {\r\n            renderer.materials = this._matInstances;\r\n            //console.log(`DissolveEffect: 成功为 ${this.node.name} 创建了 ${this._matInstances.length} 个材质实例`);\r\n        } else {\r\n            console.error(\"DissolveEffect: 未能创建任何材质实例\");\r\n        }\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        //this._resetTimes = 0;\r\n    }\r\n\r\n    play(timeS: number) {\r\n        this._playTime = timeS;\r\n        this._startTime = Date.now() + this.delayTime * 1000;\r\n        for (let i = 0; i < this._matInstances.length; ++i) {\r\n            this._matInstances[i].setProperty('dissolveThreshold', 0.0);\r\n        }\r\n    }\r\n\r\n    onPlayTest(event: EventTouch, customData) {\r\n        this.play(customData - 0);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._startTime && this._playTime && this._startTime < Date.now()) {\r\n            let timeElapsed = (Date.now() - this._startTime) / 1000.0;\r\n            let factor = timeElapsed / this._playTime;\r\n            if (factor >= 1.0) {\r\n                factor = 1.0;\r\n                this._startTime = 0;\r\n                this._playTime = 0;\r\n            }\r\n\r\n            for (let i = 0; i < this._matInstances.length; ++i) {\r\n                this._matInstances[i].setProperty('dissolveThreshold', factor);\r\n            }\r\n        }\r\n        // else if(this._resetTimes<2){\r\n        //     this._resetTimes++;\r\n        //     for (let i = 0; i < this._matInstances.length; ++i) {\r\n        //         this._matInstances[i].setProperty('dissolveThreshold', 0.01);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    public reset(){\r\n        this._startTime = 0;\r\n        this._playTime = 0;\r\n    }\r\n}\r\n"]}