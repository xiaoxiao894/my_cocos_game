{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/JavaScript/Actor/MinionManager.ts"],"names":["_decorator","Component","instantiate","Vec3","tween","SkeletalAnimation","Prefab","Pool","director","Animation","Vec2","Quat","DataManager","EntityTypeEnum","EventNames","MinionStateEnum","Simulator","EventManager","Util","MonsterItem","ccclass","property","MinionManager","_currentState","_attackRadius","_moveSpeed","_targetMonster","_attackCooldown","_attackTimer","prefabPool","_seachTime","_seachInterval","_noMoveSeachTime","_noMoveSearchInterval","isLookingForMonsters","isMoveMinion","_agentHandleId","start","onEnable","inst","on","ArmyMoveByRVO","moveByRvo","onDisable","off","init","poolCount","prefab","Instance","prefabMap","get","MinionWeapons","node","removeFromParent","mass","agentId","instance","addAgent","v3t2","worldPosition","clone","agentObj","getAgentByAid","neighborDist","onDestroy","destroy","create","alloc","parent","getScene","addChild","active","onProjectileDead","free","changState","state","ani","getComponent","Idle","idleClip","skeletalAnimation","clips","find","clip","name","Walk","defaultClip","getState","time","sample","pause","play","stop","crossFade","update","deltaTime","chaseTarget","dt","monsterParent","monsterManager","children","length","selfPos","isValid","nearest","minDistSqr","Infinity","monster","monsterItem","isDead","monsterPos","getWorldPosition","distSqr","squaredDistance","MinionConManager","hasTarget","removeMonsterTarget","addMonsterTarget","targetPos","direction","subtract","y","distance","agentAid","agentHandleId","attackTarget","scheduleOnce","setAgentPrefVelocity","ZERO","x","z","smoothLookAt","rotateSpeed","dir","lengthSqr","normalize","angleRad","Math","atan2","targetY","PI","currentY","eulerAngles","deltaY","smoothFactor","exp","lerpedY","setRotationFromEuler","target","Attack","bullet","startPos","forward","bulletStart","add","multiplyScalar","setWorldPosition","lookAt","UP","fixQuat","fromAxisAngle","currentQuat","getRotation","finalQuat","multiply","setRotation","to","easing","call","killMonsters","skillExplosion","hitExplosionProfab","anim","once","EventType","FINISHED","e","console","warn","error","value","p","getAgentPosition","currentPos","dist","lerp"],"mappings":"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","sourcesContent":["import {\r\n    _decorator,\r\n    Component,\r\n    instantiate,\r\n    Node,\r\n    Vec3,\r\n    tween,\r\n    SkeletalAnimation,\r\n    find,\r\n    Prefab,\r\n    Pool,\r\n    director,\r\n    Animation,\r\n    SkeletalAnimationState,\r\n    Vec2,\r\n    Quat,\r\n    Mat4\r\n} from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { EntityTypeEnum, EventNames } from '../Enum/Index';\r\nimport { MinionStateEnum } from './StateDefine';\r\nimport { Simulator } from '../RVO/Simulator';\r\nimport { EventManager } from '../Global/EventManager';\r\nimport Util from '../Common/Util';\r\nimport { MonsterItem } from '../Monster/MonsterItem';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MinionManager')\r\nexport class MinionManager extends Component {\r\n    @property(SkeletalAnimation)\r\n    skeletalAnimation: SkeletalAnimation | null = null;\r\n\r\n    @property(Prefab)\r\n    hitExplosionProfab: Prefab = null;\r\n\r\n    private _currentState: MinionStateEnum | string = null;\r\n    private _attackRadius = 15;\r\n    private _moveSpeed = 3;\r\n    private _targetMonster: Node | null = null;\r\n    private _attackCooldown = 3;\r\n    private _attackTimer = 0;\r\n    private prefabPool = null;\r\n\r\n    //移动小兵\r\n    private _seachTime: number = 0;\r\n    private _seachInterval: number = 10;\r\n\r\n    //不移动的小兵\r\n    private _noMoveSeachTime: number = 0;\r\n    private _noMoveSearchInterval: number = 1;\r\n\r\n    // 是否是可移动兵人         // 默认是可移动的兵人\r\n    isLookingForMonsters = false;\r\n\r\n    // 是否是可移动的兵人\r\n    isMoveMinion = true;\r\n    start() {\r\n\r\n    }\r\n\r\n\r\n    protected onEnable(): void {\r\n        EventManager.inst.on(EventNames.ArmyMoveByRVO, this.moveByRvo, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventManager.inst.off(EventNames.ArmyMoveByRVO, this.moveByRvo, this);\r\n    }\r\n\r\n    init() {\r\n        const poolCount = 5;\r\n        this.prefabPool = new Pool(() => {\r\n            const prefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.MinionWeapons);\r\n            return instantiate(prefab!);\r\n        }, poolCount, (node: Node) => {\r\n            node.removeFromParent();\r\n        });\r\n\r\n        // 设置 RVO\r\n        const mass = 1;\r\n        const agentId = Simulator.instance.addAgent(\r\n            Util.v3t2(this.node.worldPosition.clone()),\r\n            1,\r\n            3,\r\n            null,\r\n            mass\r\n        );\r\n\r\n        const agentObj = Simulator.instance.getAgentByAid(agentId);\r\n        agentObj.neighborDist = 1;\r\n\r\n        this._agentHandleId = agentId;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.prefabPool.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!this.prefabPool) return null;\r\n        let node = this.prefabPool.alloc();\r\n        if (node.parent == null) {\r\n            director.getScene().addChild(node);\r\n        }\r\n        node.active = true;\r\n        return node;\r\n    }\r\n\r\n    onProjectileDead(node: Node) {\r\n        node.active = false;\r\n        this.prefabPool.free(node);\r\n    }\r\n\r\n    changState(state: MinionStateEnum | string) {\r\n        if (state == this._currentState) return;\r\n        const ani = this.node.parent.getComponent(Animation);\r\n\r\n        if (state == MinionStateEnum.Idle) {\r\n            const idleClip = this.skeletalAnimation.clips.find(clip => clip.name === MinionStateEnum.Walk); // 替换为实际动画名\r\n            if (idleClip) {\r\n                this.skeletalAnimation.defaultClip = idleClip;\r\n                const state = this.skeletalAnimation.getState(idleClip.name);\r\n                if (state) {\r\n                    state.time = 0.23;       // 设置时间为第0秒\r\n                    state.sample();       // 强制应用当前帧的姿势\r\n                    state.pause();        // 停止播放\r\n                }\r\n            }\r\n            if (ani) {\r\n                ani.play(\"MinionidleA-001\");\r\n            }\r\n        } else {\r\n            if (ani) {\r\n                ani.stop();\r\n            }\r\n            this.skeletalAnimation?.crossFade(state as string, 0.1);\r\n        }\r\n        this._currentState = state;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this.isLookingForMonsters) {\r\n            this._attackTimer -= deltaTime;\r\n            this.chaseTarget(deltaTime);\r\n        }\r\n    }\r\n\r\n    // 生成武器的 0.6\r\n    chaseTarget(dt: number) {\r\n        this._seachTime += dt;\r\n        this._noMoveSeachTime += dt;\r\n        const monsterParent = DataManager.Instance.monsterManager.monsterParent;\r\n        if (!monsterParent || monsterParent.children.length === 0) return;\r\n\r\n        this._attackTimer -= dt; //  关键：递减攻击冷却\r\n\r\n        const selfPos = this.node.worldPosition.clone();\r\n\r\n        if ((!this.isMoveMinion && this._noMoveSeachTime > this._noMoveSearchInterval) || !this._targetMonster || !this._targetMonster.isValid || this._seachTime >= this._seachInterval) {\r\n            this._noMoveSeachTime = 0;\r\n            this._seachTime = 0;\r\n            // 实时寻找最近怪\r\n            let nearest: Node | null = null;\r\n            let minDistSqr = Infinity;\r\n\r\n            for (const monster of monsterParent.children) {\r\n                if (!monster || !monster.isValid) continue;\r\n                let monsterItem = monster.getComponent(MonsterItem);\r\n                if (!monsterItem || monsterItem.isDead) {\r\n                    continue;\r\n                }\r\n\r\n                const monsterPos = monster.getWorldPosition();\r\n                const distSqr = Vec3.squaredDistance(selfPos, monsterPos);\r\n                if (distSqr < minDistSqr && !DataManager.Instance.MinionConManager.hasTarget(monster)) {\r\n                    minDistSqr = distSqr;\r\n                    nearest = monster;\r\n                }\r\n            }\r\n            if (this._targetMonster !== nearest) {\r\n                DataManager.Instance.MinionConManager.removeMonsterTarget(this._targetMonster);\r\n                DataManager.Instance.MinionConManager.addMonsterTarget(nearest);\r\n            }\r\n            this._targetMonster = nearest;\r\n        }\r\n\r\n        if (!this._targetMonster || !this._targetMonster.isValid) return;\r\n\r\n        const targetPos = this._targetMonster.getWorldPosition();\r\n        const direction = targetPos.clone().subtract(selfPos);\r\n        direction.y = 0;\r\n        const distance = direction.length();\r\n\r\n\r\n        let agentAid = this.agentHandleId;\r\n\r\n        if (distance < this._attackRadius) {\r\n            if (this._attackTimer <= 0) {\r\n                this.attackTarget();\r\n                // 停止攻击的动画\r\n                this.scheduleOnce(() => {\r\n                    this.skeletalAnimation?.stop()\r\n                    this.changState(MinionStateEnum.Idle);\r\n                }, .5)\r\n                this._attackTimer = this._attackCooldown;\r\n            }\r\n            Simulator.instance.setAgentPrefVelocity(agentAid, Vec2.ZERO);\r\n        } else {\r\n            if (this.isMoveMinion) {\r\n                Simulator.instance.setAgentPrefVelocity(agentAid, new Vec2(direction.x, direction.z));\r\n                this.changState(MinionStateEnum.Walk);\r\n            } else {\r\n                this.changState(MinionStateEnum.Idle);\r\n            }\r\n\r\n            //转向\r\n            this.smoothLookAt(targetPos, dt);\r\n        }\r\n    }\r\n\r\n    // 自动转向\r\n    smoothLookAt(targetPos: Vec3, dt: number, rotateSpeed: number = 10) {\r\n        const selfPos = this.node.worldPosition;\r\n        const dir = new Vec3();\r\n        Vec3.subtract(dir, targetPos, selfPos);\r\n        dir.y = 0;\r\n        if (dir.lengthSqr() < 0.001) return;\r\n\r\n        dir.normalize();\r\n        const angleRad = Math.atan2(dir.x, dir.z);\r\n        const targetY = angleRad * 180 / Math.PI;\r\n\r\n        const currentY = this.node.eulerAngles.y;\r\n\r\n        // 归一化差值到 [-180, 180]\r\n        let deltaY = targetY - currentY;\r\n        deltaY = ((deltaY + 180) % 360 + 360) % 360 - 180;\r\n\r\n        // 使用平滑插值（slerp-like），dt 越小越平滑\r\n        const smoothFactor = 1 - Math.exp(-rotateSpeed * dt);\r\n        const lerpedY = currentY + deltaY * smoothFactor;\r\n\r\n        this.node.setRotationFromEuler(0, lerpedY, 0);\r\n    }\r\n\r\n    // 攻击目标\r\n    // 攻击目标\r\n    attackTarget() {\r\n        if (!this._targetMonster || !this._targetMonster.isValid) return;\r\n\r\n        const monsterItem = this._targetMonster.getComponent(MonsterItem);\r\n        if (!monsterItem || monsterItem.isDead) return;\r\n\r\n        const target = this._targetMonster;\r\n        DataManager.Instance.MinionConManager.removeMonsterTarget(this._targetMonster);\r\n        this._targetMonster = null;\r\n\r\n        this.changState(MinionStateEnum.Attack);\r\n\r\n        // 面朝目标\r\n        this.smoothLookAt(target.getWorldPosition(), 1);\r\n\r\n        let bullet: Node;\r\n        try {\r\n            bullet = this.create();\r\n            if (!bullet) return;\r\n\r\n            // ✅ 获取发射起点（角色向后偏移 2 米 + 上抬 1.5 米）\r\n            const startPos = this.node.worldPosition.clone();\r\n            const forward = this.node.forward.clone().normalize();\r\n            const bulletStart = startPos.add(forward.multiplyScalar(-2)).add(new Vec3(0, 1.5, 0));\r\n            bullet.setWorldPosition(bulletStart);\r\n\r\n            const targetPos = target.getWorldPosition();\r\n\r\n            // 使用 lookAt 让子弹 -Z 轴 朝向目标\r\n            bullet.lookAt(targetPos, Vec3.UP);\r\n\r\n            const fixQuat = new Quat();\r\n            Quat.fromAxisAngle(fixQuat, Vec3.UP, 90 * Math.PI / 180); // 将 X+ 转成 Z+\r\n            const currentQuat = bullet.getRotation();\r\n            const finalQuat = new Quat();\r\n            Quat.multiply(finalQuat, currentQuat, fixQuat); // 原始朝向 * 补偿旋转\r\n            bullet.setRotation(finalQuat);\r\n\r\n            // 发射动画（从起点飞向目标）\r\n            tween(bullet)\r\n                .to(0.3, { worldPosition: targetPos }, { easing: 'quadInOut' })\r\n                .call(() => {\r\n                    try {\r\n                        this.onProjectileDead(bullet);\r\n                        DataManager.Instance.monsterManager.killMonsters([target]);\r\n\r\n                        const skillExplosion = instantiate(this.hitExplosionProfab);\r\n                        director.getScene().addChild(skillExplosion);\r\n                        skillExplosion.setWorldPosition(new Vec3(targetPos.x, targetPos.y + 1, targetPos.z));\r\n\r\n                        try {\r\n                            const anim = skillExplosion?.children[0]?.getComponent(Animation);\r\n                            if (anim) {\r\n                                anim.play(`TX_zidanA_hit`);\r\n                                anim.once(Animation.EventType.FINISHED, () => {\r\n                                    try {\r\n                                        skillExplosion.destroy();\r\n                                    } catch (e) {\r\n                                        console.warn(\"Skill explosion destroy failed:\", e);\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                this.scheduleOnce(() => {\r\n                                    try {\r\n                                        skillExplosion.destroy();\r\n                                    } catch (e) {\r\n                                        console.warn(\"Skill explosion delayed destroy failed:\", e);\r\n                                    }\r\n                                }, 1);\r\n                            }\r\n                        } catch (e) {\r\n                            console.error(\"Animation error:\", e);\r\n                            this.scheduleOnce(() => {\r\n                                try {\r\n                                    skillExplosion.destroy();\r\n                                } catch (e) {\r\n                                    console.warn(\"Fallback explosion destroy failed:\", e);\r\n                                }\r\n                            }, 1);\r\n                        }\r\n                    } catch (e) {\r\n                        console.error(\"Bullet hit logic error:\", e);\r\n                    }\r\n                })\r\n                .start();\r\n        } catch (e) {\r\n            console.error(\"AttackTarget failed:\", e);\r\n        }\r\n    }\r\n\r\n    //rov相关\r\n    private _agentHandleId: number = -1; //RVOid\r\n    public get agentHandleId(): number {\r\n        return this._agentHandleId;\r\n    }\r\n    public set agentHandleId(value: number) {\r\n        this._agentHandleId = value;\r\n    }\r\n\r\n    /**\r\n     * 在此之前 请确保Simulator run执行完毕\r\n     */\r\n    moveByRvo(dt) {\r\n        if (!this.isLookingForMonsters || !this.isMoveMinion) {\r\n            return;\r\n        }\r\n        const p = Simulator.instance.getAgentPosition(this.agentHandleId);\r\n        const targetPos = new Vec3(p.x, 0, p.y);\r\n        const currentPos = this.node.worldPosition.clone();\r\n\r\n        const dist = Vec3.distance(currentPos, targetPos);\r\n        if (dist > 0.01) {\r\n            const smoothFactor = 10;\r\n            Vec3.lerp(currentPos, currentPos, targetPos, dt * smoothFactor);\r\n            this.node.setWorldPosition(currentPos);\r\n        }\r\n\r\n    }\r\n\r\n}"]}