{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/JavaScript/Actor/GunTurretManager.ts"],"names":["_decorator","Component","director","instantiate","Pool","Prefab","Vec3","DataManager","Bullet","ccclass","property","GunTurretManager","prefabPool","isNormalAttacking","init","poolCount","projectile","node","removeFromParent","onDestroy","destroy","create","alloc","parent","getScene","addChild","active","onProjectileDead","free","update","dt","monsters","Instance","searchMonsters","getAttackTargets","length","partnerWorldPos","worldPosition","nearestMonster","getNearestMonster","fireAtTarget","scheduleOnce","target","bullet","newBulletPos","x","y","z","setWorldPosition","bulletComp","getComponent","speed","partnerPos","nearest","minDistance","Infinity","monster","isValid","monsterPos","distance"],"mappings":"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","sourcesContent":["import { _decorator, Component, director, instantiate, Node, Pool, Prefab, tween, Vec3 } from 'cc';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { Bullet } from './Bullet';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GunTurretManager')\r\nexport class GunTurretManager extends Component {\r\n    @property(Prefab)\r\n    projectile: Prefab | null = null;\r\n\r\n    prefabPool: Pool<Node> | null = null;\r\n\r\n    // 是否普通攻击\r\n    private isNormalAttacking = true;\r\n    init() {\r\n        const poolCount = 5;\r\n\r\n        this.prefabPool = new Pool(() => {\r\n            return instantiate(this.projectile!)\r\n        }, poolCount, (node: Node) => {\r\n            node.removeFromParent();\r\n        })\r\n    }\r\n\r\n    onDestroy() {\r\n        this.prefabPool.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!this.prefabPool) return;\r\n        let node = this.prefabPool.alloc();\r\n        if (node.parent == null) {\r\n            director.getScene().addChild(node);\r\n        }\r\n        node.active = true;\r\n        return node;\r\n    }\r\n\r\n    onProjectileDead(node) {\r\n        node.active = false;\r\n        this.prefabPool.free(node);\r\n    }\r\n\r\n    update(dt: number) {\r\n        const monsters = DataManager.Instance.searchMonsters.getAttackTargets(this.node, 50, 180);\r\n        if (!monsters.length) return;\r\n\r\n        const partnerWorldPos = this.node.worldPosition;\r\n\r\n        const nearestMonster = this.getNearestMonster(monsters, partnerWorldPos);\r\n\r\n        if (nearestMonster && this.isNormalAttacking) {\r\n            this.fireAtTarget(nearestMonster);\r\n            this.isNormalAttacking = false;\r\n\r\n            this.scheduleOnce(() => {\r\n                this.isNormalAttacking = true;\r\n            }, 3)\r\n        }\r\n    }\r\n\r\n    fireAtTarget(target: Node) {\r\n        const bullet = this.create();\r\n        if (!bullet) return;\r\n        const newBulletPos = new Vec3(this.node.worldPosition.x, this.node.worldPosition.y + 10, this.node.worldPosition.z);\r\n        bullet.setWorldPosition(newBulletPos);\r\n\r\n        const bulletComp = bullet.getComponent(Bullet);\r\n        if (bulletComp) {\r\n            bulletComp.target = target;\r\n            bulletComp.speed = 40;\r\n        }\r\n    }\r\n\r\n    // 获取离伙伴最近的怪物\r\n    getNearestMonster(monsters, partnerPos: Vec3) {\r\n        let nearest: Node | null = null;\r\n        let minDistance = Infinity;\r\n\r\n        for (let monster of monsters) {\r\n            if (!monster || !monster.isValid) continue;\r\n\r\n            const monsterPos = monster.worldPosition;\r\n            const distance = Vec3.distance(monsterPos, partnerPos);\r\n\r\n            if (distance < minDistance) {\r\n                minDistance = distance;\r\n                nearest = monster;\r\n            }\r\n        }\r\n\r\n        return nearest;\r\n    }\r\n}\r\n\r\n\r\n"]}