{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/JavaScript/Area/TweenMaterial.ts"],"names":["TweenMaterial","MeshRenderer","Vec4","assert","constructor","node","initialColor","renderer","material","pass","mainColorHandler","_mainColor","getComponent","getMaterialInstance","passes","getHandle","clone","setUniform","getUniform","mainColor","v"],"mappings":";;;8FAEaA,a;;;;;;;;;AAFYC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,I,OAAAA,I;AAAgBC,MAAAA,M,OAAAA,M;;;;;;;;;+BAE1CH,a,GAAN,MAAMA,aAAN,CAAoB;AAcvBI,QAAAA,WAAW,CAACC,IAAD,EAAaC,YAAb,EAAuC;AAAA,eAZ1CD,IAY0C,GAZ7B,IAY6B;AAAA,eAV1CE,QAU0C,GAVjB,IAUiB;AAAA,eAR1CC,QAQ0C;AAAA,eAN1CC,IAM0C,GANpB,IAMoB;AAAA,eAJ1CC,gBAI0C,GAJf,CAIe;AAAA,eAF1CC,UAE0C,GAFvB,IAEuB;AAE9C,eAAKN,IAAL,GAAYA,IAAZ;AAEA,eAAKE,QAAL,GAAgB,KAAKF,IAAL,CAAUO,YAAV,CAAuBX,YAAvB,CAAhB;AAEA,eAAKO,QAAL,GAAgB,KAAKD,QAAL,CAAcM,mBAAd,CAAkC,CAAlC,CAAhB;AAEA,eAAKJ,IAAL,GAAY,KAAKD,QAAL,CAAcM,MAAd,CAAqB,CAArB,CAAZ;AAEA,eAAKJ,gBAAL,GAAwB,KAAKD,IAAL,CAAUM,SAAV,CAAoB,WAApB,CAAxB;;AAEA,cAAIT,YAAJ,EAAkB;AAEd,iBAAKK,UAAL,GAAkBT,IAAI,CAACc,KAAL,CAAWV,YAAX,CAAlB;AAEA,iBAAKG,IAAL,CAAUQ,UAAV,CAAqB,KAAKP,gBAA1B,EAA4C,KAAKC,UAAjD;AAEH,WAND,MAMO;AAEH,iBAAKA,UAAL,GAAkB,IAAIT,IAAJ,EAAlB;AAEA,iBAAKO,IAAL,CAAUS,UAAV,CAAqB,KAAKR,gBAA1B,EAA4C,KAAKC,UAAjD;AAEH;AAEJ;;AAEY,YAATQ,SAAS,GAAG;AAEZhB,UAAAA,MAAM,CAAC,KAAKE,IAAL,KAAc,IAAf,CAAN;AAEA,iBAAO,KAAKM,UAAZ;AAEH;;AAEY,YAATQ,SAAS,CAACC,CAAD,EAAU;AAAA;;AAEnB,6BAAKX,IAAL,wBAAWQ,UAAX,CAAsB,KAAKP,gBAA3B,EAA6CU,CAA7C;AAEH;;AAtDsB,O","sourcesContent":["import { Node, Material, MeshRenderer, Vec4, renderer, assert, IVec4Like } from \"cc\";\r\n\r\nexport class TweenMaterial {\r\n\r\n    private node: Node = null;\r\n\r\n    private renderer: MeshRenderer = null;\r\n\r\n    private material: Material;\r\n\r\n    private pass: renderer.Pass = null;\r\n\r\n    private mainColorHandler: number = 0;\r\n\r\n    private _mainColor: Vec4 = null;\r\n\r\n    constructor(node: Node, initialColor?: IVec4Like) {\r\n\r\n        this.node = node;\r\n\r\n        this.renderer = this.node.getComponent(MeshRenderer);\r\n\r\n        this.material = this.renderer.getMaterialInstance(0);\r\n\r\n        this.pass = this.material.passes[0];\r\n\r\n        this.mainColorHandler = this.pass.getHandle('mainColor');\r\n\r\n        if (initialColor) {\r\n\r\n            this._mainColor = Vec4.clone(initialColor);\r\n\r\n            this.pass.setUniform(this.mainColorHandler, this._mainColor)\r\n\r\n        } else {\r\n\r\n            this._mainColor = new Vec4();\r\n\r\n            this.pass.getUniform(this.mainColorHandler, this._mainColor);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    get mainColor() {\r\n\r\n        assert(this.node !== null);\r\n\r\n        return this._mainColor;\r\n\r\n    }\r\n\r\n    set mainColor(v: Vec4) {\r\n\r\n        this.pass?.setUniform(this.mainColorHandler, v);\r\n\r\n    }\r\n\r\n}"]}