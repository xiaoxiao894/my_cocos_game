{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/JavaScript/Actor/PlayerManager.ts"],"names":["_decorator","Animation","Component","director","find","Mat4","Node","SkeletalAnimation","tween","Vec3","Actor","StateDefine","VirtualInput","DataManager","ccclass","property","requireComponent","PlayerManager","actor","isInLockedState","_attackDuration","_attackTimer","_isAttacking","_isWalkAttack","monsters","_isAttackPlaying","_uncollectedMeat","start","Instance","player","node","getComponent","onDestroy","sceneManager","hitEffectPrefabPool","destroy","create","alloc","parent","getScene","addChild","active","onProjectileDead","free","update","deltaTime","getIcon","currentState","Die","searchMonsters","getAttackTargets","hasMonsters","length","len","handleInput","isNormalAttacking","changState","Attack","Walk_attack","Walk","jackParent","getChildByName","jackParentAni","idleState","getState","isPlaying","play","jack","skeletalAnim","clipName","clips","name","state","pause","monsterHitEffect","monster","i","effect","pos","getWorldPosition","y","x","setWorldPosition","sprite","effectAnim","defaultClip","once","EventType","FINISHED","setTimeout","pauseAttackEffect","soundManager","PlayerAttackSoundPlay","monsterManager","killMonsters","txWalkAttack","attackSprite","walkAttackAni","_onAttackFinished","anim","walkingAttackEffects","walkAttackSprite","stop","_onWalkAttackFinished","horizontal","vertical","destForward","set","camNode","camRot","getWorldRotation","forward","right","transformQuat","normalize","moveDir","scaleAndAdd","z","getForwardVector","getRotation","dt","newMeats","getDrops","backpack1","playerPos","worldPosition","clone","maxDistanceXZ","allMeats","delayCounter","meat","isValid","meatPos","dx","dz","distSqrXZ","push","duration","controller","t","setParent","delay","to","easing","onUpdate","oneMinusT","maxY","j","children","child","localPos","getPosition","localTarget","worldPos","worldRot","worldScale","getWorldScale","worldMat","fromRTS","worldTarget","transformMat4","control","Math","max","call","finalWorldPos","playIconSound","UIPropertyManager","collectProperty"],"mappings":"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","sourcesContent":["import { _decorator, Animation, AnimationClip, AnimationState, Component, director, find, instantiate, Mat4, Node, Pool, Quat, SkeletalAnimation, SkeletalAnimationComponent, tween, Vec3 } from 'cc';\r\nimport { Actor } from './Actor';\r\nimport { StateDefine } from './StateDefine';\r\nimport { VirtualInput } from '../Input/VirtuallInput';\r\nimport { DataManager } from '../Global/DataManager';\r\nimport { GridSystem } from '../Grid/GridSystem';\r\nimport { EachPartnerManager } from './EachPartnerManager';\r\nimport { EntityTypeEnum } from '../Enum/Index';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('PlayerManager')\r\n@requireComponent(Actor)\r\nexport class PlayerManager extends Component {\r\n    @property(Node)\r\n    monster: Node = null;\r\n\r\n    actor: Actor | null = null;\r\n\r\n    private isInLockedState = false;\r\n\r\n    private _attackDuration = 0.8;\r\n    private _attackTimer = 0;\r\n    private _isAttacking = false;\r\n\r\n    private _isWalkAttack = false;\r\n\r\n    monsters = null;\r\n    start() {\r\n        DataManager.Instance.player = this;\r\n\r\n        this.actor = this.node.getComponent(Actor);\r\n    }\r\n\r\n    onDestroy() {\r\n        DataManager.Instance.sceneManager.hitEffectPrefabPool.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!DataManager.Instance.sceneManager.hitEffectPrefabPool) return;\r\n        let node = DataManager.Instance.sceneManager.hitEffectPrefabPool.alloc();\r\n        if (node.parent == null) {\r\n            director.getScene().addChild(node);\r\n        }\r\n        node.active = true;\r\n        return node;\r\n    }\r\n\r\n    onProjectileDead(node) {\r\n        node.active = false;\r\n        DataManager.Instance.sceneManager.hitEffectPrefabPool.free(node);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.getIcon(deltaTime);\r\n\r\n        if (this.actor.currentState === StateDefine.Die) return;\r\n\r\n        this.monsters = DataManager.Instance.searchMonsters.getAttackTargets(this.node, 10, 360);\r\n        const hasMonsters = this.monsters && this.monsters.length > 0;\r\n\r\n        const len = this.handleInput();\r\n\r\n        // 攻击时计时控制\r\n        if (this._isAttacking) {\r\n            this._attackTimer += deltaTime;\r\n            if (this._attackTimer >= this._attackDuration) {\r\n                this._isAttacking = false;\r\n                this._attackTimer = 0;\r\n                DataManager.Instance.isNormalAttacking = true;\r\n            }\r\n        }\r\n\r\n        // 攻击逻辑（触发一次）\r\n        if (!this._isAttacking && hasMonsters && DataManager.Instance.isNormalAttacking && len < 0.1) {\r\n            this._isAttacking = true;\r\n            this._attackTimer = 0;\r\n            DataManager.Instance.isNormalAttacking = false;\r\n\r\n            this.actor.changState(StateDefine.Attack);\r\n            // this.pauseAttackEffect(); // 可选：播放攻击特效\r\n        }\r\n\r\n        // === 动画状态管理 ===\r\n        if (!this._isAttacking) {\r\n            if (len > 0.1) {\r\n                this.actor.changState(hasMonsters ? StateDefine.Walk_attack : StateDefine.Walk);\r\n            } else {\r\n                if (hasMonsters) {\r\n                    this.actor.changState(StateDefine.Attack);\r\n                } else {\r\n                    // === 空闲状态动画处理（骨骼动画冻结一帧） ===\r\n                    const jackParent = this.node.getChildByName(\"JackParent\");\r\n                    const jackParentAni = jackParent?.getComponent(Animation);\r\n                    if (jackParentAni) {\r\n                        const idleState = jackParentAni.getState(\"idleA\");\r\n                        if (idleState && !idleState.isPlaying) {\r\n                            jackParentAni.play(\"idleA\");\r\n                        }\r\n                    }\r\n\r\n                    const jack = jackParent.getChildByName(\"jack\");\r\n                    const skeletalAnim = jack.getComponent(SkeletalAnimation);\r\n                    if (!skeletalAnim) return;\r\n\r\n                    const clipName = skeletalAnim.clips[0]?.name;\r\n                    if (!clipName) return;\r\n\r\n                    // 播放一次动画以初始化动画状态\r\n                    skeletalAnim.play(clipName);\r\n\r\n                    const state = skeletalAnim.getState(clipName);\r\n                    if (!state) return;\r\n\r\n                    state.update(0); // 强制立即应用该时间的骨骼姿势\r\n                    state.pause();\r\n                }\r\n            }\r\n        } else {\r\n            if (len > 0.1) {\r\n                this.actor.changState(StateDefine.Walk_attack);\r\n                this._isWalkAttack = true;\r\n            }\r\n            // 不移动时不切状态，等待攻击动画播放完\r\n        }\r\n    }\r\n\r\n    // 怪受\r\n    monsterHitEffect(monsters: Node[]) {\r\n        for (let i = 0; i < monsters.length; i++) {\r\n            const monster = monsters[i];\r\n\r\n            const effect = this.create();\r\n            if (!effect) continue;\r\n\r\n            // 设置特效位置为怪物当前位置\r\n            const pos = monster.getWorldPosition();\r\n            pos.y = pos.y + 3;\r\n            pos.x = pos.x + 1;\r\n            effect.setWorldPosition(pos);\r\n\r\n            // 播放动画（假设节点下有 Animation 组件）\r\n            const sprite = effect.getChildByName(\"Sprite\");\r\n            const effectAnim = sprite.getComponent(Animation);\r\n            if (effectAnim && effectAnim.defaultClip) {\r\n                effectAnim.play(\"TX_Attack_hit\");\r\n\r\n                // 动画结束后回收\r\n                effectAnim.once(Animation.EventType.FINISHED, () => {\r\n                    this.onProjectileDead(effect);\r\n                });\r\n            } else {\r\n                // 如果没动画直接延迟销毁\r\n                setTimeout(() => {\r\n                    this.onProjectileDead(effect);\r\n                }, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // 停顿攻击特效\r\n    pauseAttackEffect() {\r\n        DataManager.Instance.soundManager.PlayerAttackSoundPlay();\r\n        DataManager.Instance.monsterManager.killMonsters(this.monsters, true);\r\n\r\n        const jackParent = this.node.getChildByName(\"JackParent\");\r\n        const jack = jackParent.getChildByName(\"jack\");\r\n        const txWalkAttack = jack.getChildByName(\"TX_attack\");\r\n        txWalkAttack.active = true;\r\n        const attackSprite = txWalkAttack.getChildByName(\"Sprite\");\r\n\r\n        if (attackSprite) {\r\n            const walkAttackAni = attackSprite.getComponent(Animation);\r\n            if (walkAttackAni) {\r\n                walkAttackAni.once(Animation.EventType.FINISHED, this._onAttackFinished, this);\r\n\r\n                walkAttackAni.play(\"TX_Attack\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onAttackFinished(anim: Animation, state: AnimationState) {\r\n        if (state.name === \"TX_Attack\") {\r\n            const jackParent = this.node.getChildByName(\"JackParent\");\r\n            const jack = jackParent.getChildByName(\"jack\");\r\n            const txWalkAttack = jack.getChildByName(\"TX_attack\");\r\n            txWalkAttack.active = false;\r\n\r\n            if (this._isWalkAttack) {\r\n                this._isWalkAttack = false;\r\n\r\n                // this.walkingAttackEffects();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 走路攻击特效\r\n    private _isAttackPlaying = false;\r\n    walkingAttackEffects() {\r\n        if (this._isAttackPlaying) return;\r\n        this._isAttackPlaying = true;\r\n\r\n        DataManager.Instance.soundManager.PlayerAttackSoundPlay();\r\n        DataManager.Instance.monsterManager.killMonsters(this.monsters, true);\r\n\r\n        const jackParent = this.node.getChildByName(\"JackParent\");\r\n        const jack = jackParent.getChildByName(\"jack\");\r\n        const txWalkAttack = jack.getChildByName(\"TX_walk_attack\");\r\n        txWalkAttack.active = true;\r\n\r\n        const walkAttackSprite = txWalkAttack.getChildByName(\"Sprite\");\r\n        if (walkAttackSprite) {\r\n            const walkAttackAni = walkAttackSprite.getComponent(Animation);\r\n            if (walkAttackAni) {\r\n                walkAttackAni.stop();\r\n                walkAttackAni.once(Animation.EventType.FINISHED, this._onWalkAttackFinished, this);\r\n                walkAttackAni.play(\"TX_Attack\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onWalkAttackFinished() {\r\n        this._isAttackPlaying = false;\r\n\r\n        const jackParent = this.node.getChildByName(\"JackParent\");\r\n        const jack = jackParent.getChildByName(\"jack\");\r\n        const txWalkAttack = jack.getChildByName(\"TX_walk_attack\");\r\n        txWalkAttack.active = false;\r\n    }\r\n\r\n\r\n    handleInput() {\r\n        const x = VirtualInput.horizontal;\r\n        const y = VirtualInput.vertical;\r\n\r\n        if (x === 0 && y === 0) {\r\n            this.actor.destForward.set(0, 0, 0);\r\n            return 0;\r\n        }\r\n\r\n        const camNode = find(\"Main Camera\");\r\n\r\n        // 获取摄像机的世界旋转（四元数）\r\n        const camRot = camNode.getWorldRotation();\r\n\r\n        // 从旋转计算 forward（z轴）和 right（x轴）\r\n        const forward = new Vec3(0, 0, -1);\r\n        const right = new Vec3(1, 0, 0);\r\n\r\n        Vec3.transformQuat(forward, forward, camRot);\r\n        Vec3.transformQuat(right, right, camRot);\r\n\r\n        // 只保留水平分量\r\n        forward.y = 0;\r\n        right.y = 0;\r\n        forward.normalize();\r\n        right.normalize();\r\n\r\n        // 将摇杆输入转换为世界方向\r\n        const moveDir = new Vec3();\r\n        Vec3.scaleAndAdd(moveDir, moveDir, right, x);    // x轴影响\r\n        Vec3.scaleAndAdd(moveDir, moveDir, forward, y); // y轴影响（注意：-y 表示前）\r\n\r\n        moveDir.normalize();\r\n        this.actor.destForward.set(moveDir.x, 0, moveDir.z);\r\n        return moveDir.length();\r\n    }\r\n\r\n\r\n    // 获取主角朝向\r\n    getForwardVector(node: Node): Vec3 {\r\n        const forward = new Vec3(0, 0, -1);\r\n        return Vec3.transformQuat(new Vec3(), forward, node.getRotation()).normalize();\r\n    }\r\n\r\n    // 获取肉  // 这里还需要\r\n    private _uncollectedMeat: Node[] = [];\r\n\r\n    getIcon(dt) {\r\n        const newMeats = DataManager.Instance.monsterManager.getDrops();\r\n        const player = DataManager.Instance.player;\r\n        if (!player) return;\r\n\r\n        const backpack1 = player.node.getChildByName(\"Backpack1\");\r\n        if (!backpack1) return;\r\n\r\n        const playerPos = player.node.worldPosition.clone();\r\n        const maxDistanceXZ = 33;\r\n\r\n        // 合并新掉落 + 上次未收集的\r\n        const allMeats: Node[] = [...newMeats, ...this._uncollectedMeat];\r\n        this._uncollectedMeat = []; // 本轮清空，重新判断收集\r\n\r\n        let delayCounter = 0;\r\n\r\n        for (let i = 0; i < allMeats.length; i++) {\r\n            const meat = allMeats[i];\r\n            if (!meat || !meat.isValid) continue;\r\n\r\n            const meatPos = meat.worldPosition.clone();\r\n            const dx = meatPos.x - playerPos.x;\r\n            const dz = meatPos.z - playerPos.z;\r\n            const distSqrXZ = dx * dx + dz * dz;\r\n\r\n            // 超出范围：暂存等待下一次\r\n            if (distSqrXZ > maxDistanceXZ * maxDistanceXZ) {\r\n                this._uncollectedMeat.push(meat);\r\n                continue;\r\n            }\r\n\r\n            // === 贝塞尔飞行动画 ===\r\n            const start = meatPos;\r\n            const duration = 0.6;\r\n            const controller = { t: 0 };\r\n\r\n            meat.setParent(this.node.parent);\r\n            meat.setWorldPosition(start);\r\n\r\n            tween(controller)\r\n                .delay(delayCounter * 0.05) // 用 delayCounter 替代 i，避免跳过后间隔混乱\r\n                .to(duration, { t: 1 }, {\r\n                    easing: 'quadOut',\r\n                    onUpdate: () => {\r\n                        const t = controller.t;\r\n                        const oneMinusT = 1 - t;\r\n\r\n                        // 当前背包堆叠高度\r\n                        let maxY = 0;\r\n                        for (let j = 0; j < backpack1.children.length; j++) {\r\n                            const child = backpack1.children[j];\r\n                            if (!child || !child.isValid) continue;\r\n                            const localPos = child.getPosition();\r\n                            if (localPos.y > maxY) {\r\n                                maxY = localPos.y;\r\n                            }\r\n                        }\r\n\r\n                        const localTarget = new Vec3(0, maxY + 0.5, 0);\r\n\r\n                        const worldPos = backpack1.getWorldPosition();\r\n                        const worldRot = backpack1.getWorldRotation();\r\n                        const worldScale = backpack1.getWorldScale();\r\n                        const worldMat = new Mat4();\r\n                        Mat4.fromRTS(worldMat, worldRot, worldPos, worldScale);\r\n                        const worldTarget = Vec3.transformMat4(new Vec3(), localTarget, worldMat);\r\n\r\n                        const control = new Vec3(\r\n                            (start.x + worldTarget.x) / 2,\r\n                            Math.max(start.y, worldTarget.y) + 2,\r\n                            (start.z + worldTarget.z) / 2\r\n                        );\r\n\r\n                        const pos = new Vec3(\r\n                            oneMinusT * oneMinusT * start.x + 2 * oneMinusT * t * control.x + t * t * worldTarget.x,\r\n                            oneMinusT * oneMinusT * start.y + 2 * oneMinusT * t * control.y + t * t * worldTarget.y,\r\n                            oneMinusT * oneMinusT * start.z + 2 * oneMinusT * t * control.z + t * t * worldTarget.z\r\n                        );\r\n\r\n                        meat.setWorldPosition(pos);\r\n                    }\r\n                })\r\n                .call(() => {\r\n                    const finalWorldPos = meat.getWorldPosition().clone();\r\n                    meat.setParent(backpack1);\r\n                    meat.setWorldPosition(finalWorldPos);\r\n\r\n                    DataManager.Instance.soundManager.playIconSound();\r\n                    DataManager.Instance.UIPropertyManager.collectProperty();\r\n                })\r\n                .start();\r\n\r\n            delayCounter++;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}