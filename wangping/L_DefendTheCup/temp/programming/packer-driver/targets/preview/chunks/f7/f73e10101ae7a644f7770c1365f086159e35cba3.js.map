{"version":3,"sources":["file:///D:/Cocos/PlayAble/L_DefendTheCup/assets/JavaScript/Util/MathUtil.ts"],"names":["MathUtil","Vec3","v3","tempVec","tempVec2","tempVec3","up","rotateAround","out","v","u","maxAngleDelta","cos","Math","sin","multiplyScalar","cross","scaleAndAdd","dot","rotateToward","from","to","signAngle","axis","angle","sign","x","y","z","staticgetTwoDistinctRandom","arr","length","shuffled","slice","sort","random","bezierCurve","p0","p1","p2","t","tt","uu","p","getRandom","min","max","floor"],"mappings":"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","sourcesContent":["import { _decorator, IVec3Like, Vec3, v3, math } from 'cc';\r\n\r\nlet tempVec: Vec3 = v3()\r\nlet tempVec2: Vec3 = v3()\r\nlet tempVec3: Vec3 = v3()\r\nlet up = v3()\r\n\r\n/**\r\n * 通用数学库\r\n */\r\nexport class MathUtil {\r\n    static rotateAround(out: Vec3, v: Vec3, u: Vec3, maxAngleDelta: number) {\r\n\r\n        const cos = Math.cos(maxAngleDelta);\r\n        const sin = Math.sin(maxAngleDelta);\r\n\r\n        Vec3.multiplyScalar(tempVec, v, cos);\r\n\r\n        Vec3.cross(tempVec2, u, v);\r\n\r\n        Vec3.scaleAndAdd(tempVec3, tempVec, tempVec2, sin);\r\n\r\n        const dot = Vec3.dot(u, v);\r\n\r\n        Vec3.scaleAndAdd(out, tempVec3, u, dot * (1.0 - cos));\r\n    }\r\n\r\n    static rotateToward(out: Vec3, from: Vec3, to: Vec3, maxAngleDelta: number) {\r\n        Vec3.cross(up, from, to);\r\n        this.rotateAround(out, from, up, maxAngleDelta);\r\n    }\r\n\r\n    static signAngle(from: Vec3, to: Vec3, axis: Vec3): number {\r\n        const angle = Vec3.angle(from, to);\r\n        Vec3.cross(tempVec, from, to);\r\n        const sign = Math.sign(axis.x * tempVec.x + axis.y * tempVec.y + axis.z * tempVec.z);\r\n        return angle * sign;\r\n    }\r\n\r\n    static staticgetTwoDistinctRandom(arr) {\r\n        if (arr.length < 2) return null;\r\n\r\n        // 洗牌 + 取前两个\r\n        const shuffled = arr.slice().sort(() => Math.random() - 0.5);\r\n        return [shuffled[0], shuffled[1]];\r\n    }\r\n\r\n    static bezierCurve(p0: Vec3, p1: Vec3, p2: Vec3, t: number): Vec3 {\r\n        const u = 1 - t;\r\n        const tt = t * t;\r\n        const uu = u * u;\r\n        let p = new Vec3();\r\n        p.x = uu * p0.x + 2 * u * t * p1.x + tt * p2.x;\r\n        p.y = uu * p0.y + 2 * u * t * p1.y + tt * p2.y;\r\n        p.z = uu * p0.z + 2 * u * t * p1.z + tt * p2.z;\r\n        return p;\r\n    }\r\n\r\n    static getRandom(min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n}\r\n\r\n"]}