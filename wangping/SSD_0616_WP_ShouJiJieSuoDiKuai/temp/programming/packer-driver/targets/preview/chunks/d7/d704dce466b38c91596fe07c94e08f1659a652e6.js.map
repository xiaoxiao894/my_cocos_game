{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0616_WP_ShouJiJieSuoDiKuai/assets/Script/BubbleFead.ts"],"names":["_decorator","Component","Node","tween","UIOpacity","Vec3","ccclass","property","BubbleFead","type","tooltip","isFead","onLoad","imageFead","forEach","item","addComponent","start","Show","hideFead","element","uiOpacity","getComponent","to","opacity","getFeadState","originalScale","scale","clone","shrunkenScale","multiplyScalar","Show1","num","console","log","parent","position","x","z","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, UIOpacity, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BubbleFead')\r\nexport class BubbleFead extends Component {\r\n    @property({ type: Node, tooltip: \"升级节点1\" })\r\n    imageFead: Node[] = [];\r\n    private isFead: boolean = false;\r\n\r\n    protected onLoad(): void {\r\n        this.imageFead.forEach((item) => {\r\n            item.addComponent(UIOpacity)\r\n        })\r\n    }\r\n    start() {\r\n        this.Show();\r\n    }\r\n    hideFead() {\r\n        this.isFead = true;\r\n        this.imageFead.forEach(element => {\r\n            const uiOpacity = element.getComponent(UIOpacity);\r\n            if (uiOpacity) {\r\n                tween(uiOpacity)\r\n                    .to(0.5, { opacity: 0 })  // 操作 UIOpacity 组件的 opacity 属性\r\n                    .start();\r\n            }\r\n        });\r\n    }\r\n    getFeadState() {\r\n        return this.isFead;\r\n    }\r\n    Show() {\r\n\r\n        this.imageFead.forEach(element => {\r\n            const originalScale = element.scale.clone();\r\n            const shrunkenScale = originalScale.clone().multiplyScalar(1.2);\r\n            const uiOpacity = element.getComponent(UIOpacity);\r\n            // uiOpacity.opacity = 0;\r\n            if (uiOpacity) {\r\n                // 使用 parallel 同时执行透明度和缩放动画\r\n                tween(uiOpacity)\r\n                    .to(0.5, { opacity: 255 })\r\n                    .start()  // 操作 UIOpacity 组件的 opacity 属性     \r\n                tween(element)\r\n                    .to(0.2, { scale: shrunkenScale })  // 操作 Node 的 scale 属性\r\n                    .to(0.2, { scale: originalScale })  // 操作 Node 的 scale 属性\r\n                    .start();\r\n            }\r\n        });\r\n\r\n    }\r\n    Show1(num: number = -1) {\r\n        console.log(\"num num == \", num);\r\n        if (num == 1) {\r\n            this.imageFead[0].parent.parent.position = new Vec3(\r\n                this.imageFead[0].parent.parent.position.x,\r\n                5.763,\r\n                this.imageFead[0].parent.parent.position.z\r\n            );\r\n        }\r\n        if (num == 2) {\r\n            this.imageFead[0].parent.parent.position = new Vec3(\r\n                this.imageFead[0].parent.parent.position.x,\r\n                4.763,\r\n                this.imageFead[0].parent.parent.position.z\r\n            );\r\n        } \r\n\r\n        this.imageFead.forEach(element => {\r\n            const originalScale = new Vec3(0.01, 0.01, 0.01);\r\n            const shrunkenScale = originalScale.clone().multiplyScalar(1.2);\r\n            const uiOpacity = element.getComponent(UIOpacity);\r\n            // uiOpacity.opacity = 0;\r\n            if (uiOpacity) {\r\n                // 使用 parallel 同时执行透明度和缩放动画\r\n                tween(uiOpacity)\r\n                    .to(0.5, { opacity: 255 })\r\n                    .start()  // 操作 UIOpacity 组件的 opacity 属性     \r\n                tween(element)\r\n                    .to(0.2, { scale: shrunkenScale })  // 操作 Node 的 scale 属性\r\n                    .to(0.2, { scale: originalScale })  // 操作 Node 的 scale 属性\r\n                    .start();\r\n            }\r\n        });\r\n\r\n    }\r\n    // initShow\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}