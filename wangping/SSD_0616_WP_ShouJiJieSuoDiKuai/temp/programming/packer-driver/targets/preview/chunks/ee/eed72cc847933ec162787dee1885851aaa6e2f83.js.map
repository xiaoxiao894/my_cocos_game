{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_UnlockPlot/assets/Script/states/AttackState.ts"],"names":["AttackState","tween","CharacterType","State","BehaviourType","Global","eventMgr","EventType","constructor","entity","target","callBcak","pos","num","node","worldPosition","clone","onEnter","callback","getType","CHARACTER","characterSkeletalAnimation","console","error","ENEMY","enemyChar","cahracter","isAttack","axe","active","sickle","attackLoop","play","soundManager","playAttackEnemySound","takeDamage","attack","isDie","enemyDieNum","emit","ENTITY_ALL_DIE","setBehaviour","Idel","idle","delay","call","start","scheduleOnce","hit","onUpdate","dt","onExit","log"],"mappings":"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","sourcesContent":["import { AnimationComponent, tween, Vec3 } from \"cc\";\r\nimport { EnemyTree } from \"../entitys/EnemyTree\";\r\nimport Entity, { CharacterType } from \"../entitys/Entity\";\r\nimport State from \"./State\";\r\nimport { enemyCharacter } from \"../entitys/enemyCharacter\";\r\nimport { BehaviourType, Character } from \"../entitys/Character\";\r\nimport { goodsDrop } from \"../goodsDrop\";\r\nimport { Global } from \"../core/Global\";\r\nimport { eventMgr } from \"../core/EventManager\";\r\nimport { EventType } from \"../core/EventType\";\r\n\r\nexport default class AttackState extends State {\r\n\r\n    target: Entity = null;\r\n    private callBcak: Function = null;\r\n    pos: Vec3 = null;\r\n    constructor(entity: Entity) {\r\n        super();\r\n        this.entity = entity;\r\n        this.pos = this.entity.node.worldPosition.clone();\r\n    }\r\n    private num: number = 0;\r\n    onEnter(callback?: (...agrs: unknown[]) => void): void {\r\n        if (this.entity.getType() == CharacterType.CHARACTER) {\r\n            // 检查骨骼动画组件是否存在\r\n            if (!this.entity.characterSkeletalAnimation) {\r\n                console.error(\"骨骼动画组件未初始化\");\r\n                return;\r\n            }\r\n        }\r\n        // this.entity.node.worldPosition = this.pos;\r\n        if ((this.entity.target as enemyCharacter).getType() == CharacterType.ENEMY) {\r\n            let enemyChar = (this.entity.target as enemyCharacter);\r\n            let cahracter = (this.entity as Character);\r\n            cahracter.isAttack = true;\r\n            cahracter.axe.active = true;\r\n            cahracter.sickle.active = false;\r\n            const attackLoop = () => {\r\n                this.entity.characterSkeletalAnimation.play(\"kanshu\");\r\n                Global.soundManager.playAttackEnemySound()\r\n                //enemyTree.playAnimtion();//受激动作\r\n                enemyChar.takeDamage(this.entity.attack, (isDie: boolean) => {\r\n                    if (isDie) {\r\n                        Global.enemyDieNum++;\r\n                        if (Global.enemyDieNum >= 4) {\r\n                            eventMgr.emit(EventType.ENTITY_ALL_DIE)\r\n                        }\r\n                        //  cahracter.setFindTarget(false);\r\n                        cahracter.setBehaviour(BehaviourType.Idel)\r\n                        cahracter.idle();\r\n    \r\n\r\n                    } else {\r\n                        tween(enemyChar)\r\n                            .delay(1)\r\n                            .call(() => {\r\n                                attackLoop();\r\n                            })\r\n                            .start()\r\n                    }\r\n                });\r\n                this.scheduleOnce(() => {\r\n                    // this.num++;\r\n                    // if(this.num >= 3){\r\n                    //     enemyChar.die();\r\n                    //     enemyChar.attackNum = -1;\r\n                    // }\r\n                    enemyChar.hit();\r\n                    \r\n                }, 0.3)\r\n            }\r\n            attackLoop();\r\n        }\r\n\r\n        // if (callback) {\r\n\r\n        //     console.log(\"AttackState callback\")\r\n        //     this.callBcak = callback;\r\n        //     this.callBcak(this.entity)\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    onUpdate(dt: number): void {\r\n        // 攻击状态的逻辑\r\n    }\r\n\r\n    onExit(callback?: (...agrs: unknown[]) => void): void {\r\n        console.log(\"退出攻击状态\");\r\n        this.callBcak = null;\r\n    }\r\n}"]}