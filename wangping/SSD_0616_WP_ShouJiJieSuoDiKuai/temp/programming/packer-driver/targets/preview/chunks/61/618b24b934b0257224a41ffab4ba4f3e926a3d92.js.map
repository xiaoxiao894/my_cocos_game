{"version":3,"sources":["file:///D:/playable/wangping/SSD_0616_WP_ShouJiJieSuoDiKuai/assets/Script/states/CutTreeState.ts"],"names":["_decorator","tween","Animation","State","CharacterType","BehaviourType","Global","ccclass","property","CutTreeState","constructor","entity","target","callback","num","currentTween","isExiting","onEnter","resetState","getType","CHARACTER","characterSkeletalAnimation","console","error","enemyTree","ENEMY_TREE","character","axe","active","sickle","setBehaviour","CutTree","stop","call","performAttack","start","log","getBehaviour","off","EventType","FINISHED","tt","getState","wrapMode","scheduleOnce","curCollectNum","collectWoodNew","soundManager","playCutTreeSound","play","playAnimtion","curCutNum","animationNum","takeDamage","attack","isDie","itiem","treeHandOver","HandOver","setFindTarget","nextTree","idle","delay","onUpdate","dt","onExit"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Animation } from 'cc';\r\nimport State from './State';\r\nimport Entity, { CharacterType } from '../entitys/Entity';\r\nimport { EnemyTree } from '../entitys/EnemyTree';\r\nimport { treeController } from '../Game/TreeController';\r\nimport { BehaviourType, Character } from '../entitys/Character';\r\nimport { Global } from '../core/Global';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CutTreeState')\r\nexport class CutTreeState extends State {\r\n    target: Entity = null;\r\n    private callback: Function = null;\r\n    private num: number = 0;\r\n\r\n   // private TreeAnimationNum: number = 1;\r\n    private currentTween: any = null;\r\n    private isExiting: boolean = false;\r\n\r\n    constructor(entity: Entity) {\r\n        super();\r\n        this.entity = entity;\r\n    }\r\n\r\n    onEnter(callback?: (...agrs: unknown[]) => void): void {\r\n        // 重置状态\r\n        this.resetState();\r\n        this.callback = callback;\r\n\r\n        if (this.entity.getType() !== CharacterType.CHARACTER) return;\r\n        if (!this.entity.characterSkeletalAnimation) {\r\n            console.error(\"骨骼动画组件未初始化\");\r\n            return;\r\n        }\r\n\r\n        const enemyTree = this.entity.target as EnemyTree;\r\n        if (!enemyTree || enemyTree.getType() !== CharacterType.ENEMY_TREE) return;\r\n\r\n        const character = this.entity as Character;\r\n\r\n        character.axe.active = true;\r\n        character.sickle.active = false;\r\n        character.setBehaviour(BehaviourType.CutTree);\r\n        this.entity.characterSkeletalAnimation.stop();\r\n\r\n        // 保存引用用于退出时清理\r\n        this.currentTween = tween(enemyTree)\r\n            .call(() => this.performAttack(enemyTree, character))\r\n            .start();\r\n    }\r\n\r\n    private performAttack(enemyTree: EnemyTree, character: Character) {\r\n        if (this.isExiting) return;\r\n\r\n        console.log(\"attackLoop  == \" + character.getBehaviour());\r\n\r\n        // 移除之前可能残留的监听器\r\n        this.entity.characterSkeletalAnimation.off(Animation.EventType.FINISHED);\r\n\r\n        let tt = this.entity.characterSkeletalAnimation.getState(\"kanshu\").wrapMode\r\n        // 添加单次监听器\r\n        //  this.entity.characterSkeletalAnimation.once(Animation.EventType.FINISHED, () => {\r\n        this.scheduleOnce(() => {\r\n            if (this.isExiting) return;\r\n            //  if(Global.treeHandOver){\r\n            //     return;\r\n            //  }\r\n            //     this.scheduleOnce(()=>{\r\n            //         character.setFindTarget(false);\r\n            //         character.BehaviourType = BehaviourType.Idel;\r\n            //         character.idle();\r\n\r\n            //     },0.5)\r\n            // }else{\r\n            this.num++;\r\n            enemyTree.curCollectNum++;\r\n            console.log(\" this.num  == \", enemyTree.curCollectNum);\r\n\r\n            if (enemyTree.curCollectNum === 3) {\r\n                character.collectWoodNew(character, 4, enemyTree);\r\n            } else {\r\n                character.collectWoodNew(character, 3, enemyTree);\r\n            }\r\n            //}\r\n\r\n        }, 0.3)\r\n\r\n        //  });\r\n\r\n        Global.soundManager.playCutTreeSound();\r\n\r\n        this.entity.characterSkeletalAnimation.play(\"kanshu\");\r\n        enemyTree.playAnimtion(\"shuKF00\" + enemyTree.curCutNum);\r\n        enemyTree.animationNum++;\r\n        enemyTree.curCutNum++;\r\n       // this.TreeAnimationNum++\r\n        enemyTree.takeDamage(this.entity.attack, (isDie: boolean) => {\r\n            if (this.isExiting) return;\r\n            if (isDie) {\r\n                let itiem = 0.3\r\n                if (Global.treeHandOver == false) {\r\n                    itiem = 0.3\r\n                } else {\r\n                    itiem = 0\r\n                    return;\r\n                }\r\n\r\n                this.scheduleOnce(() => {\r\n                    if (BehaviourType.HandOver == (this.entity as Character).BehaviourType) {\r\n                        return;\r\n                    } else {\r\n                        character.setFindTarget(false);\r\n                        // character.setBehaviour(BehaviourType.Idel);\r\n                        character.nextTree();\r\n                        this.entity.idle();\r\n                        this.resetState();\r\n\r\n                        if (this.callback) {\r\n                            this.callback();\r\n                        }\r\n                    }\r\n\r\n\r\n                }, itiem)\r\n\r\n            } else {\r\n                this.currentTween = tween(enemyTree)\r\n                    .delay(1)\r\n                    .call(() => this.performAttack(enemyTree, character))\r\n                    .start();\r\n            }\r\n        });\r\n    }\r\n\r\n    private resetState() {\r\n        this.num = 0;\r\n        this.isExiting = false;\r\n      //  this.TreeAnimationNum = 1;\r\n\r\n        // 停止并清除tween动画\r\n        if (this.currentTween) {\r\n            this.currentTween.stop();\r\n            this.currentTween = null;\r\n        }\r\n\r\n        // 清除动画监听器\r\n        if (this.entity.characterSkeletalAnimation) {\r\n            this.entity.characterSkeletalAnimation.off(Animation.EventType.FINISHED);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt: number): void {\r\n        // 攻击状态的逻辑\r\n    }\r\n\r\n    onExit(callback?: (...agrs: unknown[]) => void): void {\r\n        console.log(\"退出攻击状态\");\r\n        this.isExiting = true;\r\n        this.resetState();\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n}"]}