{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_UnlockPlot/assets/Script/entitys/enemyCharacter.ts"],"names":["_decorator","Quat","Vec3","Animation","tween","Material","MeshRenderer","Entity","CharacterType","goodsDrop","DissolveEffect","Global","ccclass","property","enemyCharacter","Number","type","ENEMY","hp","isFindCharacter","attackNum","isFindWay","_bloodOffset","currentWaypointIndex","isMovingToWaypoint","speed","targetPos","stopDistance","callback","tempDir","tempMoveVec","tempNextPos","tempForward","tempRotation","tempParentRotation","tempParentRotationInv","shoudleAnimation","isDie","num","isdie","hasInitGoods","onLoad","start","init","update","deltaTime","onUpdate","characterSkeletalAnimation","console","error","toMove","attackEventCallBack","isAttackWarn","warnUI","playWarnFadeAnimation","log","ani","target","node","getChildByName","active","getComponent","play","attacHitkEventCallBack","skeletalAnim","isAttack","stop","shakeRed","once","EventType","FINISHED","hit","houseMaterial","sequence","call","die","material","redMaterial","delay","baseMaterial","repeat","scheduleOnce","findWay","length","tweenObj","to","speedTime","position","i","soundManager","playEnemySound","unschedule","dissolve","destroy","dt","moveTargetWorldPos","worldPosition","clone","copy","moveToTarget","attackCharactr","chNode","initGoods","name","match","index","gongji","getParent","currentPos","bloodPos","add","setWorldPosition","randomizeItemsInBackpack","lookAtTarget","subtract","y","normalize","parent","getRotation","invert","transformQuat","fromViewUp","UP","setRotation","distance","moveDistance","multiplyScalar","onExit","set"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Quat, Vec3, Animation, v3, tween, find, Material, MeshRenderer } from 'cc';\r\nimport Entity, { CharacterType } from './Entity';\r\nimport { Character } from './Character';\r\nimport { goodsDrop } from '../goodsDrop';\r\nimport { DissolveEffect } from '../../Res/TX/DissolveEffect/scripts/DissolveEffect';\r\nimport { Global } from '../core/Global';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('enemyCharacter')\r\nexport class enemyCharacter extends Entity {\r\n\r\n    type: string = CharacterType.ENEMY;\r\n    hp: number = 4;\r\n    isFindCharacter: boolean = false;\r\n\r\n    private attackNum = 10000;\r\n\r\n    @property(DissolveEffect)\r\n    private dissolve: DissolveEffect = null;\r\n\r\n    private isFindWay: boolean = true;\r\n\r\n    @property(Vec3)\r\n    findWay: Vec3[] = [];\r\n\r\n    @property(Number)\r\n    speedTime: number = 0.5;\r\n\r\n    private _bloodOffset: Vec3 = new Vec3(0, 4.5, 0);\r\n\r\n    // 当前路径点索引\r\n    private currentWaypointIndex: number = 0;\r\n    // 是否在移动到路径点的过程中\r\n    private isMovingToWaypoint: boolean = false;\r\n\r\n    protected onLoad(): void {\r\n        // 初始化状态机\r\n        //this.stateMachine.addState(\"enemyMove\", new IdleState(this));\r\n\r\n\r\n    }\r\n    start() {\r\n        this.init();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.onUpdate(deltaTime);\r\n    }\r\n\r\n    private speed: number = 7;\r\n    private targetPos: Vec3 = new Vec3();\r\n\r\n    // private isUpate: boolean = false;\r\n    private stopDistance: number = 2; // 默认值调整为更合理的值\r\n    private callback: Function = null;\r\n\r\n    // 临时变量，减少GC压力\r\n    private tempDir: Vec3 = new Vec3();\r\n    private tempMoveVec: Vec3 = new Vec3();\r\n    private tempNextPos: Vec3 = new Vec3();\r\n    private tempForward: Vec3 = new Vec3();\r\n    private tempRotation: Quat = new Quat();\r\n    private tempParentRotation: Quat = new Quat();\r\n    private tempParentRotationInv: Quat = new Quat();\r\n\r\n    private shoudleAnimation;\r\n\r\n    @property(Material)\r\n    baseMaterial: Material = null;\r\n\r\n    @property(Material)\r\n    redMaterial: Material = null;\r\n\r\n    init() {\r\n        // this.isUpate = true;\r\n\r\n        if (!this.characterSkeletalAnimation) {\r\n            console.error(\"骨骼动画组件未初始化\");\r\n            return;\r\n        }\r\n        else {\r\n            // this.characterSkeletalAnimation.play(\"run\");\r\n        }\r\n        this.stopDistance = 2;\r\n        // this.speed = this.getMoveSpeed();\r\n        this.toMove();\r\n    }\r\n    attackEventCallBack() {\r\n        if (!Global.isAttackWarn) {\r\n            Global.warnUI.playWarnFadeAnimation();\r\n            Global.isAttackWarn = true;\r\n        }\r\n\r\n\r\n        console.log(\"攻击帧事件回调\")\r\n        let ani = (this.target as Character).node.getChildByName(\"TX_sangshigongji\")\r\n        ani.active = true;\r\n        ani.getComponent(Animation).play();\r\n    }\r\n    attacHitkEventCallBack() {\r\n\r\n        const skeletalAnim = (this.target as Character).characterSkeletalAnimation;\r\n\r\n        if (!(this.target as Character).isAttack) {\r\n            skeletalAnim.stop();\r\n            skeletalAnim.play(\"shouji\");\r\n        }\r\n        (this.target as Character).shakeRed();\r\n\r\n        skeletalAnim.once(Animation.EventType.FINISHED, () => {\r\n\r\n            skeletalAnim.play(\"kugongnanidel\");\r\n        }, this);\r\n    }\r\n    private isDie: boolean = false;\r\n    private num = 0\r\n    hit() {\r\n        if (this.hp <= 0) {\r\n            return;\r\n        }\r\n        let houseMaterial = this.node.getChildByName(\"sangshi\").getChildByName(\"fbx_zombie_runnerL\").getComponent(MeshRenderer);\r\n        tween(houseMaterial.node)\r\n            // 定义要重复的动作序列：切换材质→等待→切回材质→等待\r\n            .sequence(\r\n                // 切换到目标材质\r\n                tween().call(() => {\r\n                    this.num++;\r\n                    if (this.num >= 3) {\r\n                        //this.characterSkeletalAnimation.stop();\r\n                        this.die()\r\n                    }\r\n\r\n                    console.log(\"切换到目标材质\")\r\n                    houseMaterial.material = this.redMaterial;\r\n                }),\r\n                // 等待 0.2 秒\r\n                tween().delay(0.2),\r\n                // 切回原材质\r\n                tween().call(() => {\r\n                    houseMaterial.material = this.baseMaterial;\r\n                }),\r\n                // 等待 0.2 秒（与切换时间对称）\r\n                tween().delay(0.2)\r\n            )\r\n            // 重复整个序列 3 次\r\n            .repeat(1)\r\n            // 启动 tween\r\n            .start();\r\n    }\r\n    toMove() {\r\n        this.scheduleOnce(() => {\r\n            this.characterSkeletalAnimation.play(\"run\");\r\n        }, 0.3)\r\n\r\n        if (this.findWay && this.findWay.length > 0) {\r\n\r\n            const tweenObj = tween(this.node).to(this.speedTime, { position: this.findWay[0] });\r\n\r\n            // 循环处理剩余路径点\r\n            for (let i = 1; i < this.findWay.length; i++) {\r\n                tweenObj.to(this.speedTime, { position: this.findWay[i] });\r\n            }\r\n\r\n            tweenObj\r\n                .call(() => { this.isFindWay = false; })\r\n                .start();\r\n        }\r\n    }\r\n    private isdie:boolean = false;\r\n    die() {\r\n        if(this.isDie == false){\r\n            this.isDie = true;\r\n            Global.soundManager.playEnemySound()\r\n            if (this.shoudleAnimation) {\r\n                this.unschedule(this.shoudleAnimation)\r\n                this.shoudleAnimation = null;\r\n            }\r\n            this.attackNum = -1;\r\n    \r\n    \r\n            // this.node.getChildByName(\"sangshi\").getChildByName(\"fbx_zombie_runnerL\")\r\n            this.characterSkeletalAnimation.play(\"death\");\r\n            this.characterSkeletalAnimation.once(Animation.EventType.FINISHED, () => {\r\n                if (this.dissolve) {\r\n                    this.dissolve.play(0.8)\r\n                }\r\n                this.scheduleOnce(() => {\r\n                    this.node.active = false;\r\n                    this.node.destroy();\r\n                }, 0.8)\r\n    \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    /**移动逻辑处理 */\r\n    onUpdate(dt: number) {\r\n        if (!this.isFindCharacter) return;\r\n        Global.soundManager.playEnemySound()\r\n        if (this.isFindWay) {\r\n\r\n\r\n        } else {\r\n            // 更新目标位置\r\n            this.moveTargetWorldPos = (this.target as Character).node.worldPosition.clone();\r\n            Vec3.copy(this.targetPos, this.moveTargetWorldPos);\r\n\r\n            // 移动到目标\r\n            if (this.moveToTarget(dt, this.targetPos)) {\r\n                this.isFindCharacter = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    // 在类中添加一个标志位，确保只执行一次\r\n    private hasInitGoods: boolean = false;\r\n    attackCharactr() {\r\n        Global.soundManager.playEnemySound()\r\n        if (this.num < 3) {\r\n            if (this.attackNum > 0) {\r\n                this.characterSkeletalAnimation.play(\"attack\");\r\n                this.characterSkeletalAnimation.once(Animation.EventType.FINISHED, () => {\r\n\r\n                    // 2. 先判断组件是否存在，避免空指针\r\n                    const skeletalAnim = (this.target as Character).characterSkeletalAnimation;\r\n                    if (!skeletalAnim) {\r\n                        console.error(\"骨骼动画组件不存在！\");\r\n                        return;\r\n                    }\r\n                    if (this.hp <= 0) {\r\n                        return;\r\n                    }\r\n                    // 3. 停止当前动画\r\n\r\n\r\n\r\n                    // skeletalAnim.stop();\r\n                    // skeletalAnim.play(\"shouji\");\r\n                    // skeletalAnim.once(Animation.EventType.FINISHED, () => {\r\n                    //     //(this.target as Character)\r\n                    //     //(this.target as Character).idle();\r\n                    // }, this);\r\n                    this.attackNum--;\r\n                    if (this.hp <= 0) {\r\n                        return;\r\n                    }\r\n                    //if(this.attackNum === 9){\r\n                    if (!this.hasInitGoods) {\r\n                        let chNode = this.node.getChildByName(\"UI_gongji\")\r\n\r\n                        if (this.node.getChildByName(\"UI_ZYXS\")?.active == false) {\r\n                            this.node.getChildByName(\"UI_ZYXS\").active = true;\r\n                        }\r\n\r\n                        (this.target as Character).getComponent(goodsDrop).initGoods();\r\n                        console.log(\"(this.node.name == \", this.node.name);\r\n\r\n                        const match = this.node.name.match(/SangshiPrefab_(\\d+)/);\r\n                        if (match) {\r\n                            const index = match[1];\r\n                            // 动态获取对应的攻击UI元素\r\n                            const gongji = this.node.getParent().getChildByName(`UI_gongji_${index}`);\r\n\r\n                            if (gongji) {\r\n\r\n                                const currentPos = this.node.worldPosition.clone();\r\n                                const bloodPos: Vec3 = new Vec3();\r\n                                Vec3.add(bloodPos, currentPos, this._bloodOffset);\r\n\r\n                                // 设置位置\r\n                                gongji.setWorldPosition(bloodPos);\r\n\r\n                                gongji.active = true;\r\n                            }\r\n                        }\r\n\r\n                        //  this.node.getParent().getChildByName(\"UI_gongji\").active = true;\r\n                        // this.node.getChildByName(\"UI_gongji\").active = true;\r\n                        // this.shoudleAnimation = this.schedule(() => {\r\n                        //     this.node.getChildByName(\"UI_gongji\").getComponent(Animation).play();\r\n                        //     //this.node.getChildByName(\"UI_gongji\").getComponent(Animation).play();\r\n                        // }, 1)\r\n\r\n                        this.hasInitGoods = true;\r\n                    }\r\n                    // (this.target as Character).getComponent(goodsDrop).cornRandomPos(1);\r\n                    (this.target as Character).getComponent(goodsDrop).randomizeItemsInBackpack(0, 1);\r\n                    (this.target as Character).getComponent(goodsDrop).randomizeItemsInBackpack(1, 1);\r\n\r\n                    // }\r\n                    this.attackCharactr();\r\n                })\r\n            } else {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    /**.getParent\r\n     * 旋转角色朝向目标位置\r\n     * @param targetPos 目标位置\r\n     */\r\n    private lookAtTarget(targetPos: Vec3) {\r\n        // 计算朝向向量 (目标位置 - 当前位置)\r\n        Vec3.subtract(this.tempForward, targetPos, this.node.worldPosition);\r\n        this.tempForward.y = 0; // 保持水平方向\r\n        this.tempForward.normalize();\r\n\r\n        // 如果有父节点旋转，需要转换到局部空间\r\n        const parent = this.node.parent?.parent;\r\n        if (parent) {\r\n            // 获取父节点旋转\r\n            parent.getRotation(this.tempParentRotation);\r\n\r\n            // 计算逆旋转\r\n            Quat.invert(this.tempParentRotationInv, this.tempParentRotation);\r\n\r\n            // 将世界方向转换到父节点局部空间\r\n            Vec3.transformQuat(this.tempForward, this.tempForward, this.tempParentRotationInv);\r\n        }\r\n\r\n        // 计算旋转四元数\r\n        Quat.fromViewUp(this.tempRotation, this.tempForward, Vec3.UP);\r\n        this.node.setRotation(this.tempRotation);\r\n    }\r\n\r\n    /**\r\n     * 移动角色到目标位置\r\n     * @param deltaTime 帧间隔时间\r\n     * @param targetPos 目标位置\r\n     * @returns 是否到达目标\r\n     */\r\n    private moveToTarget(deltaTime: number, targetPos: Vec3): boolean {\r\n        // 计算方向向量\r\n        Vec3.subtract(this.tempDir, targetPos, this.node.worldPosition);\r\n        this.tempDir.y = 0; // 保持水平移动\r\n\r\n        const distance = this.tempDir.length();\r\n\r\n        // console.log(\"=================>\", distance, \"====================>\", this.stopDistance)\r\n        if (distance < this.stopDistance) { // 距离足够近，认为已到达目标\r\n            this.attackCharactr();\r\n            return true;\r\n        }\r\n\r\n        // 归一化方向向量\r\n        this.tempDir.normalize();\r\n\r\n        // 计算本次移动距离\r\n        const moveDistance = this.speed * deltaTime;\r\n        if (moveDistance >= distance) {\r\n            // 本次移动距离超过剩余距离，直接设置到目标位置\r\n\r\n            this.node.worldPosition = targetPos.clone();\r\n            this.lookAtTarget(targetPos);\r\n            this.attackCharactr();\r\n            return true;\r\n        } else {\r\n            // 计算移动向量\r\n            Vec3.multiplyScalar(this.tempMoveVec, this.tempDir, moveDistance);\r\n\r\n            // 计算下一个位置\r\n            Vec3.add(this.tempNextPos, this.node.worldPosition, this.tempMoveVec);\r\n\r\n            // 设置新位置\r\n            this.node.worldPosition = this.tempNextPos;\r\n\r\n            // 转向目标\r\n            this.lookAtTarget(targetPos);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**退出移动状态 */\r\n    onExit() {\r\n        this.moveTargetWorldPos = null;\r\n        // this.target = null;\r\n        this.speed = 0;\r\n        this.targetPos.set(0, 0, 0);\r\n        this.stopDistance = 2;\r\n        this.isFindCharacter = false;\r\n        this.callback = null;\r\n    }\r\n}\r\n\r\n\r\n"]}