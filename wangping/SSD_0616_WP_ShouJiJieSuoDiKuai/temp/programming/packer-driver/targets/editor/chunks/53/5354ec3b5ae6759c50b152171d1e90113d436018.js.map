{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_UnlockPlot/assets/Script/entitys/Character.ts"],"names":["_decorator","instantiate","Material","Node","SkinnedMeshRenderer","tween","Vec3","Entity","treeController","ResourceManager","Global","MathUtil","eventMgr","EventType","ccclass","property","BehaviourType","Character","isTarget","frontage","cornIndex","isFindTarget","Idel","moveSpeed","woodNum","cornNum","handOverNode","cornHandOverNode","curHanOverType","groundEffect","isAttack","woodParentBackpack","woodParentBackpack1","initPos","woodNUm","onlyCollectNum","setFindTarget","value","getFindTarget","start","idle","woodParent","node","getChildByName","woodParent1","setBehaviour","state","getBehaviour","nextTree","netxTree","getHandOverPosNode","getCornHandOverNode","shakeRed","houseMaterial","getComponent","sequence","call","setMaterialInstance","redyMaterial","delay","chapeauMaterial","bodyMaterial","repeat","collectWood","character","prefab","instance","loadPrefab","woodPrefabPath","i","scheduleOnce","soundManager","playPickUpSound","woodNode","originalScale","scale","clone","shrunkenScale","multiplyScalar","pos","y","playerBodyWood","playerBodyWoodAll","treeHandOverNumLimit","emit","ENTITY_SHOW_TREEHANDE","upgradeUIAnimtion","setPosition","setRotationFromEuler","parent","to","collectWoodNew","num","target","worldPosition","randomizeItemsInBackpack1","restoreItemsInBackpack1","parentWorldPos","getWorldPosition","relativeOffset","Math","floor","random","x","z","handOverPos","itemNode","itemWorldPos","LIFT_HEIGHT","randomLift","controlPoint","easing","onUpdate","ratio","position","bezierCurve","originalPos1","originalPos","currentPos","newOriginalPos","collectCorn","cornPrefabPath","playerBodyCornAll","strtMoveTree","setFindState","move","cutTree","strtMoveHandOver","handOver","moveCornPos","CutCorn","findEnemyPos","enemy","enemyParentNode","characterPosNum","isUpgrade","findEnemyHandOver","cornHandOver"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,Q,OAAAA,Q;AAAwBC,MAAAA,I,OAAAA,I;AAAyBC,MAAAA,mB,OAAAA,mB;AAAqBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACnHC,MAAAA,M;;AACEC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,M,iBAAAA,M;;AAIAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBf,U;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;+BACYgB,a,0BAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;eAAAA,a;;;2BAaCC,S,WADZH,OAAO,CAAC,WAAD,C,UAiBHC,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACb,QAAD,C,UAGRa,QAAQ,CAACb,QAAD,C,UAGRa,QAAQ,CAACb,QAAD,C,UAGRa,QAAQ,CAACX,mBAAD,C,2BAhCb,MACaa,SADb;AAAA;AAAA,4BACsC;AAAA;AAAA;AAAA,eAElCC,QAFkC,GAEd,KAFc;AAAA,eAIlCC,QAJkC,GAId,IAJc;AAIP;AAJO,eAKlCC,SALkC,GAKd,CALc;AAOlC;AAPkC,eAQlCC,YARkC,GAQV,KARU;AAAA,eAUlCL,aAVkC,GAUHA,aAAa,CAACM,IAVX;AAAA,eAYlCC,SAZkC,GAYd,CAZc;AAAA,eAalCC,OAbkC,GAahB,CAbgB;AAab;AAba,eAclCC,OAdkC,GAchB,CAdgB;;AAcd;AAdc;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAiClC;AAjCkC,eAkClCC,YAlCkC,GAkCb,IAlCa;AAmClC;AAnCkC,eAoClCC,gBApCkC,GAoCT,IApCS;AAAA,eAsClCC,cAtCkC,GAsCT,CAtCS;AAsCP;AAtCO,eAwClCC,YAxCkC,GAwCN,IAxCM;AAAA,eA0ClCC,QA1CkC,GA0Cd,KA1Cc;AAAA,eAmDlCC,kBAnDkC;AAAA,eAoDlCC,mBApDkC;AAAA,eA2GlCC,OA3GkC,GA2GlB,IAAI3B,IAAJ,CAAS,KAAT,EAAgB,GAAhB,EAAqB,CAAC,KAAtB,CA3GkB;AAAA,eA4G1B4B,OA5G0B,GA4GhB,CA5GgB;AA6GlC;AA7GkC,eA8G1BC,cA9G0B,GA8GT,EA9GS;AAAA;;AA4ClC;AACAC,QAAAA,aAAa,CAACC,KAAD,EAAiB;AAC1B,eAAKhB,YAAL,GAAoBgB,KAApB;AACH;;AACDC,QAAAA,aAAa,GAAG;AACZ,iBAAO,KAAKjB,YAAZ;AACH;;AAGDkB,QAAAA,KAAK,GAAG;AACJ,eAAKC,IAAL;AACA,cAAIC,UAAU,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,UAAzB,CAAjB;AAEA,cAAIC,WAAW,GAAG,KAAKF,IAAL,CAAUC,cAAV,CAAyB,WAAzB,CAAlB;AAGH;;AACDE,QAAAA,YAAY,CAACC,KAAD,EAAuB;AAC/B,eAAK9B,aAAL,GAAqB8B,KAArB;AACH;;AACDC,QAAAA,YAAY,GAAG;AACX,iBAAO,KAAK/B,aAAZ;AAEH;;AAEDgC,QAAAA,QAAQ,GAAG;AACP;AAAA;AAAA,gDAAeC,QAAf;AACH;;AACDC,QAAAA,kBAAkB,GAAG;AACjB,iBAAO,KAAKxB,YAAZ;AACH;;AACDyB,QAAAA,mBAAmB,GAAG;AAClB,iBAAO,KAAKxB,gBAAZ;AACH;;AACDyB,QAAAA,QAAQ,GAAG;AACP,cAAIC,aAAa,GAAG,KAAKX,IAAL,CAAUC,cAAV,CAAyB,YAAzB,EAAuCA,cAAvC,CAAsD,QAAtD,EAAgEA,cAAhE,CAA+E,QAA/E,EAAyFW,YAAzF,CAAsGlD,mBAAtG,CAApB,CADO,CAEP;AACA;AACA;AACA;;AACAC,UAAAA,KAAK,CAACgD,aAAa,CAACX,IAAf,CAAL,CACI;AADJ,WAEKa,QAFL,EAGQ;AACAlD,UAAAA,KAAK,GAAGmD,IAAR,CAAa,MAAM;AACfH,YAAAA,aAAa,CAACI,mBAAd,CAAkC,KAAKC,YAAvC,EAAqD,CAArD;AACAL,YAAAA,aAAa,CAACI,mBAAd,CAAkC,KAAKC,YAAvC,EAAqD,CAArD;AACH,WAHD,CAJR,EAQQ;AACArD,UAAAA,KAAK,GAAGsD,KAAR,CAAc,GAAd,CATR,EAUQ;AACAtD,UAAAA,KAAK,GAAGmD,IAAR,CAAa,MAAM;AACfH,YAAAA,aAAa,CAACI,mBAAd,CAAkC,KAAKG,eAAvC,EAAwD,CAAxD;AACAP,YAAAA,aAAa,CAACI,mBAAd,CAAkC,KAAKI,YAAvC,EAAqD,CAArD;AACH,WAHD,CAXR,EAeQ;AACAxD,UAAAA,KAAK,GAAGsD,KAAR,CAAc,GAAd,CAhBR,EAkBI;AAlBJ,WAmBKG,MAnBL,CAmBY,CAnBZ,EAoBI;AApBJ,WAqBKvB,KArBL;AAsBH;;AAKgB,cAAXwB,WAAW,CAACC,SAAD,EAAoB;AAEjC,gBAAMC,MAAM,GAAG,MAAM;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,UAAzB,CAAoC;AAAA;AAAA,gCAAOC,cAA3C,CAArB;AACA,cAAI3B,UAAU,GAAIuB,SAAD,CAAyBtB,IAAzB,CAA8BC,cAA9B,CAA6C,UAA7C,CAAjB,CAHiC,CAKjC;;AACA,eAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlC,cAAzB,EAAyCkC,CAAC,EAA1C,EAA8C;AAE1C,iBAAKC,YAAL,CAAkB,MAAM;AACpB;AAAA;AAAA,oCAAOC,YAAP,CAAoBC,eAApB;AACA,kBAAIC,QAAQ,GAAGxE,WAAW,CAACgE,MAAD,CAA1B;AACA,oBAAMS,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAeC,KAAf,EAAtB;AACA,oBAAMC,aAAa,GAAGH,aAAa,CAACE,KAAd,GAAsBE,cAAtB,CAAqC,IAArC,CAAtB;AACA,kBAAIC,GAAG,GAAG,KAAK9C,OAAL,CAAa2C,KAAb,EAAV;AACAG,cAAAA,GAAG,CAACC,CAAJ,IAAS,OAAQhB,SAAD,CAAyBxC,OAAzC;AACCwC,cAAAA,SAAD,CAAyBxC,OAAzB;AACA;AAAA;AAAA,oCAAOyD,cAAP;AACA;AAAA;AAAA,oCAAOC,iBAAP;;AACA,kBAAI;AAAA;AAAA,oCAAOA,iBAAP,IAA4B;AAAA;AAAA,oCAAOC,oBAAvC,EAA6D;AACzD;AAAA;AAAA,0CAASC,IAAT,CAAc;AAAA;AAAA,4CAAUC,qBAAxB;AACH;;AACD,kBAAI;AAAA;AAAA,oCAAOC,iBAAP,IAA4B,CAA5B,IAAiC;AAAA;AAAA,oCAAOA,iBAAP,IAA4B,CAAC,CAAlE,EAAqE;AACjE;AAAA;AAAA,sCAAOA,iBAAP,GAA2B,CAA3B;AACH;;AACDb,cAAAA,QAAQ,CAACc,WAAT,CAAqBR,GAArB;AACAN,cAAAA,QAAQ,CAACe,oBAAT,CAA8B,EAA9B,EAAkC,EAAlC,EAAsC,CAAtC;AACAf,cAAAA,QAAQ,CAACgB,MAAT,GAAkBhD,UAAlB;AACApC,cAAAA,KAAK,CAACoE,QAAD,CAAL,CACKiB,EADL,CACQ,GADR,EACa;AAAEf,gBAAAA,KAAK,EAAEE;AAAT,eADb,EAEKa,EAFL,CAEQ,GAFR,EAEa;AAAEf,gBAAAA,KAAK,EAAED;AAAT,eAFb,EAGKnC,KAHL;AAKH,aAxBD,EAwBG8B,CAAC,GAAG,IAxBP;AAyBH;AACJ;;AAEmB,cAAdsB,cAAc,CAAC3B,SAAD,EAAoB4B,GAApB,EAAiCC,MAAjC,EAAyC;AACzD,gBAAM5B,MAAM,GAAG,MAAM;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,UAAzB,CAAoC;AAAA;AAAA,gCAAOC,cAA3C,CAArB;AACA,cAAI3B,UAAU,GAAIuB,SAAD,CAAyBtB,IAAzB,CAA8BC,cAA9B,CAA6C,UAA7C,CAAjB;;AAGA,eAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAApB,EAAyBvB,CAAC,EAA1B,EAA8B;AAE1B,gBAAII,QAAQ,GAAGxE,WAAW,CAACgE,MAAD,CAA1B;AACA,gBAAIc,GAAG,GAAGtC,UAAU,CAACqD,aAAX,CAAyBlB,KAAzB,EAAV;AACAG,YAAAA,GAAG,CAACC,CAAJ,IAAS,OAAQhB,SAAD,CAAyBxC,OAAzC,CAJ0B,CAK1B;AACA;AACA;AACA;;AACCwC,YAAAA,SAAD,CAAyBxC,OAAzB,GAT0B,CAW1B;;AACA;AAAA;AAAA,kCAAOyD,cAAP;AACA;AAAA;AAAA,kCAAOC,iBAAP;;AAIA,gBAAI;AAAA;AAAA,kCAAOA,iBAAP,IAA4B;AAAA;AAAA,kCAAOC,oBAAvC,EAA6D;AACzD;AAAA;AAAA,wCAASC,IAAT,CAAc;AAAA;AAAA,0CAAUC,qBAAxB;AACH;;AACDZ,YAAAA,QAAQ,CAACe,oBAAT,CAA8B,EAA9B,EAAkC,EAAlC,EAAsC,CAAtC;AACAf,YAAAA,QAAQ,CAACgB,MAAT,GAAkBhD,UAAlB;AACA,iBAAKsD,yBAAL,CAA+BF,MAA/B,EAAuCpB,QAAvC;AACA,iBAAKH,YAAL,CAAkB,MAAM;AACpB,mBAAK0B,uBAAL,CAA6BjB,GAA7B,EAAkCN,QAAlC,EAA6CT,SAA7C;AACA;AAAA;AAAA,oCAAOO,YAAP,CAAoBC,eAApB;AACH,aAHD,EAGGH,CAAC,GAAG,GAHP;AAKH,WAjCwD,CAoCzD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACH;;AACD0B,QAAAA,yBAAyB,CAACF,MAAD,EAASpB,QAAT,EAAmB;AAExC,cAAI,CAACoB,MAAD,IAAW,CAACA,MAAM,CAACnD,IAAvB,EAA6B;AACzB;AACH;;AACD,gBAAMuD,cAAc,GAAGJ,MAAM,CAACnD,IAAP,CAAYwD,gBAAZ,EAAvB,CALwC,CAMxC;;AACA,cAAIC,cAAJ;;AACA,aAAG;AACCA,YAAAA,cAAc,GAAG,IAAI7F,IAAJ,EACb;AACA8F,YAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAFnB,EAGb,CAHa,EAIb;AACAF,YAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CALnB,CAAjB;AAQH,WATD,QASSH,cAAc,CAACI,CAAf,KAAqB,CAArB,IAA0BJ,cAAc,CAACK,CAAf,KAAqB,CATxD,EARwC,CAmBxC;;;AACA,cAAIC,WAAW,GAAG,IAAInG,IAAJ,CACd2F,cAAc,CAACM,CAAf,GAAmBJ,cAAc,CAACI,CADpB,EAEdN,cAAc,CAACjB,CAAf,GAAmBmB,cAAc,CAACnB,CAFpB,EAGdiB,cAAc,CAACO,CAAf,GAAmBL,cAAc,CAACK,CAHpB,CAAlB;AAKA,gBAAME,QAAQ,GAAGjC,QAAjB;AACA,gBAAMkC,YAAY,GAAGD,QAAQ,CAACR,gBAAT,GAA4BtB,KAA5B,EAArB,CA1BwC,CA4BxC;;AACA,gBAAMgC,WAAW,GAAG,CAApB;;AACA,gBAAMC,UAAU,GAAG,MAAMT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBM,WAAW,GAAG,CAAd,GAAkB,CAAnC,CAAX,IAAoDA,WAA7E;;AAEA,gBAAME,YAAY,GAAG,IAAIxG,IAAJ,CACjB,CAACoG,QAAQ,CAACZ,aAAT,CAAuBS,CAAvB,GAA2BE,WAAW,CAACF,CAAxC,IAA6C,CAA7C,GAAiDM,UAAU,EAD1C,EAEjB,CAACH,QAAQ,CAACZ,aAAT,CAAuBd,CAAvB,GAA2ByB,WAAW,CAACzB,CAAxC,IAA6C,CAA7C,GAAiD,CAFhC,EAGjB,CAAC0B,QAAQ,CAACZ,aAAT,CAAuBU,CAAvB,GAA2BC,WAAW,CAACD,CAAxC,IAA6C,CAA7C,GAAiDK,UAAU,EAH1C,CAArB,CAhCwC,CAsCxC;;AACAxG,UAAAA,KAAK,CAACqG,QAAD,CAAL,CACKhB,EADL,CACQ,GADR,EACa,CACL;AADK,WADb,EAGO;AACCqB,YAAAA,MAAM,EAAE,YADT;AAECC,YAAAA,QAAQ,EAAE,CAACnB,MAAD,EAAeoB,KAAf,KAAiC;AACvC,oBAAMC,QAAQ,GAAG;AAAA;AAAA,wCAASC,WAAT,CACbR,YADa,EAEbG,YAFa,EAGbL,WAHa,EAIbQ,KAJa,CAAjB;AAMApB,cAAAA,MAAM,CAACC,aAAP,GAAuBoB,QAAvB;AACH;AAVF,WAHP,EAeK1D,IAfL,CAeU,MAAM,CACR;AACA;AACH,WAlBL,EAmBKjB,KAnBL;AAqBH;;AACDyD,QAAAA,uBAAuB,CAACoB,YAAD,EAAeV,QAAf,EAAyB1C,SAAzB,EAA+C;AAGlE;AAEA,gBAAMqD,WAAW,GAAGD,YAApB;AACA,cAAI,CAACC,WAAL,EAAkB;AAElB,gBAAMC,UAAU,GAAGZ,QAAQ,CAACR,gBAAT,GAA4BtB,KAA5B,EAAnB,CARkE,CAUlE;;AACA,gBAAMkC,YAAY,GAAG,IAAIxG,IAAJ,CACjB,CAACgH,UAAU,CAACf,CAAX,GAAec,WAAW,CAACd,CAA5B,IAAiC,CADhB,EAEjB,CAACe,UAAU,CAACtC,CAAX,GAAeqC,WAAW,CAACrC,CAA5B,IAAiC,CAAjC,GAAqC,CAFpB,EAGjB,CAACsC,UAAU,CAACd,CAAX,GAAea,WAAW,CAACb,CAA5B,IAAiC,CAHhB,CAArB,CAXkE,CAgBlE;AACA;AACA;AACA;AACA;AACA;;AACAnG,UAAAA,KAAK,CAACqG,QAAD,CAAL,CACKhB,EADL,CACQ,GADR,EACa,EADb,EACiB;AACTqB,YAAAA,MAAM,EAAE,YADC;AAETC,YAAAA,QAAQ,EAAE,CAACnB,MAAD,EAAeoB,KAAf,KAAiC;AACvC,kBAAIxE,UAAU,GAAIuB,SAAD,CAAyBtB,IAAzB,CAA8BC,cAA9B,CAA6C,UAA7C,CAAjB;AACA,oBAAM4E,cAAc,GAAG,IAAIjH,IAAJ,CACnBmC,UAAU,CAACqD,aAAX,CAAyBS,CADN,EAEnBc,WAAW,CAACrC,CAFO,EAGnBvC,UAAU,CAACqD,aAAX,CAAyBU,CAHN,CAAvB;AAKA,oBAAMU,QAAQ,GAAG;AAAA;AAAA,wCAASC,WAAT,CACbG,UADa,EAEbR,YAFa,EAGbS,cAHa,EAIbN,KAJa,CAAjB;AAMApB,cAAAA,MAAM,CAACC,aAAP,GAAuBoB,QAAvB;AACH;AAhBQ,WADjB,EAmBK3E,KAnBL,GAtBkE,CA4ClE;AAEH,SAhUiC,CAiUlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACiB,cAAXiF,WAAW,CAACxD,SAAD,EAAoB;AACjC,gBAAMC,MAAM,GAAG,MAAM;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,UAAzB,CAAoC;AAAA;AAAA,gCAAOsD,cAA3C,CAArB;AACA,cAAI7E,WAAW,GAAIoB,SAAD,CAAyBtB,IAAzB,CAA8BC,cAA9B,CAA6C,WAA7C,CAAlB,CAFiC,CAGjC;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,iBAAKC,YAAL,CAAkB,MAAM;AACpB;AAAA;AAAA,oCAAOC,YAAP,CAAoBC,eAApB;AACA,kBAAIC,QAAQ,GAAGxE,WAAW,CAACgE,MAAD,CAA1B;AACA,oBAAMS,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAeC,KAAf,EAAtB;AACA,oBAAMC,aAAa,GAAGH,aAAa,CAACE,KAAd,GAAsBE,cAAtB,CAAqC,IAArC,CAAtB;AACA,kBAAIC,GAAG,GAAG,KAAK9C,OAAL,CAAa2C,KAAb,EAAV;AACAG,cAAAA,GAAG,CAACC,CAAJ,IAAS,OAAQhB,SAAD,CAAyBvC,OAAzC;AACCuC,cAAAA,SAAD,CAAyBvC,OAAzB;AACA;AAAA;AAAA,oCAAOiG,iBAAP;AACAjD,cAAAA,QAAQ,CAACc,WAAT,CAAqBR,GAArB;AACAN,cAAAA,QAAQ,CAACe,oBAAT,CAA8B,CAA9B,EAAiC,EAAjC,EAAqC,CAArC;AACAf,cAAAA,QAAQ,CAACgB,MAAT,GAAkB7C,WAAlB;AACAvC,cAAAA,KAAK,CAACoE,QAAD,CAAL,CACKiB,EADL,CACQ,GADR,EACa;AAAEf,gBAAAA,KAAK,EAAEE;AAAT,eADb,EAEKa,EAFL,CAEQ,GAFR,EAEa;AAAEf,gBAAAA,KAAK,EAAED;AAAT,eAFb,EAGKnC,KAHL;AAIH,aAhBD,EAgBG8B,CAAC,GAAG,IAhBP;AAiBH;AACJ,SAzZiC,CA0ZlC;;;AACAsD,QAAAA,YAAY,GAAG;AACV,eAAK9B,MAAN,CAA2B+B,YAA3B,CAAwC,KAAxC;AACA,eAAKC,IAAL,CAAW7D,SAAD,IAAuB;AAC7B,iBAAK8D,OAAL;AACH,WAFD;AAGH,SAhaiC,CAialC;;;AACAC,QAAAA,gBAAgB,GAAG;AACf,eAAKF,IAAL,CAAW7D,SAAD,IAAuB;AAC7BA,YAAAA,SAAS,CAAC6B,MAAV,GAAmB,IAAnB;AACA,iBAAKmC,QAAL;AACH,WAHD;AAIH,SAvaiC,CAwalC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,QAAAA,WAAW,GAAG;AACV,eAAKJ,IAAL,CAAW7D,SAAD,IAAuB;AAC7B,iBAAK5B,aAAL,CAAmB,KAAnB;AACA,iBAAKpB,aAAL,GAAqBA,aAAa,CAACkH,OAAnC;AACA,iBAAK1F,IAAL;AACH,WAJD;AAKH,SAvbiC,CAwblC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA2F,QAAAA,YAAY,CAACC,KAAD,EAAwBC,eAAxB,EAAyC;AACjD,eAAKR,IAAL,CAAW7D,SAAD,IAAuB;AAC7B;AAAA;AAAA,kCAAOsE,eAAP;AAEA,iBAAKlG,aAAL,CAAmB,KAAnB;AACA,iBAAKpB,aAAL,GAAqBA,aAAa,CAACM,IAAnC;AACA,iBAAKkB,IAAL;;AACA,gBAAI;AAAA;AAAA,kCAAO8F,eAAP,IAA0B,CAA9B,EAAiC;AAC7B;AAAA;AAAA,oCAAOC,SAAP,GAAmB,IAAnB,CAD6B,CAG7B;AACA;AAEH;AACJ,WAbD;AAcH,SAldiC,CAmdlC;;;AACAC,QAAAA,iBAAiB,GAAG;AAChB,eAAKX,IAAL,CAAW7D,SAAD,IAAuB;AAC7B,iBAAKyE,YAAL;AACH,WAFD;AAGH;;AAxdiC,O;;;;;iBAiBtB,I;;;;;;;iBAGG,I;;;;;;;iBAGa,I;;;;;;;iBAGH,I;;;;;;;iBAGA,I;;;;;;;iBAGkB,I","sourcesContent":["import { _decorator, Component, instantiate, Material, MeshRenderer, Node, SkeletalAnimation, SkinnedMeshRenderer, tween, Vec3 } from 'cc';\r\nimport Entity from './Entity';\r\nimport { treeController } from '../Game/TreeController';\r\nimport { ResourceManager } from '../core/ResourceManager';\r\nimport { Global } from '../core/Global';\r\nimport { EnemyTree } from './EnemyTree';\r\nimport { WorldMap } from '../Game/WorldMap';\r\nimport { GroundEffct } from '../GroundEffct';\r\nimport { MathUtil } from '../MathUtils';\r\nimport { eventMgr } from '../core/EventManager';\r\nimport { EventType } from '../core/EventType';\r\nimport { enemyCharacter } from './enemyCharacter';\r\nconst { ccclass, property } = _decorator;\r\n/**\r\n * 角色类型枚举\r\n * Tree 寻树  \r\n * handOver 交付   \r\n * transmit 传送 \r\n * idel 空闲可以切换任何状态\r\n * ConrPost 去玉米地位置点\r\n * enemyHnadOverPos 去玉米地位置点\r\n */\r\nexport enum BehaviourType {\r\n    Tree = \"Tree\",\r\n    CutTree = \"CutTree\",\r\n    HandOver = \"HandOver\",\r\n    Transmit = \"Transmit\",\r\n    ConrPost = \"ConrPost\",\r\n    CutCorn = \"CutCorn\",\r\n    FindEnemy = \"FindEnemy\",\r\n    FindLandPos = \"FindLandPos\",\r\n    Idel = \"Idel\",\r\n    EnemyHnadOverPos = \"enemyHnadOverPos\",\r\n}\r\n@ccclass('Character')\r\nexport class Character extends Entity {\r\n\r\n    isTarget: boolean = false;\r\n\r\n    frontage: boolean = true;  // true 是正面 false 是反面\r\n    cornIndex: number = 1;\r\n\r\n    // fals 没有寻找 目标  true 寻找目标状态\r\n    isFindTarget: boolean = false;\r\n\r\n    BehaviourType: BehaviourType = BehaviourType.Idel;\r\n\r\n    moveSpeed: number = 8;\r\n    woodNum: number = 0; //木材\r\n    cornNum: number = 0;//玉米\r\n\r\n    @property(Node)\r\n    axe: Node = null;\r\n\r\n    @property(Node)\r\n    sickle: Node = null;\r\n\r\n    @property(Material)\r\n    chapeauMaterial: Material = null;\r\n\r\n    @property(Material)\r\n    bodyMaterial: Material = null;\r\n\r\n    @property(Material)\r\n    redyMaterial: Material = null;\r\n\r\n    @property(SkinnedMeshRenderer)\r\n    skinnedMeshRenderer: SkinnedMeshRenderer = null;\r\n    //树的交付点\r\n    handOverNode: Node = null;\r\n    // 玉米的交付点\r\n    cornHandOverNode: Node = null;\r\n\r\n    curHanOverType: number = 0;//1 第一次交付树的  2 第二次交付 玉米的\r\n\r\n    groundEffect: GroundEffct = null;\r\n\r\n    isAttack: boolean = false;\r\n\r\n    //设置寻找目标\r\n    setFindTarget(value: boolean) {\r\n        this.isFindTarget = value;\r\n    }\r\n    getFindTarget() {\r\n        return this.isFindTarget;\r\n    }\r\n    woodParentBackpack\r\n    woodParentBackpack1\r\n    start() {\r\n        this.idle()\r\n        let woodParent = this.node.getChildByName(\"backpack\");\r\n\r\n        let woodParent1 = this.node.getChildByName(\"backpack1\");\r\n\r\n\r\n    }\r\n    setBehaviour(state: BehaviourType) {\r\n        this.BehaviourType = state;\r\n    }\r\n    getBehaviour() {\r\n        return this.BehaviourType;\r\n\r\n    }\r\n\r\n    nextTree() {\r\n        treeController.netxTree()\r\n    }\r\n    getHandOverPosNode() {\r\n        return this.handOverNode;\r\n    }\r\n    getCornHandOverNode() {\r\n        return this.cornHandOverNode;\r\n    }\r\n    shakeRed() {\r\n        let houseMaterial = this.node.getChildByName(\"playerNode\").getChildByName(\"player\").getChildByName(\"Shimin\").getComponent(SkinnedMeshRenderer);\r\n        // let materials = houseMaterial.materials;\r\n        //    materials[0] = this.redyMaterial;\r\n        //    materials[1] = this.redyMaterial;\r\n        //    houseMaterial.materials = materials\r\n        tween(houseMaterial.node)\r\n            // 定义要重复的动作序列：切换材质→等待→切回材质→等待\r\n            .sequence(\r\n                // 切换到目标材质\r\n                tween().call(() => {\r\n                    houseMaterial.setMaterialInstance(this.redyMaterial, 0);\r\n                    houseMaterial.setMaterialInstance(this.redyMaterial, 1);\r\n                }),\r\n                // 等待 0.2 秒\r\n                tween().delay(0.2),\r\n                // 切回原材质\r\n                tween().call(() => {\r\n                    houseMaterial.setMaterialInstance(this.chapeauMaterial, 0);\r\n                    houseMaterial.setMaterialInstance(this.bodyMaterial, 1);\r\n                }),\r\n                // 等待 0.2 秒（与切换时间对称）\r\n                tween().delay(0.2)\r\n            )\r\n            // 重复整个序列 3 次\r\n            .repeat(1)\r\n            // 启动 tween\r\n            .start();\r\n    }\r\n    initPos: Vec3 = new Vec3(0.017, 0.4, -0.225)\r\n    private woodNUm = 0;\r\n    //收集树\r\n    private onlyCollectNum = 10\r\n    async collectWood(character: Entity) {\r\n\r\n        const prefab = await ResourceManager.instance.loadPrefab(Global.woodPrefabPath);\r\n        let woodParent = (character as Character).node.getChildByName(\"backpack\");\r\n\r\n        //woodParent.setScale(new Vec3(0.8,0.8,0.8));\r\n        for (let i = 0; i < this.onlyCollectNum; i++) {\r\n\r\n            this.scheduleOnce(() => {\r\n                Global.soundManager.playPickUpSound()\r\n                let woodNode = instantiate(prefab);\r\n                const originalScale = woodNode.scale.clone();\r\n                const shrunkenScale = originalScale.clone().multiplyScalar(0.75);\r\n                let pos = this.initPos.clone();\r\n                pos.y += 0.22 * (character as Character).woodNum;\r\n                (character as Character).woodNum++;\r\n                Global.playerBodyWood++;\r\n                Global.playerBodyWoodAll++;\r\n                if (Global.playerBodyWoodAll >= Global.treeHandOverNumLimit) {\r\n                    eventMgr.emit(EventType.ENTITY_SHOW_TREEHANDE);\r\n                }\r\n                if (Global.upgradeUIAnimtion == 0 || Global.upgradeUIAnimtion == -1) {\r\n                    Global.upgradeUIAnimtion = 1;\r\n                }\r\n                woodNode.setPosition(pos);\r\n                woodNode.setRotationFromEuler(90, 90, 0);\r\n                woodNode.parent = woodParent;\r\n                tween(woodNode)\r\n                    .to(0.1, { scale: shrunkenScale })\r\n                    .to(0.1, { scale: originalScale })\r\n                    .start();\r\n\r\n            }, i * 0.05);\r\n        }\r\n    }\r\n\r\n    async collectWoodNew(character: Entity, num: number, target) {\r\n        const prefab = await ResourceManager.instance.loadPrefab(Global.woodPrefabPath);\r\n        let woodParent = (character as Character).node.getChildByName(\"backpack\");\r\n\r\n\r\n        for (let i = 0; i < num; i++) {\r\n\r\n            let woodNode = instantiate(prefab);\r\n            let pos = woodParent.worldPosition.clone();\r\n            pos.y += 0.32 * (character as Character).woodNum;\r\n            // // 获取 woodParent 的世界矩阵\r\n            // const worldMatrix = woodParent.worldMatrix;\r\n            // // 使用 transformMat4 方法将局部坐标转换为世界坐标\r\n            // const worldPos1 = pos.transformMat4(worldMatrix);\r\n            (character as Character).woodNum++;\r\n\r\n            // woodNode.setPosition(pos);\r\n            Global.playerBodyWood++;\r\n            Global.playerBodyWoodAll++;\r\n\r\n\r\n\r\n            if (Global.playerBodyWoodAll >= Global.treeHandOverNumLimit) {\r\n                eventMgr.emit(EventType.ENTITY_SHOW_TREEHANDE);\r\n            }\r\n            woodNode.setRotationFromEuler(90, 90, 0);\r\n            woodNode.parent = woodParent;\r\n            this.randomizeItemsInBackpack1(target, woodNode)\r\n            this.scheduleOnce(() => {\r\n                this.restoreItemsInBackpack1(pos, woodNode, (character as Character))\r\n                Global.soundManager.playPickUpSound()\r\n            }, i * 0.1)\r\n\r\n        }\r\n\r\n\r\n        //woodParent.setScale(new Vec3(0.8,0.8,0.8));\r\n        // for (let i = 0; i < num; i++) {\r\n\r\n        //     this.scheduleOnce(() => {\r\n        //         Global.soundManager.playPickUpSound()\r\n        //         let woodNode = instantiate(prefab);\r\n        //         const originalScale = woodNode.scale.clone();\r\n        //         const shrunkenScale = originalScale.clone().multiplyScalar(0.75);\r\n        //         let pos = this.initPos.clone();\r\n        //         pos.y += 0.22 * (character as Character).woodNum;\r\n        //         (character as Character).woodNum++;\r\n        //         Global.playerBodyWood++;\r\n        //         Global.playerBodyWoodAll++;\r\n        //         if(Global.playerBodyWoodAll >= Global.treeHandOverNumLimit){\r\n        //             eventMgr.emit(EventType.ENTITY_SHOW_TREEHANDE);\r\n        //         }\r\n        //         if (Global.upgradeUIAnimtion == 0 || Global.upgradeUIAnimtion == -1) {\r\n        //             Global.upgradeUIAnimtion = 1;\r\n        //         }\r\n        //         woodNode.setPosition(pos);\r\n        //         woodNode.setRotationFromEuler(90, 90, 0);\r\n        //         woodNode.parent = woodParent;\r\n        //         tween(woodNode)\r\n        //             .to(0.1, { scale: shrunkenScale })\r\n        //             .to(0.1, { scale: originalScale })\r\n        //             .start();\r\n\r\n        //     }, i * 0.05);\r\n        // }\r\n    }\r\n    randomizeItemsInBackpack1(target, woodNode) {\r\n\r\n        if (!target || !target.node) {\r\n            return;\r\n        }\r\n        const parentWorldPos = target.node.getWorldPosition();\r\n        // 生成相对于父节点的随机偏移量\r\n        let relativeOffset: Vec3;\r\n        do {\r\n            relativeOffset = new Vec3(\r\n                // 缩小 x 轴随机范围至 -1 到 1\r\n                Math.floor(Math.random() * 3) - 1,\r\n                0,\r\n                // 缩小 z 轴随机范围至 -1 到 1\r\n                Math.floor(Math.random() * 3) - 1\r\n            );\r\n\r\n        } while (relativeOffset.x === 0 && relativeOffset.z === 0);\r\n\r\n        // 计算相对于父节点的目标位置\r\n        let handOverPos = new Vec3(\r\n            parentWorldPos.x + relativeOffset.x,\r\n            parentWorldPos.y + relativeOffset.y,\r\n            parentWorldPos.z + relativeOffset.z\r\n        );\r\n        const itemNode = woodNode;\r\n        const itemWorldPos = itemNode.getWorldPosition().clone();\r\n\r\n        // 计算贝塞尔曲线控制点\r\n        const LIFT_HEIGHT = 2;\r\n        const randomLift = () => Math.floor(Math.random() * (LIFT_HEIGHT * 2 + 1)) - LIFT_HEIGHT;\r\n\r\n        const controlPoint = new Vec3(\r\n            (itemNode.worldPosition.x + handOverPos.x) / 2 + randomLift(),\r\n            (itemNode.worldPosition.y + handOverPos.y) / 2 + 6,\r\n            (itemNode.worldPosition.z + handOverPos.z) / 2 + randomLift()\r\n        );\r\n\r\n        // 执行贝塞尔曲线动画\r\n        tween(itemNode)\r\n            .to(0.1, {\r\n                // scale: new Vec3(1, 1, 1)\r\n            }, {\r\n                easing: 'cubicInOut',\r\n                onUpdate: (target: Node, ratio: number) => {\r\n                    const position = MathUtil.bezierCurve(\r\n                        itemWorldPos,\r\n                        controlPoint,\r\n                        handOverPos,\r\n                        ratio\r\n                    );\r\n                    target.worldPosition = position;\r\n                }\r\n            })\r\n            .call(() => {\r\n                // backpack.indexLength--;\r\n                // this.randomizeItemsInBackpack(backpackIndex, count - 1);\r\n            })\r\n            .start();\r\n\r\n    }\r\n    restoreItemsInBackpack1(originalPos1, itemNode, character: Character) {\r\n\r\n\r\n        // 遍历所有物品，执行恢复动画\r\n\r\n        const originalPos = originalPos1\r\n        if (!originalPos) return;\r\n\r\n        const currentPos = itemNode.getWorldPosition().clone();\r\n\r\n        // 贝塞尔曲线控制点\r\n        const controlPoint = new Vec3(\r\n            (currentPos.x + originalPos.x) / 2,\r\n            (currentPos.y + originalPos.y) / 2 + 5,\r\n            (currentPos.z + originalPos.z) / 2\r\n        );\r\n        // for(let i = 0 ;i <5;i++){\r\n        //     this.scheduleOnce(()=>{\r\n        //         Global.soundManager.playPickUpSound()\r\n        //     },i*0.1)\r\n        // }\r\n        // Global.soundManager.playPickUpSound()\r\n        tween(itemNode)\r\n            .to(0.3, {}, {\r\n                easing: 'cubicInOut',\r\n                onUpdate: (target: Node, ratio: number) => {\r\n                    let woodParent = (character as Character).node.getChildByName(\"backpack\");\r\n                    const newOriginalPos = new Vec3(\r\n                        woodParent.worldPosition.x,\r\n                        originalPos.y,\r\n                        woodParent.worldPosition.z\r\n                    );\r\n                    const position = MathUtil.bezierCurve(\r\n                        currentPos,\r\n                        controlPoint,\r\n                        newOriginalPos,\r\n                        ratio\r\n                    );\r\n                    target.worldPosition = position;\r\n                }\r\n            })\r\n            .start();\r\n\r\n\r\n        // 恢复完成后，重置indexLength\r\n\r\n    }\r\n    // randomizeItemsInBackpack(target, count: number = 1) {\r\n    //     const backpack = target;\r\n    //     const parentWorldPos = backpack.getWorldPosition();\r\n    //     // 生成相对于父节点的随机偏移量\r\n    //     let relativeOffset: Vec3;\r\n    //     do {\r\n    //         relativeOffset = new Vec3(\r\n    //             Math.floor(Math.random() * 7) - 3, // -3 到 3\r\n    //             -0.35,\r\n    //             Math.floor(Math.random() * 7) - 3  // -3 到 3\r\n    //         );\r\n    //     } while (relativeOffset.x === 0 && relativeOffset.z === 0);\r\n\r\n    //     // 计算相对于父节点的目标位置\r\n    //     let handOverPos = new Vec3(\r\n    //         parentWorldPos.x + relativeOffset.x,\r\n    //         parentWorldPos.y + relativeOffset.y,\r\n    //         parentWorldPos.z + relativeOffset.z\r\n    //     );\r\n\r\n    //     const itemNode = backpack.parentNode.children[backpack.indexLength];\r\n    //     const itemWorldPos = itemNode.getWorldPosition().clone();\r\n\r\n    //     // 计算贝塞尔曲线控制点\r\n    //     const LIFT_HEIGHT = 2;\r\n    //     const randomLift = () => Math.floor(Math.random() * (LIFT_HEIGHT * 2 + 1)) - LIFT_HEIGHT;\r\n\r\n    //     const controlPoint = new Vec3(\r\n    //         (itemNode.worldPosition.x + handOverPos.x) / 2 + randomLift(),\r\n    //         (itemNode.worldPosition.y + handOverPos.y) / 2 + 6,\r\n    //         (itemNode.worldPosition.z + handOverPos.z) / 2 + randomLift()\r\n    //     );\r\n\r\n    //     // 执行贝塞尔曲线动画\r\n    //     tween(itemNode)\r\n    //         .to(0.1, {\r\n    //             // scale: new Vec3(1, 1, 1)\r\n    //         }, {\r\n    //             easing: 'cubicInOut',\r\n    //             onUpdate: (target: Node, ratio: number) => {\r\n    //                 const position = MathUtil.bezierCurve(\r\n    //                     itemWorldPos,\r\n    //                     controlPoint,\r\n    //                     handOverPos,\r\n    //                     ratio\r\n    //                 );\r\n    //                 target.worldPosition = position;\r\n    //             }\r\n    //         })\r\n    //         .call(() => {\r\n    //             // backpack.indexLength--;\r\n    //             // this.randomizeItemsInBackpack(backpackIndex, count - 1);\r\n    //         })\r\n    //         .start();\r\n    // }\r\n\r\n    //收集玉米\r\n    async collectCorn(character: Entity) {\r\n        const prefab = await ResourceManager.instance.loadPrefab(Global.cornPrefabPath);\r\n        let woodParent1 = (character as Character).node.getChildByName(\"backpack1\");\r\n        //let woodParent = (character as Character).node.getChildByName(\"backpack\");\r\n        //  if (woodParent.children.length <= 0) {\r\n        // let poss1 = woodParent1.position.clone()\r\n        // let poss = woodParent.position.clone()\r\n        // woodParent.setPosition(poss1)\r\n        // woodParent1.setPosition(poss)\r\n\r\n        //   }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            this.scheduleOnce(() => {\r\n                Global.soundManager.playPickUpSound()\r\n                let woodNode = instantiate(prefab);\r\n                const originalScale = woodNode.scale.clone();\r\n                const shrunkenScale = originalScale.clone().multiplyScalar(0.75);\r\n                let pos = this.initPos.clone();\r\n                pos.y += 0.23 * (character as Character).cornNum;\r\n                (character as Character).cornNum++;\r\n                Global.playerBodyCornAll++;\r\n                woodNode.setPosition(pos);\r\n                woodNode.setRotationFromEuler(0, 90, 0);\r\n                woodNode.parent = woodParent1;\r\n                tween(woodNode)\r\n                    .to(0.1, { scale: shrunkenScale })\r\n                    .to(0.1, { scale: originalScale })\r\n                    .start();\r\n            }, i * 0.05);\r\n        }\r\n    }\r\n    //开始移动 找树\r\n    strtMoveTree() {\r\n        (this.target as EnemyTree).setFindState(false)\r\n        this.move((character: Entity) => {\r\n            this.cutTree();\r\n        })\r\n    }\r\n    //开始移动到交付点\r\n    strtMoveHandOver() {\r\n        this.move((character: Entity) => {\r\n            character.target = null;\r\n            this.handOver();\r\n        })\r\n    }\r\n    // //到树地块的传送点\r\n    // moveTransmit() {\r\n    //     this.move((character: Entity) => {\r\n    //         this.setFindTarget(false);\r\n    //         this.BehaviourType = BehaviourType.Idel;\r\n    //         this.idle();\r\n    //     })\r\n    // }\r\n    //移动到玉米地块的位置\r\n    moveCornPos() {\r\n        this.move((character: Entity) => {\r\n            this.setFindTarget(false);\r\n            this.BehaviourType = BehaviourType.CutCorn;\r\n            this.idle();\r\n        })\r\n    }\r\n    // //寻找怪物\r\n    // findEnemy() {\r\n    //     this.move((character: Entity) => {\r\n    //         this.useSkill(()=>{\r\n    //              eventMgr.emit(EventType.ENTITY_ENEMY_DIE,this);\r\n\r\n    //         });\r\n    //     })\r\n    // }\r\n    //寻找怪物\r\n\r\n    findEnemyPos(enemy: enemyCharacter, enemyParentNode) {\r\n        this.move((character: Entity) => {\r\n            Global.characterPosNum++;\r\n\r\n            this.setFindTarget(false);\r\n            this.BehaviourType = BehaviourType.Idel;\r\n            this.idle();\r\n            if (Global.characterPosNum >= 4) {\r\n                Global.isUpgrade = true;\r\n\r\n                //  enemyParentNode.active = true;\r\n                // Global.warnUI.playWarnFadeAnimation();\r\n\r\n            }\r\n        })\r\n    }\r\n    //到达交付点\r\n    findEnemyHandOver() {\r\n        this.move((character: Entity) => {\r\n            this.cornHandOver();\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}