{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0616_WP_ShouJiJieSuoDiKuai/assets/Script/states/CornHandOver.ts"],"names":["_decorator","tween","Vec3","State","CharacterType","BehaviourType","MathUtil","Global","eventMgr","EventType","ccclass","property","CornHandOver","constructor","entity","target","callBcak","cornProcessCompleted","onEnter","callback","getType","CHARACTER","characterSkeletalAnimation","console","error","play","handOver","onUpdate","dt","log","onExit","handOverPosNode","getCornHandOverNode","handOverPos","worldPosition","clone","woodParent","node","getChildByName","children","length","setBehaviour","Idel","setFindTarget","cornNum","warn","woodNode","woodWorldPos","getWorldPosition","LIFT_HEIGHT","controlPoint","x","y","z","to","scale","easing","ratio","position","bezierCurve","call","soundManager","playHandOverSound","cornHandOverNum","cornHandOverNumLimit","emit","ENTITY_CORN_COMPLATE","removeAllChildren","ENTITY_CORNHAND_OVER_ADD","removeFromParent","destroy","treeHandOverNum","start"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Vec3 } from 'cc';\r\nimport State from './State';\r\nimport Entity, { CharacterType } from '../entitys/Entity';\r\nimport { BehaviourType, Character } from '../entitys/Character';\r\nimport { MathUtil } from '../MathUtils';\r\nimport { Global } from '../core/Global';\r\nimport { eventMgr } from '../core/EventManager';\r\nimport { EventType } from '../core/EventType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CornHandOver')\r\nexport class CornHandOver extends State {\r\n    target: Entity = null;\r\n    private callBcak: Function = null;\r\n    private cornProcessCompleted = false;\r\n    constructor(entity: Entity) {\r\n        super();\r\n        this.entity = entity;\r\n\r\n    }\r\n    onEnter(callback?: (...agrs: unknown[]) => void) {\r\n        if (this.entity.getType() == CharacterType.CHARACTER) {\r\n            // 检查骨骼动画组件是否存在\r\n            if (!this.entity.characterSkeletalAnimation) {\r\n                console.error(\"骨骼动画组件未初始化\");\r\n                return;\r\n            }\r\n\r\n            this.entity.characterSkeletalAnimation.play(\"kugongnanidel\");\r\n\r\n        }\r\n        this.handOver();\r\n    }\r\n    onUpdate(dt: number) {\r\n        console.log(\"CornHandOver\")\r\n        // this.handOver();\r\n    }\r\n    onExit(callback?: (...agrs: unknown[]) => void) {\r\n\r\n    }\r\n    handOver() {\r\n        // 获取交付位置节点\r\n        let handOverPosNode = (this.entity as Character).getCornHandOverNode();\r\n        if (!handOverPosNode) {\r\n            console.error(\"找不到交付位置节点\");\r\n            return;\r\n        }\r\n        let handOverPos = handOverPosNode.worldPosition.clone();\r\n\r\n        // 获取背包节点\r\n        let woodParent = (this.entity as Character).node.getChildByName(\"backpack1\");\r\n        if (!woodParent) {\r\n            console.error(\"找不到背包节点\");\r\n            return;\r\n        }\r\n\r\n        // 检查背包中是否有木头\r\n        if (woodParent.children.length <= 0) {\r\n            (this.entity as Character).setBehaviour(BehaviourType.Idel);\r\n            (this.entity as Character).setFindTarget(false);\r\n            (this.entity as Character).cornNum = 0;\r\n            console.warn(\"背包中没有可交付的木头\");\r\n            return;\r\n        }\r\n\r\n        // 获取最后一个木头节点\r\n        const woodNode = woodParent.children[woodParent.children.length - 1];\r\n        const woodWorldPos = woodNode.getWorldPosition().clone();\r\n\r\n        // 计算贝塞尔曲线控制点（提升高度可配置）\r\n        const LIFT_HEIGHT = 10; // 可提取为配置项\r\n        const controlPoint = new Vec3(\r\n            (woodNode.worldPosition.x + handOverPos.x) / 2,\r\n            (woodNode.worldPosition.y + handOverPos.y) / 2 + LIFT_HEIGHT,\r\n            (woodNode.worldPosition.z + handOverPos.z) / 2\r\n        );\r\n\r\n        // 执行贝塞尔曲线动画\r\n        tween(woodNode)\r\n            .to(0.1, {\r\n                scale: new Vec3(1, 1, 1)\r\n            }, {\r\n                easing: 'cubicInOut',\r\n                onUpdate: (target: Node, ratio: number) => {\r\n                    // 计算贝塞尔曲线位置\r\n                    const position = MathUtil.bezierCurve(\r\n                        woodWorldPos,\r\n                        controlPoint,\r\n                        handOverPos,\r\n                        ratio\r\n                    );\r\n                    target.worldPosition = position;\r\n                }\r\n            })\r\n            .call(() => {\r\n                Global.soundManager.playHandOverSound();\r\n                if(!this.cornProcessCompleted && Global.cornHandOverNum >= Global.cornHandOverNumLimit){\r\n                    this.cornProcessCompleted = true;\r\n                    eventMgr.emit(EventType.ENTITY_CORN_COMPLATE,this,this.entity)\r\n                    woodParent.removeAllChildren();\r\n                    return;\r\n                }\r\n                // 增加交付计数\r\n                Global.cornHandOverNum++;\r\n                eventMgr.emit(EventType.ENTITY_CORNHAND_OVER_ADD)\r\n                // 从场景中移除木头\r\n                woodNode.removeFromParent();\r\n                woodNode.destroy();\r\n                this.handOver();\r\n                // 注意：这里不再递归调用this.handOver()\r\n                // 而是通过事件或其他方式通知可以继续交付\r\n                console.log(\"木头交付完成，当前已交付数量:\", Global.treeHandOverNum);\r\n            })\r\n            .start();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]}