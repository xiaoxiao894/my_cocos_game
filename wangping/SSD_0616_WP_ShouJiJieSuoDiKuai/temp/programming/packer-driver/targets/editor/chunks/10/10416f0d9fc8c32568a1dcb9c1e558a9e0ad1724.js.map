{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_UnlockPlot/assets/Script/Game/TreeController.ts"],"names":["_decorator","EnemyTree","ccclass","property","TreeController","enemyTreeList","curCutTreeIndex","unLockTreeNum","parentNode","Instance","_instance","initAllTree","i","children","length","enemyTree","enemyTreeComp","getComponent","setFindState","showArrowTarger","push","onLoad","netxTree","update","deltaTime","treeController"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;gCAGjBI,c,WADZF,OAAO,CAAC,gBAAD,C,2BAAR,MACaE,cADb,CAC6B;AAAA;AAAA,eAEjBC,aAFiB,GAEY,EAFZ;AAUzB;AACA;AAXyB,eAYjBC,eAZiB,GAYS,CAZT;AAazB;AAbyB,eAcjBC,aAdiB,GAcO,CAdP;AAAA,eAejBC,UAfiB,GAeE,IAfF;AAAA;;AAIC,mBAARC,QAAQ,GAAG;AACzB,cAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIN,cAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKM,SAAZ;AACH;;AAODC,QAAAA,WAAW,CAACH,UAAD,EAAmB;AAC1B,eAAKA,UAAL,GAAkBA,UAAlB;;AACA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,UAAL,CAAgBK,QAAhB,CAAyBC,MAA7C,EAAqDF,CAAC,EAAtD,EAA0D;AAAE;AACxD,gBAAIG,SAAS,GAAG,KAAKP,UAAL,CAAgBK,QAAhB,CAAyBD,CAAzB,CAAhB;AACA,gBAAII,aAAa,GAAGD,SAAS,CAACE,YAAV;AAAA;AAAA,uCAApB;;AACA,gBAAIL,CAAC,GAAG,KAAKL,aAAb,EAA4B;AAExBS,cAAAA,aAAa,CAACE,YAAd,CAA2B,IAA3B;AACAF,cAAAA,aAAa,CAACG,eAAd;AACA,mBAAKb,eAAL,IAAwB,CAAxB;AACH;;AAED,iBAAKD,aAAL,CAAmBe,IAAnB,CAAwBJ,aAAxB;AAEH;AACJ;;AACDK,QAAAA,MAAM,GAAG,CAGR;;AACDC,QAAAA,QAAQ,GAAG;AACP,cAAI,KAAKhB,eAAL,IAAwB,KAAKD,aAAL,CAAmBS,MAA/C,EAAuD;AACnD;AACA;AACH;;AACD,cAAIE,aAAa,GAAG,KAAKX,aAAL,CAAmB,KAAKC,eAAxB,CAApB;AACAU,UAAAA,aAAa,CAACE,YAAd,CAA2B,IAA3B;AACAF,UAAAA,aAAa,CAACG,eAAd;AACA,eAAKb,eAAL,IAAwB,CAAxB;AAGH;;AAEDiB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAnDwB,O,UAGXd,S,GAA4B,I,yBAkD9C;;;gCACae,c,GAAiBrB,cAAc,CAACK,Q","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { EnemyTree } from '../entitys/EnemyTree';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TreeController')\r\nexport class TreeController  {\r\n\r\n    private enemyTreeList: EnemyTree[] = [];\r\n    public static _instance: TreeController = null;\r\n    public static get Instance() {\r\n        if (this._instance == null) {\r\n            this._instance = new TreeController();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始第一进入地块 解锁4 个砍伐一个在解锁一个\r\n    //private squenceTree: number = 4;\r\n    private curCutTreeIndex: number = 0;\r\n    //第一解锁多少\r\n    private unLockTreeNum: number = 4;\r\n    private parentNode: Node = null;\r\n    initAllTree(parentNode: Node) {\r\n        this.parentNode = parentNode;\r\n        for (let i = 0; i < this.parentNode.children.length; i++) { //this.parentNode.children.length\r\n            let enemyTree = this.parentNode.children[i];\r\n            let enemyTreeComp = enemyTree.getComponent(EnemyTree);\r\n            if (i < this.unLockTreeNum) {\r\n\r\n                enemyTreeComp.setFindState(true);\r\n                enemyTreeComp.showArrowTarger();\r\n                this.curCutTreeIndex += 1;\r\n            }\r\n\r\n            this.enemyTreeList.push(enemyTreeComp);\r\n            \r\n        }\r\n    }\r\n    onLoad() {\r\n\r\n\r\n    }\r\n    netxTree() {\r\n        if (this.curCutTreeIndex >= this.enemyTreeList.length) {\r\n            //this.curCutTreeIndex = 0;\r\n            return;\r\n        }\r\n        let enemyTreeComp = this.enemyTreeList[this.curCutTreeIndex]\r\n        enemyTreeComp.setFindState(true);\r\n        enemyTreeComp.showArrowTarger();\r\n        this.curCutTreeIndex += 1;\r\n\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n// 导出全局单例\r\nexport const treeController = TreeController.Instance;\r\n\r\n\r\n"]}