{"version":3,"sources":["file:///D:/playable/wangping/SSD_0616_WP_ShouJiJieSuoDiKuai/assets/Script/entitys/Entity.ts"],"names":["_decorator","Component","SkeletalAnimation","StateMachine","AttackState","DieState","HurtState","IdleState","MoveState","CutTreeState","HandOver","CutCornState","CornHandOver","CharacterType","ccclass","property","Entity","id","entityName","hp","maxHp","attack","defense","type","CHARACTER","moveSpeed","stateMachine","target","moveTargetWorldPos","moveCallBack","onLoad","addState","setupEventListeners","getMachineName","getStateName","start","setMoveSpeed","speed","getMoveSpeed","setData","name","getId","getEntityName","getType","entitySetPosition","pos","node","setPosition","entityGetPosition","position","takeDamage","damage","callback","finalDamage","Math","max","console","log","die","setState","heal","amount","min","move","idle","update","dt","useSkill","cutTree","handOver","cornHandOver","cutCorn"],"mappings":"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","sourcesContent":["import { _decorator, Component, SkeletalAnimation, Vec3 } from \"cc\";\r\nimport { eventMgr } from \"../core/EventManager\";\r\nimport { EventType } from \"../core/EventType\";\r\nimport StateMachine from \"../core/SateMachine\";\r\nimport AttackState from \"../states/AttackState\";\r\nimport DieState from \"../states/DieState\";\r\nimport HurtState from \"../states/HurtState\";\r\nimport IdleState from \"../states/IdleState\";\r\nimport { MoveState } from \"../states/MoveState\";\r\nimport { CutTreeState } from \"../states/CutTreeState\";\r\nimport { HandOver } from \"../states/HandOver\";\r\nimport { CutCornState } from \"../states/CutCornState\";\r\nimport { CornHandOver } from \"../states/CornHandOver\";\r\n\r\n/**\r\n * 角色类型枚举\r\n */\r\nexport enum CharacterType {\r\n    CHARACTER = \"character\",    // 玩家角色\r\n    ENEMY_TREE = \"enemyTree\",   // 树型敌人\r\n    ENEMY = \"enemy\",            // 普通敌人\r\n    ENEMY_ELITE = \"enemy1\"      // 精英敌人(红色)\r\n}\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Entity')\r\nexport default class Entity extends Component {\r\n\r\n\r\n    id: string;\r\n    entityName: string;\r\n    hp: number = 0;\r\n    maxHp: number = 0;\r\n    attack: number = 0;\r\n    defense: number = 0;\r\n    type: string = CharacterType.CHARACTER; // character  enemeyTree  enmey enemy1\r\n\r\n    protected moveSpeed: number = 0;\r\n\r\n    stateMachine: StateMachine = new StateMachine();\r\n\r\n    target: unknown = null;\r\n\r\n    moveTargetWorldPos:Vec3 = null; //移动到的目标位置\r\n\r\n    protected moveCallBack:Function = null;\r\n\r\n    //不同的怪有不同的动画方式\r\n    @property(SkeletalAnimation)\r\n    characterSkeletalAnimation: SkeletalAnimation = null;\r\n\r\n    protected onLoad(): void {\r\n\r\n        // 初始化状态机\r\n        this.stateMachine.addState(\"idle\", new IdleState(this));\r\n        this.stateMachine.addState(\"attack\", new AttackState(this));\r\n        this.stateMachine.addState(\"hurt\", new HurtState(this));\r\n        this.stateMachine.addState(\"die\", new DieState(this));\r\n        this.stateMachine.addState(\"move\", new MoveState(this));\r\n        this.stateMachine.addState(\"cutTree\", new CutTreeState(this));\r\n        this.stateMachine.addState(\"handOver\", new HandOver(this));\r\n        this.stateMachine.addState(\"cutCorn\", new CutCornState(this));\r\n        this.stateMachine.addState(\"cornHandOver\", new CornHandOver(this));\r\n\r\n\r\n        // 监听事件\r\n        this.setupEventListeners();\r\n    }\r\n    getMachineName() {\r\n        return this.stateMachine.getStateName();\r\n    }\r\n\r\n    protected start(): void {\r\n        //this.idle(this);\r\n    }\r\n    //设置移动速度\r\n    setMoveSpeed(speed: number) {\r\n        this.moveSpeed = speed;\r\n    }\r\n    //获取移动速度\r\n    getMoveSpeed() {\r\n        return this.moveSpeed;\r\n    }\r\n    //没有配置表手动默认\r\n    setData(id: string, name: string, hp: number, attack: number, type: string) {\r\n        this.id = id;\r\n        this.entityName = name;\r\n        this.hp = hp;\r\n        this.maxHp = hp;\r\n        this.attack = attack;\r\n        this.type = type;\r\n    }\r\n    //获取ID\r\n    getId() {\r\n        return this.id;\r\n\r\n    }\r\n    getEntityName() {\r\n        return this.entityName;\r\n    }\r\n    /**获取类型 */\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    entitySetPosition(pos: Vec3) {\r\n        this.node.setPosition(pos);\r\n    }\r\n    entityGetPosition() {\r\n        return this.node.position;\r\n    }\r\n    private setupEventListeners(): void {\r\n  \r\n    }\r\n    takeDamage(damage: number,callback?: (...agrs:unknown[]) => void): void {\r\n        const finalDamage = Math.max(damage - this.defense, 0);\r\n        console.log(\"damage damage \" + damage);\r\n        console.log(\"this.defense this.defense \" + this.defense);\r\n        this.hp -= finalDamage;\r\n        //eventMgr.emit(EventType.ENTITY_TAKE_DAMAGE, this, finalDamage);\r\n        if (this.hp <= 0) {\r\n            this.die(callback);\r\n        } else {\r\n            this.stateMachine.setState(\"hurt\");\r\n        }\r\n        if(callback){\r\n            callback(this.hp <= 0);\r\n        }\r\n    }\r\n\r\n\r\n    heal(amount: number): void {\r\n        this.hp = Math.min(this.hp + amount, this.maxHp);\r\n      \r\n    }\r\n\r\n    die(callback?: (...agrs:unknown[]) => void): void {\r\n\r\n        this.stateMachine.setState(\"die\",callback);\r\n    \r\n    }\r\n    move(callback?: (...agrs:unknown[]) => void): void {\r\n      \r\n        this.stateMachine.setState(\"move\",callback);\r\n    }\r\n    idle() {\r\n     \r\n        this.stateMachine.setState(\"idle\");\r\n    }\r\n\r\n    update(dt: number): void {\r\n\r\n        this.stateMachine.update(dt);\r\n    }\r\n\r\n    useSkill(callback?: (...agrs:unknown[]) => void): void {\r\n        this.stateMachine.setState(\"attack\",callback);\r\n    }\r\n    cutTree(callback?: (...agrs:unknown[]) => void): void {\r\n        this.stateMachine.setState(\"cutTree\",callback);\r\n    }\r\n    handOver(callback?: (...agrs:unknown[]) => void){\r\n        this.stateMachine.setState(\"handOver\",callback);\r\n    }\r\n    cornHandOver(callback?: (...agrs:unknown[]) => void){\r\n        this.stateMachine.setState(\"cornHandOver\",callback);\r\n    }\r\n    cutCorn(callback?: (...agrs:unknown[]) => void){\r\n        this.stateMachine.setState(\"cutCorn\",callback);\r\n    }\r\n}\r\n\r\n"]}