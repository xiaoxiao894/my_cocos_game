{"version":3,"sources":["file:///D:/Cocos/PlayAble/SSD_0616_WP_ShouJiJieSuoDiKuai/assets/Script/goodsDrop.ts"],"names":["_decorator","Component","tween","Vec3","MathUtil","Global","eventMgr","EventType","ccclass","property","goodsDrop","backpacks","parentNode","indexLength","originalPositions","Map","name","restoringCount","totalRestoringCount","start","initGoods","update","deltaTime","forEach","backpack","node","getChildByName","children","length","child","set","getWorldPosition","clone","randomizeItemsInBackpack","backpackIndex","count","temp","parentWorldPos","relativeOffset","Math","floor","random","x","z","handOverPos","y","itemNode","itemWorldPos","LIFT_HEIGHT","randomLift","controlPoint","worldPosition","to","easing","onUpdate","target","ratio","position","bezierCurve","call","restoreItemsInBackpack","ii","itemsToRestore","i","index","itemRestoreComplete","scheduleOnce","originalPos","get","currentPos","soundManager","playPickUpSound","checkAllItemsRestored","emit","GAME_OVER","restoreItemsInAllBackpacks","_"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Vec3 } from 'cc';\r\nimport { MathUtil } from './MathUtils';\r\nimport { Global } from './core/Global';\r\n\r\nimport { eventMgr } from './core/EventManager';\r\nimport { EventType } from './core/EventType';\r\nconst { ccclass, property } = _decorator;\r\n\r\ninterface BackpackInfo {\r\n    parentNode: Node | null;\r\n    indexLength: number;\r\n    originalPositions: Map<Node, Vec3>;\r\n    name: string;\r\n    // 新增：跟踪当前背包中正在归位的物品数量\r\n    restoringCount: number;\r\n}\r\n\r\n@ccclass('goodsDrop')\r\nexport class goodsDrop extends Component {\r\n    backpacks: BackpackInfo[] = [\r\n        { \r\n            parentNode: null, \r\n            indexLength: 0, \r\n            originalPositions: new Map<Node, Vec3>(), \r\n            name: \"backpack1\",\r\n            restoringCount: 0\r\n        },\r\n        { \r\n            parentNode: null, \r\n            indexLength: 0, \r\n            originalPositions: new Map<Node, Vec3>(), \r\n            name: \"backpack\",\r\n            restoringCount: 0\r\n        }\r\n    ];\r\n    \r\n    // 跟踪所有背包中正在归位的物品总数\r\n    private totalRestoringCount = 0;\r\n\r\n    start() {\r\n        this.initGoods();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        // 可以添加帧更新逻辑\r\n    }\r\n\r\n    // 初始化所有背包\r\n    initGoods() {\r\n        this.backpacks.forEach(backpack => {\r\n            backpack.parentNode = this.node.getChildByName(backpack.name);\r\n            if (!backpack.parentNode) return;\r\n\r\n            backpack.indexLength = backpack.parentNode.children.length - 1;\r\n\r\n            // 保存所有物品的初始位置\r\n            backpack.parentNode.children.forEach(child => {\r\n                backpack.originalPositions.set(child, child.getWorldPosition().clone());\r\n            });\r\n        });\r\n    }\r\n\r\n    // 随机化指定背包中的物品位置\r\n    randomizeItemsInBackpack(backpackIndex: number, count: number = 1) {\r\n        let temp = -0.8\r\n        if(backpackIndex == 0){\r\n            temp=-0.5\r\n        }\r\n\r\n        const backpack = this.backpacks[backpackIndex];\r\n        if (count < 0 || !backpack.parentNode || backpack.indexLength < 0) return;\r\n\r\n        const parentWorldPos = backpack.parentNode.getWorldPosition();\r\n\r\n        // 生成相对于相对于父节点的随机偏移量\r\n        let relativeOffset: Vec3;\r\n        do {\r\n            relativeOffset = new Vec3(\r\n                Math.floor(Math.random() * 7) - 3, // -3 到 3\r\n                temp,\r\n                Math.floor(Math.random() * 7) - 3  // -3 到 3\r\n            );\r\n        } while (relativeOffset.x === 0 && relativeOffset.z === 0);\r\n\r\n\r\n        // 计算相对于父节点的目标位置\r\n        let handOverPos = new Vec3(\r\n            parentWorldPos.x + relativeOffset.x,\r\n            parentWorldPos.y + relativeOffset.y,\r\n            parentWorldPos.z + relativeOffset.z\r\n        );\r\n\r\n        const itemNode = backpack.parentNode.children[backpack.indexLength];\r\n        const itemWorldPos = itemNode.getWorldPosition().clone();\r\n\r\n        // 计算贝塞尔曲线控制点\r\n        const LIFT_HEIGHT = 2;\r\n        const randomLift = () => Math.floor(Math.random() * (LIFT_HEIGHT * 2 + 1)) - LIFT_HEIGHT;\r\n\r\n        const controlPoint = new Vec3(\r\n            (itemNode.worldPosition.x + handOverPos.x) / 2 + randomLift(),\r\n            (itemNode.worldPosition.y + handOverPos.y) / 2 + 6,\r\n            (itemNode.worldPosition.z + handOverPos.z) / 2 + randomLift()\r\n        );\r\n        // 执行贝塞尔曲线动画\r\n        tween(itemNode)\r\n            .to(0.1, {\r\n                // scale: new Vec3(1, 1, 1)\r\n            }, {\r\n                easing: 'cubicInOut',\r\n                onUpdate: (target: Node, ratio: number) => {\r\n                    const position = MathUtil.bezierCurve(\r\n                        itemWorldPos,\r\n                        controlPoint,\r\n                        handOverPos,\r\n                        ratio\r\n                    );\r\n                    target.worldPosition = position;\r\n                }\r\n            })\r\n            .call(() => {\r\n                backpack.indexLength--;\r\n                this.randomizeItemsInBackpack(backpackIndex, count - 1);\r\n            })\r\n            .start();\r\n    }\r\n    \r\n    // 恢复指定背包中的物品位置\r\n    restoreItemsInBackpack(backpackIndex: number) {\r\n        const backpack = this.backpacks[backpackIndex];\r\n        if (!backpack?.parentNode) return;\r\n\r\n        const children = backpack.parentNode.children;\r\n        \r\n        // 计算需要归位的物品数量\r\n        let ii = 0;\r\n        if (backpack.indexLength - 2 >= 0) {\r\n            ii = backpack.indexLength - 2;\r\n        }\r\n        const itemsToRestore = children.length - ii;\r\n        \r\n        // 更新计数器\r\n        backpack.restoringCount = itemsToRestore;\r\n        this.totalRestoringCount += itemsToRestore;\r\n\r\n        // 为每个物品设置延迟动画\r\n        for (let i = ii; i < children.length; i++) {\r\n            // 使用立即执行函数解决闭包问题\r\n            (function (index) {\r\n                const itemNode = children[index];\r\n                if (!itemNode) {\r\n                    // 如果物品节点不存在，也需要减少计数器\r\n                    this.itemRestoreComplete(backpackIndex);\r\n                    return;\r\n                }\r\n\r\n                // 安排动画\r\n                this.scheduleOnce(() => {\r\n                    const originalPos = backpack.originalPositions.get(itemNode);\r\n                    if (!originalPos) {\r\n                        this.itemRestoreComplete(backpackIndex);\r\n                        return;\r\n                    }\r\n\r\n                    const currentPos = itemNode.getWorldPosition().clone();\r\n\r\n                    // 贝塞尔曲线控制点\r\n                    const controlPoint = new Vec3(\r\n                        (currentPos.x + originalPos.x) / 2,\r\n                        (currentPos.y + originalPos.y) / 2 + 5,\r\n                        (currentPos.z + originalPos.z) / 2\r\n                    );\r\n\r\n                    // 播放音效\r\n                    Global.soundManager.playPickUpSound();\r\n\r\n                    // 执行动画\r\n                    tween(itemNode)\r\n                        .to(0.3, {}, {\r\n                            easing: 'cubicInOut',\r\n                            onUpdate: (target: Node, ratio: number) => {\r\n                                const position = MathUtil.bezierCurve(\r\n                                    currentPos,\r\n                                    controlPoint,\r\n                                    originalPos,\r\n                                    ratio\r\n                                );\r\n                                target.worldPosition = position;\r\n                            }\r\n                        })\r\n                        .call(() => {\r\n                            // 单个物品动画完成\r\n                            this.itemRestoreComplete(backpackIndex);\r\n                        })\r\n                        .start();\r\n                }, index * 0.1);\r\n            }).call(this, i); // 绑定this并传递当前索引\r\n        }\r\n    }\r\n    \r\n    // 单个物品归位完成\r\n    private itemRestoreComplete(backpackIndex: number) {\r\n        const backpack = this.backpacks[backpackIndex];\r\n        if (!backpack) return;\r\n        \r\n        // 减少当前背包的归位计数器\r\n        backpack.restoringCount--;\r\n        // 减少全局归位计数器\r\n        this.totalRestoringCount--;\r\n        \r\n        // 重置当前背包的indexLength（当该背包所有物品都归位后）\r\n        if (backpack.restoringCount <= 0) {\r\n            backpack.indexLength = backpack.parentNode?.children.length - 1 || 0;\r\n        }\r\n        \r\n        // 检查是否所有物品都已归位\r\n        this.checkAllItemsRestored();\r\n    }\r\n    \r\n    // 检查是否所有物品都已归位\r\n    private checkAllItemsRestored() {\r\n        // 当全局计数器为0时，说明所有物品都已归位\r\n        if (this.totalRestoringCount <= 0) {\r\n            eventMgr.emit(EventType.GAME_OVER);\r\n        }\r\n    }\r\n\r\n    // 恢复所有背包中的物品位置\r\n    restoreItemsInAllBackpacks() {\r\n        // 重置计数器\r\n        this.totalRestoringCount = 0;\r\n        this.backpacks.forEach(backpack => {\r\n            backpack.restoringCount = 0;\r\n        });\r\n        \r\n        // 开始所有背包的物品归位\r\n        this.backpacks.forEach((_, index) => {\r\n            this.restoreItemsInBackpack(index);\r\n        });\r\n    }\r\n}"]}