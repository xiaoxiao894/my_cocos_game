#ifndef COMMON_INCLUDE
#define COMMON_INCLUDE

#include <Libs/hlslFunction.chunk>

float saturate(float x) {
  return clamp(x, 0.0, 1.0);
}

vec2 saturate(vec2 x) {
  return clamp(x, vec2(0.0), vec2(1.0));
}

vec3 saturate(vec3 x) {
  return clamp(x, vec3(0.0), vec3(1.0));
}

vec4 saturate(vec4 x) {
  return clamp(x, vec4(0.0), vec4(1.0));
}

float nrand(float x, float y) {
  return fract(sin(dot(vec2(x, y), vec2(12.9898, 78.233))) * 43758.5453);
}

float InterleavedGradientNoise(vec2 pixCoord)
{
     float3 magic = float3(0.06711056, 0.00583715, 52.9829189);
    // vec2 frameMagicScale = vec2(2.083, 4.867);
    // pixCoord += frameCount * frameMagicScale;
    return frac(magic.z * frac(dot(pixCoord, magic.xy)));
}

#endif